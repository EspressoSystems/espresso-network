version: "3"

networks:
  default:
    name: espresso-sequencer

services:
  demo-l1-network:
    image: ghcr.io/espressosystems/geth-l1:main
    command: --dev --dev.period=1
    ports:
      - $ESPRESSO_SEQUENCER_L1_PORT:8545
      - $ESPRESSO_SEQUENCER_L1_WS_PORT:8546
    volumes:
      - "./geth-config/genesis-default.json:/genesis.json"
      - "./geth-config/test-jwt-secret.txt:/config/test-jwt-secret.txt"

  deploy-contracts:
    image: ghcr.io/espressosystems/espresso-sequencer/deploy:main
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_DEPLOYER_ACCOUNT_INDEX
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      demo-l1-network:
        condition: service_healthy
      orchestrator:
        condition: service_healthy

  orchestrator:
    image: ghcr.io/espressosystems/espresso-sequencer/orchestrator:main
    ports:
      - "$ESPRESSO_ORCHESTRATOR_PORT:$ESPRESSO_ORCHESTRATOR_PORT"
    environment:
      - ESPRESSO_ORCHESTRATOR_PORT
      - ESPRESSO_ORCHESTRATOR_NUM_NODES
      - ESPRESSO_ORCHESTRATOR_START_DELAY
      - ESPRESSO_ORCHESTRATOR_NEXT_VIEW_TIMEOUT
      - ESPRESSO_ORCHESTRATOR_MIN_TRANSACTIONS
      - ESPRESSO_ORCHESTRATOR_MIN_PROPOSE_TIME
      - ESPRESSO_ORCHESTRATOR_MAX_PROPOSE_TIME
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT

  da-server:
    image: ghcr.io/espressosystems/espresso-sequencer/web-server:main
    ports:
      - "$ESPRESSO_DA_SERVER_PORT:$ESPRESSO_WEB_SERVER_PORT"
    environment:
      - ESPRESSO_WEB_SERVER_PORT
      - RUST_LOG=error
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      orchestrator:
        condition: service_healthy

  consensus-server:
    image: ghcr.io/espressosystems/espresso-sequencer/web-server:main
    ports:
      - "$ESPRESSO_CONSENSUS_SERVER_PORT:$ESPRESSO_WEB_SERVER_PORT"
    environment:
      - ESPRESSO_WEB_SERVER_PORT
      - RUST_LOG=error
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      orchestrator:
        condition: service_healthy

  state-relay-server:
    image: ghcr.io/espressosystems/espresso-sequencer/state-relay-server:main
    ports:
      - "$ESPRESSO_STATE_RELAY_SERVER_PORT:$ESPRESSO_STATE_RELAY_SERVER_PORT"
    environment:
      - ESPRESSO_STATE_RELAY_SERVER_PORT
      - ESPRESSO_STATE_SIGNATURE_WEIGHT_THRESHOLD
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT

  prover-service:
    image: ghcr.io/espressosystems/espresso-sequencer/prover-service:main
    ports:
      - "$ESPRESSO_PROVER_SERVICE_PORT:$ESPRESSO_PROVER_SERVICE_PORT"
    environment:
      - ESPRESSO_STATE_RELAY_SERVER_URL
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL
      - ESPRESSO_STATE_PROVER_UPDATE_INTERVAL
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_LIGHTCLIENT_ADDRESS
      - MNEMONIC=$ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_STATE_PROVER_ACCOUNT_INDEX
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
      - RAYON_NUM_THREADS
    depends_on:
      orchestrator:
        condition: service_healthy
      state-relay-server:
        condition: service_healthy
      demo-l1-network:
        condition: service_healthy
      deploy-contracts:
        condition: service_completed_successfully

  sequencer0:
    image: ghcr.io/espressosystems/espresso-sequencer/sequencer:main
    ports:
      - "$ESPRESSO_SEQUENCER_API_PORT:$ESPRESSO_SEQUENCER_API_PORT"
    # Run the full API server with all modules, default storage
    command: sequencer -- http -- query -- state -- status -- submit
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL
      - ESPRESSO_SEQUENCER_DA_SERVER_URL
      - ESPRESSO_SEQUENCER_CONSENSUS_SERVER_URL
      - ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_STATE_PEERS=http://sequencer1:$ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_STORAGE_PATH
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_STATE_RELAY_SERVER_URL
      - ESPRESSO_SEQUENCER_PRIVATE_STAKING_KEY=$ESPRESSO_DEMO_SEQUENCER_STAKING_PRIVATE_KEY_0
      - ESPRESSO_SEQUENCER_PRIVATE_STATE_KEY=$ESPRESSO_DEMO_SEQUENCER_STATE_PRIVATE_KEY_0
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_ETH_ACCOUNT_INDEX=10
      - ESPRESSO_SEQUENCER_PREFUNDED_BUILDER_ACCOUNTS
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      orchestrator:
        condition: service_healthy
      demo-l1-network:
        condition: service_healthy
      sequencer-db:
        condition: service_healthy
      state-relay-server:
        condition: service_healthy

  sequencer1:
    image: ghcr.io/espressosystems/espresso-sequencer/sequencer:main
    ports:
      - "$ESPRESSO_SEQUENCER1_API_PORT:$ESPRESSO_SEQUENCER_API_PORT"
    # Run the availability API only, using postgres for persistence
    command: sequencer -- storage-sql -- http -- query -- state
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL
      - ESPRESSO_SEQUENCER_DA_SERVER_URL
      - ESPRESSO_SEQUENCER_CONSENSUS_SERVER_URL
      - ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_API_PEERS=http://sequencer2:$ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_STATE_PEERS=http://sequencer2:$ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_POSTGRES_HOST=sequencer-db
      - ESPRESSO_SEQUENCER_POSTGRES_USER=postgres
      - ESPRESSO_SEQUENCER_POSTGRES_PASSWORD=password
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_STATE_RELAY_SERVER_URL
      - ESPRESSO_SEQUENCER_PRIVATE_STAKING_KEY=$ESPRESSO_DEMO_SEQUENCER_STAKING_PRIVATE_KEY_1
      - ESPRESSO_SEQUENCER_PRIVATE_STATE_KEY=$ESPRESSO_DEMO_SEQUENCER_STATE_PRIVATE_KEY_1
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_ETH_ACCOUNT_INDEX=11
      - ESPRESSO_SEQUENCER_PREFUNDED_BUILDER_ACCOUNTS
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      orchestrator:
        condition: service_healthy
      demo-l1-network:
        condition: service_healthy
      state-relay-server:
        condition: service_healthy

  sequencer2:
    image: ghcr.io/espressosystems/espresso-sequencer/sequencer:main
    ports:
      - "$ESPRESSO_SEQUENCER2_API_PORT:$ESPRESSO_SEQUENCER_API_PORT"
    # Run the status API only. Load config from the file system.
    command: sequencer -- storage-fs -- http -- status -- state
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL
      - ESPRESSO_SEQUENCER_DA_SERVER_URL
      - ESPRESSO_SEQUENCER_CONSENSUS_SERVER_URL
      - ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_API_PEERS=http://sequencer1:$ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_STATE_PEERS=http://sequencer3:$ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_STATE_RELAY_SERVER_URL
      - ESPRESSO_SEQUENCER_PRIVATE_STAKING_KEY=$ESPRESSO_DEMO_SEQUENCER_STAKING_PRIVATE_KEY_2
      - ESPRESSO_SEQUENCER_PRIVATE_STATE_KEY=$ESPRESSO_DEMO_SEQUENCER_STATE_PRIVATE_KEY_2
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_ETH_ACCOUNT_INDEX=12
      - ESPRESSO_SEQUENCER_PREFUNDED_BUILDER_ACCOUNTS
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      orchestrator:
        condition: service_healthy
      demo-l1-network:
        condition: service_healthy
      state-relay-server:
        condition: service_healthy

  sequencer3:
    image: ghcr.io/espressosystems/espresso-sequencer/sequencer:main
    ports:
      - "$ESPRESSO_SEQUENCER3_API_PORT:$ESPRESSO_SEQUENCER_API_PORT"
    # Run the submit API only. Load config from the file system.
    command: sequencer -- storage-fs -- http -- submit -- state
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL
      - ESPRESSO_SEQUENCER_DA_SERVER_URL
      - ESPRESSO_SEQUENCER_CONSENSUS_SERVER_URL
      - ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_STATE_PEERS=http://sequencer4:$ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_STATE_RELAY_SERVER_URL
      - ESPRESSO_SEQUENCER_PRIVATE_STAKING_KEY=$ESPRESSO_DEMO_SEQUENCER_STAKING_PRIVATE_KEY_3
      - ESPRESSO_SEQUENCER_PRIVATE_STATE_KEY=$ESPRESSO_DEMO_SEQUENCER_STATE_PRIVATE_KEY_3
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_ETH_ACCOUNT_INDEX=13
      - ESPRESSO_SEQUENCER_PREFUNDED_BUILDER_ACCOUNTS
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      orchestrator:
        condition: service_healthy
      demo-l1-network:
        condition: service_healthy
      state-relay-server:
        condition: service_healthy

  sequencer4:
    image: ghcr.io/espressosystems/espresso-sequencer/sequencer:main
    ports:
      - "$ESPRESSO_SEQUENCER4_API_PORT:$ESPRESSO_SEQUENCER_API_PORT"
    # Run the minimal server with healthcheck only
    command: sequencer -- http -- state
    environment:
      - ESPRESSO_SEQUENCER_ORCHESTRATOR_URL
      - ESPRESSO_SEQUENCER_DA_SERVER_URL
      - ESPRESSO_SEQUENCER_CONSENSUS_SERVER_URL
      - ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_STATE_PEERS=http://sequencer0:$ESPRESSO_SEQUENCER_API_PORT
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_STATE_RELAY_SERVER_URL
      - ESPRESSO_SEQUENCER_PRIVATE_STAKING_KEY=$ESPRESSO_DEMO_SEQUENCER_STAKING_PRIVATE_KEY_4
      - ESPRESSO_SEQUENCER_PRIVATE_STATE_KEY=$ESPRESSO_DEMO_SEQUENCER_STATE_PRIVATE_KEY_4
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_ETH_ACCOUNT_INDEX=14
      - ESPRESSO_SEQUENCER_PREFUNDED_BUILDER_ACCOUNTS
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      orchestrator:
        condition: service_healthy
      demo-l1-network:
        condition: service_healthy
      state-relay-server:
        condition: service_healthy

  commitment-task:
    image: ghcr.io/espressosystems/espresso-sequencer/commitment-task:main
    ports:
      - "$ESPRESSO_COMMITMENT_TASK_PORT:$ESPRESSO_COMMITMENT_TASK_PORT"
    environment:
      - ESPRESSO_SEQUENCER_ETH_MNEMONIC
      - ESPRESSO_SEQUENCER_HOTSHOT_ACCOUNT_INDEX
      - ESPRESSO_COMMITMENT_TASK_PORT
      - ESPRESSO_SEQUENCER_URL
      - ESPRESSO_SEQUENCER_L1_PROVIDER
      - ESPRESSO_SEQUENCER_HOTSHOT_ADDRESS
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      sequencer0:
        condition: service_healthy
      demo-l1-network:
        condition: service_healthy
      deploy-contracts:
        condition: service_completed_successfully

  submit-transactions:
    image: ghcr.io/espressosystems/espresso-sequencer/submit-transactions:main
    ports:
      - "$ESPRESSO_SUBMIT_TRANSACTIONS_PORT:$ESPRESSO_SUBMIT_TRANSACTIONS_PORT"
    environment:
      - ESPRESSO_SUBMIT_TRANSACTIONS_SUBMIT_URL=$ESPRESSO_SEQUENCER_URL
      - ESPRESSO_SUBMIT_TRANSACTIONS_DELAY
      - ESPRESSO_SUBMIT_TRANSACTIONS_PORT
      - RUST_LOG
      - RUST_LOG_FORMAT
      - ASYNC_STD_THREAD_COUNT
    depends_on:
      sequencer0:
        condition: service_healthy

  sequencer-db:
    image: postgres
    ports:
      - "$ESPRESSO_SEQUENCER_DB_PORT:5432"
    environment:
      - POSTGRES_PASSWORD=password
    healthcheck:
      # Postgres can be falsely "ready" once before running init scripts.
      # See https://github.com/docker-library/postgres/issues/146 for discussion.
      test: "pg_isready && sleep 1 && pg_isready"
      interval: 5s
      timeout: 4s
      retries: 20
