rd_("ClPrivate type alias for the EC pairing type parameter for \xe2\x80\xa6DePrivate type alias for the hash type parameter for <code>Advz</code>.BnTODO: remove h and beta_h The generator of G2.00ClThe constants K0, \xe2\x80\xa6, K_num_wire_types that ensure wire \xe2\x80\xa600lThe DA topic0CmMessages related to the sequencing consensus protocol for \xe2\x80\xa6CkThe <code>Da</code> topic goes out to only the DA committeeCgA pending view with an available block but not leaf \xe2\x80\xa63AjReset file system storage.0CaTrait that bundles what we need from a request IDBathe node should not hit view syncAjContains the success value0gsuccess111FeFor the <code>Qc2Formed</code>, <code>ExtendedQc2Formed</code>, and <code>EpochRootQcFormed</code>\xe2\x80\xa6BlType of the actual quorum certificate objectA`spin the node upAaV0 proof for ADVZ0BcDisperse type for first VID versionBmVID disperse share type for first version VIDChV1 proof for AvidM, contains only correct encoding proof0AlPlace holder for VID upgradeCkVID disperse share type after epoch upgrade and VID upgradeBoSets the address and returns <code>self</code>.000000000000000000000000000000000000000000000000000000000000000CdThe task which implements the main parts of data \xe2\x80\xa6Amwhether the node is a DA nodeAguid for instrumentationAahuman readable idCbGet a reference to the network node handle\xe2\x80\x99s id.1AcThe id of this nodeoThe node\xe2\x80\x99s id00AaThis state\xe2\x80\x99s ID0kNode\xe2\x80\x99s id0AhOur node id; for logging02gNode idmThis nodes id111111111455555555DeReturns true if <code>E</code> is the type held by this error object.jL1 RPC URLChCreate an or dependency from this dependency and anotherBdPhantom data for the connection typeAhthis node\xe2\x80\x99s public keyDiImplementation for <code>BitVectorQc</code> that uses BLS signature + \xe2\x80\xa6CkThe quorum certificate (QC) trait is a certificate of a \xe2\x80\xa6CoThe QC signing the most recent leaf in <code>leaf_chain</code>.kThe raw QC.mThe basic QC.AaTask\xe2\x80\x99s receiverAkThe address to transfer to.AjStop counting at block TO.dtype00CkThe original prover for light client V1 Light client V1 \xe2\x80\xa6CmLight client V2 prover, where we allow stake table update \xe2\x80\xa6CjLight client V3 prover, where we introduce a new field \xe2\x80\xa6CiThe verifying key. It is used by prover to initialize \xe2\x80\xa600BeGeneric error while accessing the APIBmFor the <code>DaCertificateRecv</code> event.AhContains the error value0A`safety violation111DfEvent with signature <code>Log(string,uint256)</code> and selector \xe2\x80\xa60AhTrait for logging errorsCoThe concrete <code>Row</code> implementation for this database.AbReset SQL storage.0BhFor the <code>VidShareRecv</code> event.CbRequest VID data by our key and the VID commitmentAmthe node should hit view syncCnphantom data for <code>THRESHOLD</code> and <code>TYPES</code>mPhantom for Nnphantom markerAlPhantom data for TYPES and IAaPhantom for TYPESC`phantom data for the <code>Versions</code> trait555555555555555lphantom dataCnadd attempts to add the two MonetaryValues together.  This \xe2\x80\xa6AjAdd a value to the counterClAdd this as an optional module. Return the next optional \xe2\x80\xa6CiCreate an and dependency from this dependency and anotherCkbtc is a convenience function to create a MonetaryValue \xe2\x80\xa6B`cdf of nodes by cumulative stakeCcdefines the swarm and network definition (internal)AoDependency this tasks waits forDhThe DHT store. We use a <code>PersistentStore</code> to occasionally \xe2\x80\xa6AgWrapper around Kademlia1CbHolds the types and functions for DRB computation.jDRB resultCkesp is a convenience function to create a MonetaryValue \xe2\x80\xa6Cketh is a convenience function to create a MonetaryValue \xe2\x80\xa6oFee informationAoConvert a Multiaddr to a stringCbfmt formats the error into a human readable string0Cjfmt formats the currency code into a human readable stringCgfmt formats the MonetaryValue into a human readable \xe2\x80\xa6CfSend an HTTP GET request and deserialize the response.Adtime when GST occursAethe index of the nodeAbthe key to look upnthe key to putAeThe key of the recordnThe actual keyAdKey to publish underAaKey to search forAbGet the public keyBkThe public key associated with this request00CkOur public key. The ensures that the recipient can reply toBjThe private key to get the public key for.BhThe key that we are holding a permit for1BiNumber of entries in the namespace table.C`Return the length in bytes of this multiaddress.BhThe number of transactions in the block.0CnLog a <code>anytrace::Error</code> at the corresponding level.CmLog an error via <code>tracing</code> utilities, printing it.1BgThe list of <code>MemoryNetwork</code>s0BcTransform the result of this fetch.AfExponential max delay.0CjMaximum value, open-ended. Numbers returned will be 0..maxCiCreate a new error object from a printable error message.AgReturns the minimum of:AiTODO restrict visibility?DkCreate a new <code>SwitchingTransport</code> with the given options and \xe2\x80\xa6CcConstruct a new L1 client with the default options.EfReturns the <code>Transaction</code> indicated by <code>index</code>, along with a \xe2\x80\xa6DkReturns the payload bytes for the <code>index</code>th namespace, along \xe2\x80\xa6ClCreate a new <code>SingleTransport</code> with the given URLDfCreates a new <code>Arc&lt;SystemContext&gt;</code> with the given \xe2\x80\xa6BaCreate a new, empty message cachekConstructorCaPopulate the metrics with Libp2p-specific metricsCmConstructs new network for a node. Note that this network \xe2\x80\xa6BkCreate a new, empty, <code>MasterMap</code>DiCreates a new <code>MemoryNetwork</code> and hooks it up to the group \xe2\x80\xa6BoPopulate the metrics with the CDN-specific onesDeCreate a new <code>PushCdnNetwork</code> (really a client) from a \xe2\x80\xa6DiCreates a new <code>GlobalState</code> with the given parameters. The \xe2\x80\xa6DhCreates a new wrapper around an on-chain <code>BN254</code> contract \xe2\x80\xa60DhCreates a new wrapper around an on-chain <code>IPlonkVerifier</code> \xe2\x80\xa60DeCreates a new wrapper around an on-chain <code>LightClient</code> \xe2\x80\xa6022DcCreates a new wrapper around an on-chain <code>EdOnBN254</code> \xe2\x80\xa60DdCreates a new wrapper around an on-chain <code>StakeTable</code> \xe2\x80\xa60DfCreates a new wrapper around an on-chain <code>ERC1967Proxy</code> \xe2\x80\xa60DkCreates a new wrapper around an on-chain <code>EspToken</code> contract \xe2\x80\xa60DdCreates a new wrapper around an on-chain <code>EspTokenV2</code> \xe2\x80\xa60DeCreates a new wrapper around an on-chain <code>FeeContract</code> \xe2\x80\xa608877DfCreates a new wrapper around an on-chain <code>IRewardClaim</code> \xe2\x80\xa60998877BlCreates a new wrapper around an on-chain \xe2\x80\xa60::998800::998800::9988DiCreates a new wrapper around an on-chain <code>LightClientMock</code> \xe2\x80\xa60;;::99DgCreates a new wrapper around an on-chain <code>LightClientV2</code> \xe2\x80\xa60<<;;::DkCreates a new wrapper around an on-chain <code>LightClientV2Mock</code> \xe2\x80\xa60==<<;;DgCreates a new wrapper around an on-chain <code>LightClientV3</code> \xe2\x80\xa60>>==<<DkCreates a new wrapper around an on-chain <code>LightClientV3Mock</code> \xe2\x80\xa60DkCreates a new wrapper around an on-chain <code>TimelockController</code>\xe2\x80\xa60DeCreates a new wrapper around an on-chain <code>OpsTimelock</code> \xe2\x80\xa60DkCreates a new wrapper around an on-chain <code>OwnableUpgradeable</code>\xe2\x80\xa60DhCreates a new wrapper around an on-chain <code>BN254</code> contract \xe2\x80\xa60DhCreates a new wrapper around an on-chain <code>IPlonkVerifier</code> \xe2\x80\xa60DgCreates a new wrapper around an on-chain <code>PlonkVerifier</code> \xe2\x80\xa602211DiCreates a new wrapper around an on-chain <code>PlonkVerifierV2</code> \xe2\x80\xa603322DiCreates a new wrapper around an on-chain <code>PlonkVerifierV3</code> \xe2\x80\xa60DeCreates a new wrapper around an on-chain <code>RewardClaim</code> \xe2\x80\xa6088DjCreates a new wrapper around an on-chain <code>SafeExitTimelock</code> \xe2\x80\xa6066DcCreates a new wrapper around an on-chain <code>EdOnBN254</code> \xe2\x80\xa60DdCreates a new wrapper around an on-chain <code>StakeTable</code> \xe2\x80\xa60DfCreates a new wrapper around an on-chain <code>StakeTableV2</code> \xe2\x80\xa60BlCreate reward auth data from proof siblings.:9DeCreates a new wrapper around an on-chain <code>LightClient</code> \xe2\x80\xa6DiCreates a new wrapper around an on-chain <code>LightClientMock</code> \xe2\x80\xa6<;1DgCreates a new wrapper around an on-chain <code>LightClientV2</code> \xe2\x80\xa6=<2DkCreates a new wrapper around an on-chain <code>LightClientV2Mock</code> \xe2\x80\xa6>=3DgCreates a new wrapper around an on-chain <code>LightClientV3</code> \xe2\x80\xa6?>4DkCreates a new wrapper around an on-chain <code>LightClientV3Mock</code> \xe2\x80\xa6DhCreates a new wrapper around an on-chain <code>BN254</code> contract \xe2\x80\xa6:98DfCreates a new wrapper around an on-chain <code>ERC1967Proxy</code> \xe2\x80\xa6DkCreates a new wrapper around an on-chain <code>EspToken</code> contract \xe2\x80\xa6DdCreates a new wrapper around an on-chain <code>EspTokenV2</code> \xe2\x80\xa6DeCreates a new wrapper around an on-chain <code>FeeContract</code> \xe2\x80\xa6:98765DeCreates a new wrapper around an on-chain <code>OpsTimelock</code> \xe2\x80\xa6DkCreates a new wrapper around an on-chain <code>OwnableUpgradeable</code>\xe2\x80\xa6DgCreates a new wrapper around an on-chain <code>PlonkVerifier</code> \xe2\x80\xa6DiCreates a new wrapper around an on-chain <code>PlonkVerifierV2</code> \xe2\x80\xa6DiCreates a new wrapper around an on-chain <code>PlonkVerifierV3</code> \xe2\x80\xa6DeCreates a new wrapper around an on-chain <code>RewardClaim</code> \xe2\x80\xa6DjCreates a new wrapper around an on-chain <code>SafeExitTimelock</code> \xe2\x80\xa6DdCreates a new wrapper around an on-chain <code>StakeTable</code> \xe2\x80\xa6DfCreates a new wrapper around an on-chain <code>StakeTableV2</code> \xe2\x80\xa6AkConstruct a new transactionBcCreate a new NonRepeatValueIteratorBaCreate a new StableQuorumIteratorBhCreate a new RandomOverlapQuorumIteratorAbCreate new backoffAjCreate a new DHT behaviourDgCreate a new <code>PersistentStore</code> with the given underlying \xe2\x80\xa6D`Create a new <code>DhtFilePersistence</code> with the given pathDhCreate a new <code>ValidatedStore</code> with the given underlying storeBiCreates and returns a new unsigned recordCiCreate and return a new record key in the given namespaceCbCreate a new instance of a <code>NetworkDef</code>CkCreates a new <code>Network</code> with the given settings.DgCreate a new <code>ConsensusKeyAuthentication</code> transport that \xe2\x80\xa6DcCreate a new <code>Cbor</code> codec with the given request and \xe2\x80\xa6Bkcreate a new <code>OrchestratorState</code>ChCreates the client that will connect to the orchestratorBnCollect information about a <code>Leaf</code>.0CnConstruct a new builder with the given storage and fetcher \xe2\x80\xa6BnCreate a new error object from any error type.Cknew creates a new MonetaryValue instance with the given \xe2\x80\xa6ChConstruct a public input from light client state and \xe2\x80\xa6fErrors010010BiCreate a new <code>EventDependency</code>BhCreate a new <code>DependencyTask</code>AaCreate a new taskAjCreate a new task registry0BdConstruct a new client from base urlCgCreate the network request state with the info it needs3BkCreate new <code>RandomBuilderSource</code>DeCreate a new <code>UpgradeLock</code> for a fresh instance of HotShotBgCreate a new instance of this time unitBjcreate new <code>SynchronousNetwork</code>Bkcreate new <code>AsynchronousNetwork</code>Cccreate new <code>PartiallySynchronousNetwork</code>CbBuild a header with the parent validate state, \xe2\x80\xa6AbCreate a committeeDjCreates a new instance of <code>ConsensusReadLockGuard</code> with the \xe2\x80\xa6DkCreates a new instance of <code>ConsensusWriteLockGuard</code> with the \xe2\x80\xa6DkCreates a new instance of <code>ConsensusUpgradableReadLockGuard</code> \xe2\x80\xa6DcCreate a new instance of <code>OuterConsensus</code>, hopefully \xe2\x80\xa6lConstructor.DdCreate a new instance of this <code>ConsensusMetricsValue</code> \xe2\x80\xa6BiCreate a new number with the given value.0BgCreate a new <code>PackedBundle</code>.CcConstructor with initial values for epochs 1 and 2.BdCreate an EpochMembershipCoordinator55ChCreates a new instance of <code>SimpleCertificate</code>AjCreate a certificate pair.CbCreate a new <code>VersionedVoteData</code> structDjCreate a new instance of this <code>StorageMetricsValue</code> struct, \xe2\x80\xa6Ck[new] creates a new [ProcessConsumeLeafStreamTask] that \xe2\x80\xa6Cm[new] creates a new ProcessNodeIdentityUrlStreamTask that \xe2\x80\xa6Ci[new] creates a new [ProcessLeafStreamTask] that will \xe2\x80\xa6Cj[new] creates a new ProcessNodeIdentityStreamTask that \xe2\x80\xa6CiCreate a new ClientState with the given client_id and \xe2\x80\xa6Cnnew creates a new InternalClientMessageProcessingTask with \xe2\x80\xa6Ag[new] creates a new \xe2\x80\xa60Ck[new] creates a new ProcessDistributeVotersHandlingTask \xe2\x80\xa6Cn[new] creates a new ProcessDistributeStakeTableHandlingTask\xe2\x80\xa6Cn[new] creates a new ProcessDistributeValidatorHandlingTask \xe2\x80\xa6CcCreate a new [<code>RequestResponseProtocol</code>]DfCreate a new bounded <code>VecDeque</code> with the given maximum sizeChCreate a new named semaphore, specifying the maximum \xe2\x80\xa6DbCreate a new <code>ParallelStateCatchup</code> with two providers.kConstructorCcCreate a new RequestResponseProtocol from the innerDfCreates a new <code>ExternalEventHandler</code> with the given networkAeInit the server stateDfCreate a new instance of this <code>PersistenceMetricsValue</code> \xe2\x80\xa6BhConstruct a new <code>AvidMParam</code>.BkConstruct a new <code>AvidmGf2Param</code>.CbGet the index of the <code>nth</code> transaction.0AmNumber of setups to generate.0BoWrite deployment results to OUT as a .env file.BkWrite private keys to .env files under DIR.0gpeer idEfPops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the \xe2\x80\xa6ChProof of inclusion for element at index <code>pos</code>DkOverride the <code>put</code> method to potentially sync the DHT to the \xe2\x80\xa6DgOverwrite the <code>put</code> method to validate the record before \xe2\x80\xa6AnRandom number generator to useAbRun bootstrap taskAiSpawn the dependency taskCmSpawn the task loop, consuming self.  Will continue until \xe2\x80\xa60AcSet the gauge valueCnsub attempts to subtract the two MonetaryValues together.  \xe2\x80\xa6CdUse TLS for an encrypted connection to the database.Amexpiratiry for records in DHT00000AjGet the u64 format of timeAeReturn the u64 format0BdDatabase URI for Postgres or SQLite.BdThe address the orchestrator runs on0BkThe URL of the query service to connect to.AkEspresso query service URL.BaURL of the HotShot query service.Ckusd is a convenience function to create a MonetaryValue \xe2\x80\xa6Dj<code>Fetchable</code> implementation for <code>VidCommonQueryData</code>.CjThe task which implements verifiable information dispersalAeThis module provides:BgVerifiable Information Retrieval (VID).AmInternal Jellyfish VID schemeBcThe main component of the push CDN.0CjWhitelist is a service that updates the allowed public \xe2\x80\xa6BiA minified development version of the CDNCkThe base version of HotShot this node is instantiated with.DbForked <code>cbor</code> codec with altered request/response sizeslData messageBoMessages relating to sharing data between nodesAbspin the node downBbthe test task failed with an errorCmwe source the network configuration from a config file on \xe2\x80\xa6CaRead from file path with optional format overrideBcWrite to file with specified formatAcRun an HTTP server.AeThe minimal HTTP API.dINFOCkInitialize the config file with deployment and wallet info.CnCartesian product of <code>NsIter</code>, <code>TxIter</code>.0BiEnumerate the transactions in this block.0AgSign using private keysCaCallback when fetching the leaf for its own sake.nUndecided viewCiThis is the consensus-internal analogous concept to a \xe2\x80\xa6BnA request for the leaf chain at a given height0BdSend a message directly to many keysAgThe Solidity type name.00000000000000000000000000000000000000000000BjThe display name for this database driver.Ana node participating in a testCkThe Sequencer node is generic over the hotshot CommChannel.BgNo phase; before the protocol has begunBaBroadcast the message immediatelyAdthe test task passedCnMarker type indicating a transaction with read-only access \xe2\x80\xa60DhA task handle which can be joined, but is cancelled on <code>Drop</code>ClA basic task which loops waiting for events to come from \xe2\x80\xa6B`Upgrade based on unix timestamp.0BoTime compatibility needed for reward collection0AfUpgrade based on view.0BoThe time type that this hotshot setup is using.BdDelay the broadcast to a given view.CgThis exists so we can perform state transitions mutablyAkMessage with a quorum vote.0AfA quorum vote was sentCnA simple vote that has a signer and commitment to the data \xe2\x80\xa6dWARNDkTrait for a <code>std::result::Result</code> that can be wrapped into a \xe2\x80\xa6CeThis module contains the original namespace proof \xe2\x80\xa6BoProvides the implementation for ADVZ VID schemeBnOptional arguments for the <code>action</code>hfor B256A`Return an error.0AoExponential backoff base delay.0CmAdd an argument and return its name as a formal parameter \xe2\x80\xa6CcThis should not be required, but it is. Version \xe2\x80\xa6DbForked <code>cbor</code> codec with altered request/response sizesCmcode returns a string identifier to uniquely identify the \xe2\x80\xa60CgThe code for this error will uniquely identify this \xe2\x80\xa6CiThe data to send with the call e.g. the calldata of a \xe2\x80\xa6AnSerialized data of the message0hthe dataCmThe data this certificate is for.  I.e the thing that was \xe2\x80\xa6DhProvides types useful for representing <code>HotShot</code>\xe2\x80\x99s data \xe2\x80\xa6AhThe data being proposed.44222222222222222BcThe leaf commitment being voted on.000000000000000Adunderlying vote dataBeGet the commitment which was voted onBmGets the data which was voted on by this voteAkDependencies being combined0CnDial a remote peer. This function is changed to perform an \xe2\x80\xa6DbConsume the selector and return a <code>Result</code> with the \xe2\x80\xa600000000000000000000000A`Builder fee dataAoReturns the argument unchangedkfrom converts an i128 into a MonetaryValue with the USD \xe2\x80\xa6111111111111111111111111111111111111111111111111111111111111111111111111111CeThe block height of the block that starts the window.22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222AkCreate new object from Opt.BdCreate new object from &amp;mut Opt.4104444444444444444444444444444444444444AoStart counting from block FROM.5555555555555555555555AmThe hash of this transaction.0CmA unique identifier for the specific protocol being voted \xe2\x80\xa6CkThe relevant snapshot of the L1 includes a reference to \xe2\x80\xa60BhSet the hostname of the database server.CaHostname for the remote Postgres database server.BbCreate an error at the info level.0DeInitializes a new <code>SystemContext</code> and does the work of \xe2\x80\xa6ChInit the system parameters (some fixed, some adjustable)BhInitialize the ledger with genesis state1010CgInitialize logging and panic handlers based on this \xe2\x80\xa6BaCalls <code>U::from(self)</codeaIterator over all transactions in this namespace.CkIterator over all unique namespaces in the namespace table.BlReturns the components of this multiaddress.BjList the transaction indices in the block.0B`Number of parallel tasks to run.00CaWait for the task to complete and get its output.AoWait for consensus to complete.BjWait for all background tasks to complete.A`The message kind0De<code>Fetchable</code> implementation for <code>LeafQueryData</code>.mProposed leafmDecided leaf.0DdCreate a <code>HotShotInitializer</code> from the given information.CmLoad the DHT (as a list of serializable records) from the \xe2\x80\xa6BbLoad the DHT from the file on diskBbLoad an object from local storage.AcDon\xe2\x80\x99t do anything2AnLoad the DHT from the databaseD`Creates a new call builder for the [<code>mint</code>] function.C`indicate if it\xe2\x80\x99s for the mock verification keyCcThe mode of the upgrade (time-based or view-based).0BiReturns the name of the catchup provider.D`Creates a new call builder for the [<code>name</code>] function.0ChThe name of this type of object, for debugging purposes.AfGet the Migration NameBffunctionality of a libp2p network nodeBbA node\xe2\x80\x99s view of a HotShot chainChNode storage implementation for a database query engine.DhOpen an existing FileSystemDataSource from storage at <code>path</code>.0DeOpen an existing FileSystemStorage from storage at <code>path</code>.BbPath to the replica stats CSV fileBaPath to the leader stats CSV fileAlThe path to the file on diskBaStorage path for persistent data.CkBase directory for the SQLite database. The SQLite file \xe2\x80\xa6ChThis function is where we perform the authentication \xe2\x80\xa6ClSets the database connection pool This allows reusing an \xe2\x80\xa6BcThe port we should be accessible onCaSet the port on which to connect to the database.CmIf daemon and provided, the service will run a basic HTTP \xe2\x80\xa6BlPort on which to serve the nasty-client API.Ciport is the port that the node validator service will \xe2\x80\xa6AjPort to run the server on.BbPort to run the builder server on.B`Port that the HTTP API will use.BmPort for the remote Postgres database server.63CmEnable an HTTP server with a healthcheck endpoint on this \xe2\x80\xa6CjAdds an already-parsed address component to the end of \xe2\x80\xa6DePush an item into the bounded <code>VecDeque</code>, removing the \xe2\x80\xa6AcReexport rand crateAeReturn a random valueAfReturns a random valueBiRead and parse bytes from the ns payload.CaStart a read-only transaction on the data source.0CiLocks inner consensus for reading and leaves debug tracesAdrecv a network eventAjThe salt for the operationCkSave the DHT (as a list of serializable records) to the \xe2\x80\xa6B`Save the DHT to the file on diskAcDon\xe2\x80\x99t do anything1AlSave the DHT to the databaseBbunique seed (for randomness? TODO)00AiSeed for generating keys.BaSeed for reproducible randomness.1CnSign a message of arbitrary data and return the serialized \xe2\x80\xa6AcProduce a signature0CkProduces a partial signature on a message with a single \xe2\x80\xa6BcSign a message with the signing key3AeAsync task utilities.A`Basic task typesAjA module with test helpersAbfor alloy\xe2\x80\x99s U2560ChThe list of configured HTTP URLs to use for RPC requests0Bblist of query service URLs. If \xe2\x80\xa6AnSet the DB user to connect as.AlPostgres user to connect as.AkUtility types and functionskVersion 0.1AnVersion 0.2. No changes in APIAhView of missing proposalkview numberBjThe view which we are collecting votes forBcView of the votes we are collecting111111111CkLast seen view, we won\xe2\x80\x99t request for proposals before \xe2\x80\xa6AhView this message is forAgView the timeout is for05BhVote, Accumulator, and Certificate TypesBbCreate an error at the warn level.0DaLike <code>Multiaddr::push</code> but consumes <code>self</code>.BiWrap the value into a <code>Result</code>CeModule containing a contract\xe2\x80\x99s types and functions.00000000000000000000AdComplete block info.BgA type alias for a shareable byte arrayeDEBUGCjThe type of the state delta this state is associated with.0Aidummy (TODO delete later)oStubbed out AckBdThe channel is empty but not closed.0AlSame as above but for epoch.CgThe error type for this particular type of ledger stateBeThe error type for this type of blockBoA view encountered an error and was interrupted0CjThere was an error while trying to fetch the requested \xe2\x80\xa60DcThe <code>Error</code> type, a wrapper around a dynamic error type.0ClError is an enum that represents the various errors that \xe2\x80\xa6BbType of error produced by the taskBhError type for this type of block header67DcThe error type returned by methods like <code>lookup_leader</code>.66eERRORomain error typeCiA status event emitted by a <code>HotShot</code> instance0BkType of event sent and received by the task01BjAn in-progress request to fetch some data.0AjPeer returned us some dataoA Gauge metric.BeA gauge that stores the latest value.BcLength, in bytes, of a 256 bit hashBcLength, in bytes, of a 512 bit hashAgIndex of a transaction.0CiThis is the consensus-internal analogous concept to a \xe2\x80\xa60AcPossible log levelslOther errorsnVID ParameterseProof00lprune a peerAgRemove the config file.AiRun the query API module.BaOptions for the query API module.nVID Share typeDeSNAFU context selector for the <code>EventError::Error</code> variantBlState used for random walk and bootstrappingBaOptions for the state API module.BeRead from stdin with specified formatCkThe enum for the topics we can subscribe to in the Push CDNAoUsed when broadcasting messages1eTRACECgThe concrete type used to hold an owned copy of the \xe2\x80\xa6AkMessage with a quorum vote.ChMarker type indicating a transaction with read-write \xe2\x80\xa60itest onlyCkThis module contains the namespace proof implementation \xe2\x80\xa6BmProvides the implementation for AVID-M schemeCmThis module implements the AVID-M scheme, whose name came \xe2\x80\xa6CjEspresso block number at which to check (default: latest).CdL1 block number at which to check (default: latest).Dm<code>Fetchable</code> implementation for <code>BlockQueryData</code> and \xe2\x80\xa6EaCreate a new <code>Box&lt;dyn Metrics&gt;</code> with this <code>NoMetrics</code>BgBuilds a new <code>DeployerArgs</code>.BlBuilds a new <code>NetworkNodeConfig</code>.CdConsume the selector and return the associated error0001CaBuilds a new <code>TypePathBracketedArray</code>.BhBuilds a new <code>CrossTestData</code>.BcBuilds a new <code>TestData</code>.3333333333333CkBuild a <code>FetchingDataSource</code> with these options.444444AoA function that takes as input:005BiGet reference to raw bytes of transactionCjAn iterator of the chain of source errors contained by \xe2\x80\xa6Cmcheck the quorum certificate for the assembled signature, \xe2\x80\xa6AmCheck the result of the test.1CmChecks an aggregated signature over some message provided \xe2\x80\xa6CjCount of nodes in the source quorum being filtered againstBcCreate an error at the debug level.0CoThe delay for the operation, must be &gt;= the timelock\xe2\x80\x99s \xe2\x80\xa6AmDelay before requesting peersBkMean delay between submitting transactions.AeOptional state delta.BjOptional application-specific state delta.0Cdreturn a dummy proof instance with all random fieldsA`dummy challengeseelems00CfBuild the payload and metadata for genesis/null block.BaCreate a new, empty multiaddress.1BeEpoch in which this leaf was created.BkThe current epoch number of the stake tablelepoch numberBkThe epoch which we are collecting votes forBfReturns <code>Epoch</code> if possibleCgAn epoch to which the data belongs to. Relevant for \xe2\x80\xa60BgReturn an underlying proposal\xe2\x80\x99s epoch06AnEpoch this proposal applies toCnThe epoch number corresponding to the block number. Can be \xe2\x80\xa60BjEpoch the data of this proposal belongs to0CcThe epoch number for which this VID data belongs toBkThe epoch we are calculating the result forBiGet the epoch this membership is good forDiEpoch the <code>membership</code> is guaranteed to have a stake table \xe2\x80\xa6BmThe epoch number this certificate belongs to.BcThe epoch of the light client state0AjReturns <code>Epoch</code>CfThe first epoch in which the upgrade will be in effect<lEpoch number0000A`The epoch number0AdThe underlying error0BcError type for <code>HotShot</code>11BcCreate an error at the error level.0AdThe underlying eventCjEvents that a <code>SystemContext</code> instance can emit11CdEvents that a <code>HotShot</code> instance can emit22CfSpawn an active fetch for the requested object, if \xe2\x80\xa6CkExecute the query and return the generated results as a \xe2\x80\xa60AaFetch a resource.CgFetches the <code>VidCommon</code> for a given request.CbFetches the <code>Leaf</code> for a given request.CeFetches the <code>Payload</code> for a given request.AmDon\xe2\x80\x99t ask for confirmation.oimplementations00dimpl00CiThe next call to next() will emit the value with this \xe2\x80\xa60CiThe (0-based) position of this transaction within its \xe2\x80\xa60B`Index number of the given share.0Beholds the state of the libp2p networkAiThe actual internal state10BhThe underlying transport we are wrappingBhGet a copy of the (shared) inner storageBbAccess the underlying data source.BmThe underlying map of keys to their semaphore0CiThe inner implementation of the request-response protocolAoThe inner <code>VecDeque</code>2BjThe actual inner request response protocolDiSend a <code>Vec&lt;u8&gt;</code> message to the inner <code>input</code>AbInput for messagesBcWhether or not this validator is DAB`Whether or not we are a DA node.elevelAanodes in the testDaCreates a new call builder for the [<code>owner</code>] function.000000000000000AeThe address to check.CmNumber of SQLite pages to vacuum from the freelist during \xe2\x80\xa6AgThe AvidmGf2 parametersBlallow panic because this is a compiler error0CiParse NodeSignatureSource from a PathBuf and optional \xe2\x80\xa6CcPause sending and receiving on the PushCDN network.DaCreates a new call builder for the [<code>pause</code>] function.0AmPauses the underlying networkBePeers for catching up the stake table0CfPeers for fetching missing data for the query service.BfNodes of proof path, from root to leafCfA proof of inclusion of this transaction in its block.CiNote: The prune operation may not immediately free up \xe2\x80\xa6CmCentralizing all garbage-collection logic, won\xe2\x80\x99t panic, \xe2\x80\xa600CkThis will enable the pruner and set the default pruning \xe2\x80\xa6CdFinalize the query with a constructed SQL statement.BkRange of this share in the encoded payload.0BcThe relay index we are currently onBcThe relay this vote is intended for00000mreset backoffCjRetry a fallible operation several times before giving up.mCurrent ROUND0BhThe view number we are trying to sync on00000AaStart the server.BcSetup an instance for AVID-M scheme000CfA storage node\xe2\x80\x99s key and its corresponding VID share0BdThe signature is a G1 group element.AfSNARK proof generation00CiSpawn a background task, which will be cancelled when \xe2\x80\xa6CcSpawn a task, which will be cancelled when dropped.CaSpawn a background task attached to this context.CoSpawn a background task attached to this <code>TaskList</code>.BjGet the stake table entry for a public keyAbthe peer\xe2\x80\x99s stake0AdGet the stake amountAcGet the stake valueDiGet the stake table entry for a public key, returns <code>None</code> \xe2\x80\xa603CnWhether nodes should start their HotShot instances Will be \xe2\x80\xa6Alwhen the network was startedAnHolds Stake table and da stake0ClShared state updated by an asynchronous task which polls \xe2\x80\xa60CgGet the validated state from a given <code>view</code>.0CaThe state that the round was in when it timed outAbState of bootstrapCiMerklized state storage implementation for a database \xe2\x80\xa6DkThe state of the task.  It is fed events from <code>receiver</code> and \xe2\x80\xa6DkThe state of the task.  It is fed events from <code>event_sender</code> \xe2\x80\xa64Cbreturn the underlying validated state if it existsA`Validated state.CnGets the validated state with the given view number, if in \xe2\x80\xa611BaThe associated light client state00BdThe state for this signatures bundle00AiTask for collecting statsBbAdditional DHT store functionalityAdThe underlying storeBgStore the object in the local database.Anthe swarm of networkbehaviours0CiA helper bool to indicate whether inner lock has been \xe2\x80\xa6C`Provides a number of tasks that run continuouslyCgBackground tasks to shut down when the node is dropped.DoConvert a <code>QuorumCertificate2</code> into a <code>QuorumCertificate</code>0DgConvert a <code>DaCertificate</code> into a <code>DaCertificate2</code>0DaCreates a new call builder for the [<code>token</code>] function.0BeTrace the list of signers given a qc.BcCreate an error at the trace level.0ClTypes related to a namespace payload and its transaction \xe2\x80\xa6B`Contains types used by the crateetypes00CjCommon functionality provided by types used in this crate.ClUtility functions, type aliases, helper structs and enum \xe2\x80\xa6Ajsequencer utility programsAoThe value to send with the callA`the value to putAgThe value of the recordBfGet the underlying value of the recordAfValue to publish underCithe value of the drb calculation at the current iterationBjView we last voted in for a QuorumProposalAbWrite a .env file.BoStart an atomic transaction on the data source.0CiLocks inner consensus for writing and leaves debug tracesCfThe Bundle for a portion of a block, provided by a \xe2\x80\xa6B`The channel is empty and closed.000DbThe concrete <code>Column</code> implementation for this database.lCommit phaseAcVID commitment typeAjRun the config API module.BbOptions for the config API module.AfLogging configuration.BaDisplay the current configurationCfCLI to interact with the Espresso stake table contractAgDA certificate was sentAhData used for a DA vote.Bdvote for data availability committeeA`DA vote was sentAbDA vote type aliasAoA new decision event was issued000AfThe Request was deniedB`Send a message directly to a keyAadirectly transmitCcThe version at which to switch over to epochs logicgfailureoLeaf has failednGet(Key, Chan)A`The global topic0CcThe <code>Global</code> topic goes out to all nodes1ChEach variant represents a specific minor version header.DgA header is like a [<code>Block</code>] with the body replaced by a \xe2\x80\xa6001000CeMessage for the next leader containing our highest QCBmdon\xe2\x80\x99t care if the node should hit view syncBdAnalyze leader stats from a CSV fileBiA namespace for looking up P2P identitiesC`Return type for [<code>Payload::ns_iter</code>].0BgNumber of entries in a namespace table.0AmNumber of txs in a namespace.0B`An L1 block number to sync from.BhType we expect from completed dependencyCjA collection of parameters which can be bound to a SQL \xe2\x80\xa60DbEvent with signature <code>Paused(address)</code> and selector \xe2\x80\xa60000BdIdentifier of a peer of the network.CfPut(Key, Value) into DHT relay success back on channelDgThe type of the assembled qc: assembled signature + <code>BitVec</code>0CnRandom integrated builder will be started and used by each \xe2\x80\xa6CnAlias for the main <code>Result</code> type used by the crate.CfOnly structs in this file can impl <code>Sealed</code>CgThe <code>Sender</code> trait is used to allow the [\xe2\x80\xa6DgA wrapper type that we will implement the <code>Sender</code> trait forAeA signed record valueCnSimple integrated builder will be started and used by each \xe2\x80\xa6AgSqlite database driver.BoEnum to hold the status out of the decide eventAjRun the status API module.BbOptions for the status API module.BeWrite to stdout with specified formatBjRun the transaction submission API module.BfOptions for the submission API module.CkThis allows the client to know what client_id they have \xe2\x80\xa6DbCreates a new call builder for the [<code>_getVk</code>] function.00000000CcIdentifier for the functions to invoke in JellyfishAiAmount of WEI to deposit.AfThe amount to transferCeAppend information about a new block to the database.0Bf\\beta times the above generator of G2.00lBuilt blocksAdBLS verification key0CaThis module provides the <code>Bundle</code> typeDbCreates a new call builder for the [<code>cancel</code>] function.0AeThe underlying client0AlThe orchestrator\xe2\x80\x99s clientsjthe clientChUnderlying surf_disco::Client for the legacy builder api0ChCalculate the leaf commitment, which is gated on the \xe2\x80\xa6BcRoot commitment of the Merkle tree.CkCommit to a <code>payload</code> without generating shares.1CgCommit to a payload given namespace table. WARN: it \xe2\x80\xa62BfVID commitment is the Merkle tree root10BiVID common data sent to all storage nodes000Abthe hotshot configBmConfiguration items for this hotshot instanceBhReturn a reference to the network configClconfiguration for the libp2p network (e.g. how it should \xe2\x80\xa6AiThe network configurationBgThe configuration of the prover serviceBeThe config associated with this node.6Agthe hotshot config fileBaThe configuration of the protocolAhAdd a config API module.CkThe configuration we used for the above inner protocol. \xe2\x80\xa6ClThis module configures base fields, Merkle tree, etc for \xe2\x80\xa6DdCreate a new FileSystemDataSource with storage at <code>path</code>.0DaCreate a new FileSystemStorage with storage at <code>path</code>.CmInstantiate a metric in this family with a specific label \xe2\x80\xa6CdInstantiate a data source from command line options.BjCreate staking transactions for test setupCmCreate NodeSignatures by signing an Ethereum address with \xe2\x80\xa6AoStart the prover service daemonCgDeploy a contract (with logging and cached deployments)Agdeploy target contractsDcDeploys this contract using the given <code>provider</code> and \xe2\x80\xa6000000000000000000000000000000000000000000000000000000000000000000000000CjAllow this node to continue participating in consensus \xe2\x80\xa6BiEncode a list of transactions into bytes.AmEncode <code>&amp;self</code>CmCheck that the given condition holds, otherwise return an \xe2\x80\xa60Bha list of errors accumulated by the taskBgDefines the events passed between tasksCkAll events received by this node since the beginning of \xe2\x80\xa6BjMarked as expired regardless of time left.AmExponential backoff exponent.0BbEvent filter to use for this eventC`Input format for stdin (auto-detected for files)mOutput formatAiGossip a message to peersAmhandle to control the networkDgProvides an event-streaming handle for a <code>SystemContext</code> \xe2\x80\xa6Cllibp2p network handle allows for control over the libp2p \xe2\x80\xa6BeHandles the results returned from \xe2\x80\xa6CeHandles all events, storing them to the private stateCfHandles a consensus event received on the event streamCjHandle a vote dependent event received on the event streamAgmain task event handler0AgHandle the given event.CmHandles the received event modifying it before sending on \xe2\x80\xa6CcHandles incoming events for the main view sync taskCeHandle incoming events for the view sync replica task446ChHandles all consensus events relating to propose and \xe2\x80\xa6BdThe handle to the node\xe2\x80\x99s internalsAdThe consensus handleA`Header fetching.BaHeight of this leaf in the chain.CgThe block height for which aggregate statistics are \xe2\x80\xa611Ahwhether or not to ignoreBawhether or not to ignore the test1100C`Insert an object at position <code>index</code>.ChExponential backoff jitter as a ratio of the backoff \xe2\x80\xa60BdUtility program to generate keypairs0olaunch the testDmWrapper for <code>HotShotConsensusApi</code>\xe2\x80\x99s <code>leader</code> functionB`return the leader for this votesEdThe leader of the committee for view <code>view_number</code> in <code>epoch</code>.0BiUse a ledger device to sign transactions.0CfThe ledger account index to use when deriving the key.fMacrosBfThe target number of peers in the mesh000BdThe channels to notify of the resultAgnotify client of resultC`Channel to notify caller of result of publishingCiChannel to notify caller of value (or failure to find \xe2\x80\xa6ClNotify anyone waiting for this object that it has become \xe2\x80\xa6DhNotify all subscribers whose predicate is satisfied by <code>msg</code>.CkReturn the byte length of a given namespace. WARN: will \xe2\x80\xa6BnOutput HTML file (default: replica_stats.html)BmOutput HTML file (default: leader_stats.html)AcOutput for messagesCeOutput file path. If not specified, outputs to stdoutChThe parent semaphore that we are borrowing a permit fromDbCreates a new call builder for the [<code>paused</code>] function.0AnThe permit that we are holdingnGet the PrefixCiThis module implements encoding proofs for the Avid-M \xe2\x80\xa6CdNamespace proofs for AvidmGf2 scheme This module \xe2\x80\xa6frandomCnGenerates a random peer ID from a cryptographically secure \xe2\x80\xa6BcAdditional DHT record functionalityDkOverwrite the <code>remove</code> method to potentially sync the DHT to \xe2\x80\xa6CdResume sending and receiving on the PushCDN network.AnResumes the underlying networkCkTask for storing and replaying all received tasks by a nodeAfnumber of views to runAdThe number of rounds11BnSet the name of the schema to use for queries.AmSignature scheme to generate.0Akscripting harness for testsClSealed is used to make sure no other files can implement \xe2\x80\xa6CkChannel used by the async update task to send events to \xe2\x80\xa60AmSender for broadcast messagesAjThe sender of this messageC`Public key of the leader submitting the proposal00B`Public Key of the message sender1110BgSends events all tasks including itselfmEvent sender.AaThe event sender.544434443BbThe sender to use for the protocol0CfA storage node\xe2\x80\x99s key and its corresponding VID share0CiTransaction signing key for Ethereum or any other layer 2B`description of the solver to runAkmax capacity of stake table00ClAbstractions over the immutable instance-level state and \xe2\x80\xa6CeQueries for node-specific state and uncommitted data.AhAdd a status API module.AhAdd a submit API module.DbCreates a new call builder for the [<code>symbol</code>] function.0BcThe address of the contract to callDgConvert a <code>DaCertificate</code> into a <code>DaCertificate2</code>0DoConvert a <code>QuorumCertificate</code> into a <code>QuorumCertificate2</code>011DeReturn a copy of this <code>Multiaddr</code>\xe2\x80\x99s byte representation.BeConvert to a vector of field elements00333333CmThis module contains all the traits used for building the \xe2\x80\xa6CfContains traits consumed by <code>SystemContext</code>CcCommon traits for the <code>HotShot</code> protocolCbUpdate query state based on a new consensus event.0ClA generic algorithm for updating a HotShot Query Service \xe2\x80\xa6AfUpdate the gauge valueB`Update loop for query API state.Blspin the node or node\xe2\x80\x99s network up or downCkValues which have already been emitted, to avoid duplicatesEeVerify a [<code>TxProof</code>] for <code>tx</code> against a payload commitment. \xe2\x80\xa6DiVerify a [<code>NsProof</code>] against a payload commitment. Returns \xe2\x80\xa6CmUnlike the ADVZ scheme, this function won\xe2\x80\x99t fail with a \xe2\x80\xa60ChVerify a message of arbitrary data and return the resultDbCreates a new call builder for the [<code>verify</code>] function.000ClVerify the inclusion proof against a payload commitment. \xe2\x80\xa602BdVerify a proof of incorrect encodingBcVerify an incorrect encoding proof.AlGet the weight of this shareAoReturn the weight of this shareBaPrint the signer account address.BkApprove stake table contract to move tokensCbCheck the balance (in ETH) of an Espresso account.ClA request that can be satisfied by a single participant, \xe2\x80\xa6CoBuilder for <code>FetchingDataSource</code> with configuration.BaRun the state catchup API module.BcOptions for the catchup API module.AjAn async broadcast channelDcTrait for converting error types to a <code>Result&lt;T&gt;</code>.AaA Counter metric.AlAn ever-incrementing counterAfa direct message eventBeLilst of direct message output eventsAhData used for a DA vote.Bdvote for data availability committeeAdDA vote 2 type aliasCkThe DA leader has collected enough votes to form a DAC; \xe2\x80\xa6BfDeposit ETH from the L1 into Espresso.DkEvent with signature <code>Deposit(address,uint256)</code> and selector \xe2\x80\xa60B`What to re-export, what to hide?Ch<code>FeeInfo</code> holds data related to builder fees.0DgAsynchronous retrieval and storage of <code>Fetchable</code> resources.CeManagement of concurrent requests to fetch resources.CgMessages related to validating and sequencing consensusAmGenesis of an Espresso chain.kSRS commentBmWe encapsulate keys here to help readability.0CgIn-memory view of the L1 state, updated asynchronously.A`Incoming message0CmThe outer message type for the request-response protocol. \xe2\x80\xa6AaThe metrics type.CfThe requested resource exists but is not currently \xe2\x80\xa60AkThe underlying network type0B`A type alias to help readability1ChMap from views to leaves for a single node, allowing \xe2\x80\xa6BaIndex for an entry in a ns table.0CmEach variant represents a specific version of a namespace \xe2\x80\xa60ClA proof of a namespace payload. It consists of the index \xe2\x80\xa60BfRaw binary data for a namespace table.0BmDeploy contracts needed to run the sequencer.CjCommand-line utility for working with the Espresso bridge.BdUtility program to generate keypairsBnAn adversarial stress test for sequencer APIs.CiOptions represents the configuration options that are \xe2\x80\xa6CbGet the public key corresponding to a private key.BlReset the persistent storage of a sequencer.Bjconfigurability options for the web serverBkOptions for file system backed persistence.ClOptions for database-backed persistence, supporting both \xe2\x80\xa6CdSubmit random transactions to an Espresso Sequencer.58CeCount transactions and bytes confirmed in a given \xe2\x80\xa6CmUtility program to verify properties of headers sequenced \xe2\x80\xa6BeRaw payload data for an entire block.0ClCallback when fetching the leaf in order to then look up \xe2\x80\xa6AjA quorum proposal was sentBeAnalyze replica stats from a CSV fileCeA succinct specification of the object to be fetched.AiA request for a resource.iA requestClA trait for a request. Associates itself with a response \xe2\x80\xa6CnThe outermost request type. This an enum that contains all \xe2\x80\xa6ClThe node is to be restarted so we will build the context \xe2\x80\xa6kIn progressBaStorage for DA layer interactions00BkStorage type used by the underlying fetcherCjAbstraction for storing a variety of consensus payload \xe2\x80\xa6AeAlias for storage-fs.CdQuery Service Storage types that can be used for \xe2\x80\xa6BaTimed out performing an operation0CkA consensus view has timed out; emitted by a replica in \xe2\x80\xa61AlHolds a timeout certificate.0AeThe request timed outBaIndex for an entry in a tx table.0Cdstate of task that decides when things are completedC`Represents a general upgrade with mode and type.0DcEvent with signature <code>Upgrade(address)</code> and selector \xe2\x80\xa6000000000000000000000000000ClThe version of HotShot this node may be upgraded to. Set \xe2\x80\xa6CjThe user definition for the Push CDN. Uses the TCP+TLS \xe2\x80\xa6AcBuilder API versionBoDisplay version information of the staking-cli.BcA pending request for notification.BaWeb server network implementationCeThe weights and total weight used in VID calculationsBjMarker for <code>NodeType</code> used here0AfAdd another dependency0Aefor alloy\xe2\x80\x99s AddressAaAccount to check.0BaReturn inner <code>Address</code>00BcReturns a reference to the address.000000000000000000000000000000000000000000000000000000000000000BdThe Ethereum address that was signed0AeThe address to check.AmThe Ethereum address to sign.DcCreates a new call builder for the [<code>approve</code>] function.0CgDisable pruning and reconstruct previously pruned data.0CfAuto NAT behaviour to determine if we are publicly \xe2\x80\xa60ChReturns the backoff parameters for the catchup provider.Bdbackoff since last attempted requestmRetry timeoutAiExponential retry backoff0BfCurrent backoff delay for retries (s).DcCreates a new call builder for the [<code>blsKeys</code>] function.0Acbuilder pattern fornbuilder to useEcBuild a <code>FetchingDataSource</code> with the given <code>storage</code> and \xe2\x80\xa6CnConnect to the database, setting options on the underlying \xe2\x80\xa60CmImplementations for builder client Should contain builder \xe2\x80\xa633AkBundles for light client V1AkBundles for light client V2AkBundles for light client V3CmGet the index of the transaction with a given hash, if it \xe2\x80\xa60CgCatches the membership up to the epoch passed as an \xe2\x80\xa6AiAdd a catchup API module.Bjview number -&gt; change to builder statusAbtime based changesCaState verifier circuit builder Legacy circuit \xe2\x80\xa6CmState verifier circuit builder Circuit implementation for \xe2\x80\xa60nCommand to runBiAbbreviate the very long BLS public keys.EdInstantiate an <code>L1Client</code> for a given list of provider <code>Url</code>s.AmConnect to a remote database.BiConnect to the database with this config.101DeWait for server to become available Returns <code>false</code> if \xe2\x80\xa6AkContent of this AvidMShare.AdActual share contentEdConvert this <code>Fetch</code> to a <code>Result</code> with the provided error \xe2\x80\xa6BmWrap the error value with additional context.CmEither the context to which we will use to launch HotShot \xe2\x80\xa6BbAttach context to the given error.BdView we lasted voted for DA proposalAmInitialize with empty metricsCiThe default method for this type is to set all of the \xe2\x80\xa6Aoby default, just a single roundAeCreate default ConfigAkCreate default SignerConfigDcCreates a new call builder for the [<code>deposit</code>] function.DdThe following is the main <code>Broker</code> binary, which just \xe2\x80\xa6CgDisable retries and just fail after one failed attempt.0ClOption to test upgrade stake table v2 multisig owner dry \xe2\x80\xa6DcCreates a new call builder for the [<code>execute</code>] function.0CdCalled to run the filter and return a set of indicesCiExecute the query and return the total number of rows \xe2\x80\xa60BiThis is for backward compatibility reasonBdConstruct a genesis validated state.0DiCreate a genesis block payload with bytes <code>vec![0]</code>, to be \xe2\x80\xa6BfCreate a new leaf from its components.ChCreate a new instance of this time unit at time number 0Ahgenerate a genesis blockC`Build the genesis header, payload, and metadata.5AgCreate a genesis number044AmCreat the Genesis certificateAnCreate the Genesis certificate01AlTasks this registry controlsAfHandles for all nodes.Achandle to the nodesBoDefines the types to run unit tests for a task.DcCreates a new call builder for the [<code>hasRole</code>] function.000BgContains helper functions for the crateogeneral helpersBaHelper functions used by any taskCfHelpers for initializing system context handle and \xe2\x80\xa6ClHighest QC that was seen, for genesis it\xe2\x80\x99s the genesis \xe2\x80\xa6C`Highest qc seen in the test for restarting nodesA`Get the high QC.Acthe highqc per specDjProvides a generic rust implementation of the <code>HotShot</code> BFT \xe2\x80\xa6CoInternal reference to the underlying <code>SystemContext</code>0DaInternal reference to the underlying [<code>SystemContext</code>]CkChecks whether the response channel is still open, i.e. \xe2\x80\xa6AhThe keypair for the node00000CiThe Espresso block header includes a reference to the \xe2\x80\xa6BoNumber of members to emit for the current roundAeNetwork message typesgmessageCnThe message type. Is the base type for all messages in the \xe2\x80\xa6Bjthe metrics that the implementor is using.BcThe Libp2p metrics we\xe2\x80\x99re managingAhThe CDN-specific metrics0DfThe <code>Metrics</code> trait is used to collect information from \xe2\x80\xa6B`A reference to the metrics trait0BdAdd optional modules to the service.AjAdd more optional modules.AfThe underlying networkBhNetworks used by the instance of hotshot0mNetwork logicBfThe task which implements the network.333lcomm network4CdNetwork to send requests over The underlying networkBlThe underlying network belonging to the node06CmHolds the network configuration specification for HotShot \xe2\x80\xa6AlNetwork access compatibilityCjThe network traits. Is what we use to send and receive \xe2\x80\xa68AnThe node\xe2\x80\x99s unique identifierBjReturn the list of namespace byte lengths.AjThe size of each namespace0CmReturn the number of namespaces. WARN: it assume that the \xe2\x80\xa6BmReturn the number of namespaces in this shareCbSequencer-specific API options and initialization.CkOVERLAP of nodes to be carried over from the previous round0CnTurn a fallible passive fetch future into an infallible \xe2\x80\x9c\xe2\x80\xa6AeActual share content.0Bcthe peer id of the networkbehaviourAgpeer id of network nodeAdthe recv-ers peer idCathe peer id (useful only for debugging right now)C`Get a reference to the network node\xe2\x80\x99s peer id.3CgGet a reference to the network node handle\xe2\x80\x99s peer id.5BoPhantom type for the key and persistent storageAhPhantom type for the keylPhantom dataCiPhantom data to specify the types this accumulator is for1A`The type phantomClPrepare the SQL query to inspect the type information of \xe2\x80\xa60B`Get a ref to the primary networkAcPruning parameters.AhThis replicas public keyC`Immutable query functionality of a SQL database.Ahalready received recordsCgRecover the payload from the given <code>shares</code>.BaRecover payload data from shares.BlRecover the entire payload from enough share0E`Replace a <code>Protocol</code> at some position in this <code>Multiaddr</code>.BgOverwrite a file if a condition is met.B`Requests for fetching resources.BjTask for requesting the network for thingsgRequestCmThe request trait. Is what we use to define a request and \xe2\x80\xa6ChRequest something from the protocol and wait for the \xe2\x80\xa6CaThe request that we are waiting for a response toCeThe actual request data. This is from the applicationCgWait for the data to become available, if it is not \xe2\x80\xa6B`Stored results from computationsBeNumber of retries since last success.BlA JSON-RPC endpoint for the L1 to deploy to.AeL1 JSON-RPC provider.0A`L1 Ethereum RPC.CcWhether a scan is currently running (1) or not (0).CiProver service related functionalities A light client \xe2\x80\xa600ClA bitvec to indicate which node is active and send out a \xe2\x80\xa6Akwhen we started the timeoutCfReference to the internal storage for consensus datum.0CkProvides a reference to the underlying storage for this \xe2\x80\xa61BdPersistent storage for data sources.BaA reference to the storage trait.AiReference to the storage.0AiThis node\xe2\x80\x99s storage refBbStorage to store actionable events111BlThe storage trait for Sequencer persistence.Bbgenerate new storage for each node34CjAbstract storage type for storing DA proposals and VID \xe2\x80\xa6kThe storageAjthe current timeout amountAiView timeout from config.0000CaThe time to wait on the receiver for this script.DgConvert a <code>DaCertificate</code> into a <code>DaCertificate2</code>0DbSerializes the <code>NetworkConfig</code> and writes it to a file.CoConvert a <code>QuorumVote2</code> to a <code>QuorumVote</code>00EeConvert a <code>ViewSyncPreCommitVote2</code> to a <code>ViewSyncPreCommitVote</code>EcConvert a <code>ViewSyncFinalizeVote2</code> to a <code>ViewSyncFinalizeVote</code>DoConvert a <code>ViewSyncCommitVote2</code> to a <code>ViewSyncCommitVote</code>312330555555CkTry to get an object from local storage or initialize a \xe2\x80\xa6EkConstruct a new transaction. Returns <code>None</code> if <code>bytes.len()</code> &gt; \xe2\x80\xa6DcCreates a new call builder for the [<code>unpause</code>] function.0AjTask for handling upgradesDhUpgrades the inner <code>RwLockUpgradableReadGuard</code> and leaves \xe2\x80\xa6nUpgrade configCdUse TLS for an encrypted connection to the database.BfKey for verifying a light client statedimpl00AiGet the Migration versionCiCalculate the version applied in a view, based on the \xe2\x80\xa6Bbversion applied to the view numberCeA request for the accounts at a given height and viewCfA response for the accounts at a given height and viewCjRead-only wrapper for API state which does not require \xe2\x80\xa6DkEvent with signature <code>Approval(address,address,uint256)</code> and \xe2\x80\xa6000Aainvalid args: {0}CjA helper trait that allows us to access the underlying \xe2\x80\xa6BmThe creation / init bytecode of the contract.000000000000000000000000000000000000000000000000ClBadQuery is an error that indicates a submitted query to \xe2\x80\xa6DdCreates a new call builder for the [<code>COSET_K1</code>] function.0DdCreates a new call builder for the [<code>COSET_K2</code>] function.0DdCreates a new call builder for the [<code>COSET_K3</code>] function.0DdCreates a new call builder for the [<code>COSET_K4</code>] function.0DcEvent with signature <code>CallSalt(bytes32,bytes32)</code> and \xe2\x80\xa6000BnA callback to process the result of a request.CkThe enum for the topics we can subscribe to in the Push CDNCjClientId represents the unique identifier for a client \xe2\x80\xa6BiOptions for resetting persistent storage.BhAn identifier for a particular contract.ka DHT eventnDHT event enumAbA database driver.AnDelegate funds to a validator.C`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?CmA type that contains or can provide a database connection \xe2\x80\xa60AlRun the explorer API module.BdOptions for the explorer API module.CdA message to be passed through to external listenersChA (still serialized) message to be passed through to \xe2\x80\xa6CmUse external builder, [config.builder_url] must be set to \xe2\x80\xa6AlPossible charge fee failures0nFinalize phaseBnA trait for types belonging for specific epochDgSNAFU context selector for the <code>ParseSeedError::Hex</code> variantCnIdentity represents identifying information concerning the \xe2\x80\xa6CfThe type of the instance-level state this state is \xe2\x80\xa6000AcInternal error: {0}AhMessage for internal useAcinternal error: {0}CkAn Ethereum provider and configuration to interact with \xe2\x80\xa60CgDecided leaf with the corresponding state and VID info.DhA wrapper type for implementing <code>PassType</code> on a vector of \xe2\x80\xa6CkData created during block building which feeds into the \xe2\x80\xa60BgRun migrations using a sqlx connection.CnMultiple errors. Allows us to roll up multiple errors into \xe2\x80\xa600DcEvent with signature <code>NewEpoch(uint64)</code> and selector \xe2\x80\xa60000000000000DiEvent with signature <code>NewState(uint64,uint64,uint256)</code> and \xe2\x80\xa60000000000000000000BkType of nodes participating in the network.ClTrait with all the type definitions that are used in the \xe2\x80\xa6ClThe requested resource does not exist or is not known to \xe2\x80\xa60CmNotFound is an error that represents results could not be \xe2\x80\xa6AjPeer failed to get us dataCkMulti-producer, multi-consumer oneshot notification channelBjBlock Proposal to be verified and applied.BnFor the <code>QuorumProposalRecv</code> event.BdMessage with a [quorum/DA] proposal.AoMessage with a quorum proposal.BfRequest for quorum proposal for a viewAjPrepare qc from the leaderClA provider which is able to satisfy requests for data of \xe2\x80\xa6CiProvider for fetching missing data for the query service.Ajhardcoded topic of QC usedClThe next leader has collected enough votes to form a QC; \xe2\x80\xa6CjThe type of the quorum certificate parameters used for \xe2\x80\xa60BmPublic parameters of <code>BitVectorQc</code>CiThe <code>Receiver</code> trait is used to allow the [\xe2\x80\xa6CkType alias for a map from View Number to Relay to Vote TaskCnThe type of resource that will be returned as a successful \xe2\x80\xa6jA responseBnThe response type associated with this requestCkThe outermost response type. This an enum that contains \xe2\x80\xa6ChThe network has been shut down and can no longer be used00Adshut everything downnkill the swarmAaShutdown the taskCmSnapshot can be queried by block height (index) or merkle \xe2\x80\xa60BnAn object which can be stored in the database.Bhrequisite data to generate a single testoTest only logicClA basic task which loops waiting for events to come from \xe2\x80\xa6DkEvent with signature <code>Transfer(address,address,uint256)</code> and \xe2\x80\xa6000AcTransfer ESP tokensDdThe concrete <code>TypeInfo</code> implementation for this database.DdEvent with signature <code>Unpaused(address)</code> and selector \xe2\x80\xa60000AhAn unsigned record valueDdEvent with signature <code>Upgraded(address)</code> and selector \xe2\x80\xa60000000000000000000000000000000000CeThe concrete type used to hold a reference to the \xe2\x80\xa6AoVersion information for HotShotCbThe error type for <code>VidScheme</code> methods.BmFor the <code>VidShareValidated</code> event.nVID share typeCeA request for the VID share at the given block heightCdA response for a VID share at the given block heightBhHolds a view sync finalized certificate.0BmMapping of commitments to vote tokens by key.BoThe data commitment this certificate certifies.CnMarker trait for data or commitments that can be voted on. \xe2\x80\xa6AiAdd multiple dependenciesC`Adds a hotshot consensus-related task to the \xe2\x80\xa6CmError utilities, intended to function as a replacement to \xe2\x80\xa6kpath to APIDcReturn byte slice representation of inner <code>Address</code> type00Cmassemble the signature from the partial signature and the \xe2\x80\xa60CjComputes an aggregated signature from a set of partial \xe2\x80\xa6DdCreates a new call builder for the [<code>authRoot</code>] function.00DdCreates a new call builder for the [<code>balances</code>] function.CkThe minimum fee paid by the given builder account for a \xe2\x80\xa6BfMinimum fee in WEI per byte of payload000Cmconstant fee that the builder will offer per byte of data \xe2\x80\xa6BhSee <code>BuilderConfig::base_fee</code>CmBase fee; the sequencing fee for a block is calculated as \xe2\x80\xa6ChThis module contains the sol! generated bindings for \xe2\x80\xa6AdBuilder address poolAndescription of builders to runBiReturn the byte length of this namespace.AaEspresso chain ID000CkGet the Migration checksum. Checksum is formed from the \xe2\x80\xa6lmsg contentsBoWrapper to get the view number this node is on.CiThe view number that this node is currently executing in.BfView number this view is executing in.0AlView HotShot is currently inAkCurrent round HotShot is in222AeGet the current view.BaView number that is currently on.BmGet the DA stake table entry for a public keyDkGet the DA stake table entry for a public key, returns <code>None</code>\xe2\x80\xa60BkSet the name of the database to connect to.AoName of database to connect to.DdCreates a new call builder for the [<code>decimals</code>] function.0DdCreates a new call builder for the [<code>delegate</code>] function.0AaThe disperse dataDgDisperse the given <code>payload</code> according to the weights in \xe2\x80\xa6ChAttempt to downcast the error object to a concrete type.Aitime to wait between txnsAeDuration of the task.0BjThe time it took to calculate the disperseChThe election trait, used to decide which node is the \xe2\x80\xa6C`Functions for leader selection based on the DRB.DdCreates a new call builder for the [<code>espToken</code>] function.AjChannel of incoming eventsChExplorer storage implementation for a database query \xe2\x80\xa6AkAdd an explorer API module.AmFee paid by the block builderBlFetching missing data from remote providers.BgAsynchronous retrieval of missing data.CcGet the logging configuration from the environment.ChA ordered queue of block heights for V1 light client \xe2\x80\xa6ChA ordered queue of block heights for V2 light client \xe2\x80\xa6ChA ordered queue of block heights for V3 light client \xe2\x80\xa6AlQueue for garbage collectionCiNote: Generates random keys, the Ethereum key won\xe2\x80\x99t \xe2\x80\xa6CaGenerate key pairs from <code>thread_rng()</code>BiRetrieves a Merkle path from the databaseCiEvent handlers for use in the <code>handle</code> method.ChEvent handlers for <code>QuorumProposalValidated</code>.CaThis module holds the dependency task for the \xe2\x80\xa6AmEvent handlers for this task.Cfpurpose: identifying the addresses from an outside POV0A`Pruning intervalB`Interval for running the pruner.FbConsumes <code>self</code> and returns a <code>tide_disco</code> <code>App</code> with builder \xe2\x80\xa6DaReturns <code>true</code> if the channel is empty but not closed.0CeReturns true if the length of this multiaddress is 0.BlWhether this block is empty of transactions.0ClReturns true if the catchup provider is local (e.g. does \xe2\x80\xa6BnWhether or not the network is considered readyBkwhether or not the network is ready to send1Beif we\xe2\x80\x99ve extracted all the metadataC`Wait for the results of all the tasks registeredBePath to file containing private keys.BbThe seed for broker key generationAnmacro specific custom keywordsCjtest launcher, contains a bunch of useful metadata and \xe2\x80\xa6BbLoad the current eQC from storage.DjClosure which returns true if the incoming <code>T</code> is the thing \xe2\x80\xa6BmThe maximum size of the <code>VecDeque</code>BfMaximum size of transaction to submit.nblock metadataAetest description/specA`test description1100nBlock metadataAgmetadata used for tasksAaGet the metadata.AnMetadata for the block payloadBdMetadata of the block to be applied.0AjThe metadata of the block.BfMinimum size of transaction to submit.DkFunction with signature <code>mint(address,uint256)</code> and selector \xe2\x80\xa60AjMnemonic for an L1 wallet.CgMnemonic to generate the account from which to deposit.BjMnemonic to generate the account to check.0CnA function for generating a cute little user mnemonic from \xe2\x80\xa6BjThe mnemonic to use when deriving the key.0BgA function that takes the result of \xe2\x80\xa6DfA function passed to <code>NetworkEventTaskStateModifier</code> to \xe2\x80\xa6EaFunction with signature <code>name()</code> and selector <code>0x06fdde03</code>.000BjThe two networks we\xe2\x80\x99ll use for send/recv0CkMulti-producer, multi-consumer oneshot notification channelCgIndex for looking up the namespace this transaction \xe2\x80\xa6000AkThe index of the namespace.00CjThis module implements the namespace proof for all VID \xe2\x80\xa6B`The proof of incorrect encoding.CiThe merkle proof of the namespace payload against the \xe2\x80\xa60DgRead subslice range for the <code>index</code>th namespace from the \xe2\x80\xa6BcTypes related to a namespace table.CaThis module provides helpers for namespace table.DkReturns <code>OpenKeys</code> for KZG10 over BN254 curve from Aztec\xe2\x80\x99s \xe2\x80\xa6AdKZG PCS opening key.00BnSet a password for connecting to the database.AkPassword for Postgres user.CkIndex of the transaction within its namespace in its block.000AlPRNG from the previous round0Bgprintout the results of one example runAjprogress through DHT query0AhContents of the proposal00000AdThe wrapped proposal0111111BfView we last proposed in to the QuorumClThe alloy provider used for L1 communication with wallet \xe2\x80\xa60BdReturns a reference to the provider.000000000000000000000000000000000000000000000000000000000000000CiAsynchronous fetching from external data availability \xe2\x80\xa6CnCreate a provider for fetching missing data from a list of \xe2\x80\xa6CmFinalize the query with a constructed SQL statement and a \xe2\x80\xa6CaAdd a query API module backed by the file system.BoReceiver for events from the async update task.0A`Message Receiverlthe receiver0CeReceives events that are broadcast from any task, \xe2\x80\xa6oEvent receiver.AcThe event receiver.BdThe receiver to use for the protocolCjsymbols needed to implement a networking instance over \xe2\x80\xa6AjAdd a task to the registry0CaTask which responses to requests from the networkAkThe actual response contentAiSender to retry requests.mTask\xe2\x80\x99s loopBdTake a task, run it, and register itDkMacro to run the test suite with <code>TaskState</code> scripts at once \xe2\x80\xa6lexecute testDdCreates a new call builder for the [<code>schedule</code>] function.0Acscramble the packet00CmCleanly shuts down a swarm node This is done by sending a \xe2\x80\xa6BnTry to cancel/abort the task this registry hasBnShuts down all tasks managed by this instance.oshutdown signalAisign sequencing fee offerBhKey for signing a new light client stateAkGet a snapshot from the l1.AmThe current stake table stateBjCreate a subgroup with a specified prefix.AjPRNG for the current round0B`Last block to count (inclusive).AoSerialize a public key to bytesBgConvert the record key to a byte vectorCoReturns a raw bytes representation of this <code>PeerId</code>.BdSerialize a peer\xe2\x80\x99s config to bytesBdSerialize the private key into bytes4ChSerialize the type to a byte array. If this is for a \xe2\x80\xa6DeConverts any <code>Message</code> to bytes if the content is also \xe2\x80\xa6CoConvert a <code>QuorumVote</code> to a <code>QuorumVote2</code>0DaConvert a <code>TimeoutVote</code> to a <code>TimeoutVote2</code>EeConvert a <code>ViewSyncPreCommitVote</code> to a <code>ViewSyncPreCommitVote2</code>EcConvert a <code>ViewSyncFinalizeVote</code> to a <code>ViewSyncFinalizeVote2</code>DoConvert a <code>ViewSyncCommitVote</code> to a <code>ViewSyncCommitVote2</code>144032DdCreates a new call builder for the [<code>transfer</code>] function.0CeGenerate a Solidity-compatible proof for this accountClTries to acquire read lock on inner consensus and leaves \xe2\x80\xa6ClThis module implements the transaction proof for all VID \xe2\x80\xa6Chfiltered queue of available transactions, taken from \xe2\x80\xa6C`Range of how big a transaction can be (in bytes)Cctask that\xe2\x80\x99s submitting transactions to the streamChCan <code>n</code> fit into <code>byte_len</code> bytes?CbCheck if we have decided on an upgrade certificateCaMap containing all planned and executed upgrades.0CiIf toggled, launch a mock LightClient contract with a \xe2\x80\xa6CiTop level validation routine. Performs all validation \xe2\x80\xa6CgAre the bytes of this <code>NsTable</code> uncorrupted?AdValidate a signatureChIf the message requires authentication, validate the \xe2\x80\xa6CmValidate the signature on the public key and return it if \xe2\x80\xa62B`Validate an upgrade certificate.0DhValidate the <code>RequestMessage</code>, checking the signature and \xe2\x80\xa6CkValidate the request, returning an error if it is not validAmValidate the share structure.AlValidate the share structurehversions00CeWait for a message satisfying <code>predicate</code>.DjAppends the given <code>PeerId</code> if not yet present at the end of \xe2\x80\xa6nVID share typeDeThe concrete <code>Arguments</code> implementation for this database.DeCreates a new call builder for the [<code>BETA_H_X0</code>] function.0DeCreates a new call builder for the [<code>BETA_H_X1</code>] function.0DeCreates a new call builder for the [<code>BETA_H_Y0</code>] function.0DeCreates a new call builder for the [<code>BETA_H_Y1</code>] function.0CcBLS public key used to verify a consensus signature0Da<code>Behaviour</code> type alias for the <code>Cbor</code> codecBmA block hash is the hash of the block header.0AjInformation about a block.0CbEvent when the transactions task has sequenced \xe2\x80\xa6AfState of bootstrappingA`Broadcast to allAlbroadcast the message to allCmA request that needs most or all participants to respond, \xe2\x80\xa6ChThe broker definition for the Push CDN. Uses the TCP \xe2\x80\xa60DeEvent with signature <code>Cancelled(bytes32)</code> and selector \xe2\x80\xa6000ClThe client definition for the Push CDN. Uses the TCP+TLS \xe2\x80\xa6CiThe client definition for the Push CDN. Uses the Quic \xe2\x80\xa6BjMessages related to the consensus protocolBfA reference to the consensus algorithmBeA type alias for the consensus handleBfA type alias for the consensus contextAdThe consensus handleCjCache of contracts predeployed or deployed during this \xe2\x80\xa6BeNewType to disambiguate DA Membership0BaRequest to direct message a peertAdDA proposal was sentClDataState represents the state of the data that is being \xe2\x80\xa6DhEvent with signature <code>Delegated(address,address,uint256)</code> \xe2\x80\xa60000CjAlias for DRB result from <code>compute_drb_result</code>.CeModule containing a contract\xe2\x80\x99s types and functions.00ChThe type and contents of a status event emitted by a \xe2\x80\xa600BbStop right before this view numberCnObjects which can be fetched from a remote DA provider and \xe2\x80\xa6BaGenerate BLS keys and a signatureDkWrapper for a function that takes a <code>node_id</code> and returns an \xe2\x80\xa6Anbroadcast a serialized messageAcRecv-ed a broadcastAcA Histogram metric.CaA histogram which will record a series of points.AoStop including this view numberDeCustom error with signature <code>InvalidG1()</code> and selector \xe2\x80\xa60000000000BlCheck the balance (in ETH) of an L1 account.ClThe chain of decided leaves with its corresponding state \xe2\x80\xa6BhA caching append log for ledger objects.CmMainState represents the State of the application this is \xe2\x80\xa6BkShared state for in-memory mock networking.0ClRepresents a schema migration to be run on the database, \xe2\x80\xa60AnRepresentation of a Multiaddr.ClThe namespace of a record. This is included with the key \xe2\x80\xa6Alspin the node\xe2\x80\x99s network upCmUse this if you\xe2\x80\x99re not planning to use any metrics. All \xe2\x80\xa6CoSNAFU context selector for the <code>Error::Node</code> variantBiRepresents the immutable state of a node.0CcRaw binary data for a single namespace\xe2\x80\x99s payload.0BmNumber of epochs to keep the stake table infoCmA score of a catchup peer, based on our interactions with \xe2\x80\xa6oPreCommit phaseBmA predicate on a type <code>&lt;T&gt;</code>.AoMessage with a quorum proposal.ClThe next leader has collected enough votes to form a QC; \xe2\x80\xa6CnA record\xe2\x80\x99s key. This is a concatenation of the namespace \xe2\x80\xa6CeAn error returned from <code>Receiver::recv()</code>.0ChStart a node up again after it\xe2\x80\x99s been shutdown for \xe2\x80\xa6AoAll the selectors of this enum.00000000000000000000000000000000000000000000000000000000000000000CeContains subcommands for resetting sequencer storage.BnType of error that can occur when signing data000AeAlias for a signatureCdA request for the state certificate at a given epochCcA response for a state certificate at a given epochDeThe concrete <code>Statement</code> implementation for this database.BkUse the file system for persistent storage.Adsubscribe to a topicBoTrait for events that long-running tasks handleCmType for mutable task state that can be used as the state \xe2\x80\xa6Chfiller struct to implement node type and allow us to \xe2\x80\xa6Ci(min, max) number nodes that may hit view sync, inclusiveAcThreshold FunctionsChTrait which allows use to inject different threshold \xe2\x80\xa6ClTimestamp represents a specific point in time that has a \xe2\x80\xa60BmA time from which to start syncing L1 blocks.AoA transaction\xe2\x80\x99s payload data.0AmSpecific type for version 0.1ClCallback when fetching the leaf in order to then look up \xe2\x80\xa6eAliasCkTrait definition for a Verifiable Information Dispersal \xe2\x80\xa6AdA type alias for \xe2\x80\xa6AhView delay configurationA`A view\xe2\x80\x99s stateCnMarker trait for data or commitments that can be voted on. \xe2\x80\xa6jAdd nodes.AnAdd a point to this histogram.DeCreates a new call builder for the [<code>allowance</code>] function.0BjAdd a proposal to the stored DA proposals.BoAdd a transaction\xe2\x80\x99s payload to this namespaceChSends and awaits all transactions with high concurrency.B`Sends and awaits one transactionAeReturns the auth rootDcReturns the <code>auth_root</code> value for versions &gt;= V4 (\xe2\x80\xa6mThe auth root0AmPresent in versions &gt;= V4.1CaThis module implements the AVID-M scheme over GF2BaGet the backtrace for this Error.DeCreates a new call builder for the [<code>balanceOf</code>] function.0Annodes with byzantine behaviourC`The port to bind to for connections (from users)BoTask for doing bootstraps at a regular intervaloStart bootstrapAoCreate a new broadcast channel.0Ambyzantine framework for testsDfReturns true if the <code>parent_leaf</code> formed an eQC for the \xe2\x80\xa6DjComplete will wait until it gets some value <code>T</code> then return \xe2\x80\xa6CfReturns a vector of all of the results from it\xe2\x80\x99s \xe2\x80\xa6CcReturns the value of the first completed dependencyBfReturns a copy of the consensus structAkThe hotstuff implementationDfGet the underlying consensus state for this <code>SystemContext</code>CeThe task which implements the core state logic of \xe2\x80\xa6BaA reference to the metrics trait.ClReference to consensus. The replica will require a write \xe2\x80\xa60CnReference to consensus. Leader will require a read lock on \xe2\x80\xa60AfShared consensus state12AfLocked consensus stateClConsensus shared state so we can check if we\xe2\x80\x99ve gotten \xe2\x80\xa6AkShared consensus task state05505BaProvides the core consensus typesCfReturn a reference to the underlying consensus handle.AdThe consensus handleAoA copy of the consensus contextBbconfigurable constants for hotshotC`Wrapper to get the epoch number this node is on.Aireturns the current epoch0CjThe epoch number that this node is currently executing in.BgEpoch number this node is executing in.0AmEpoch HotShot is currently inBoEpoch HotShot was in when this task was created22mCurrent epoch30AfGet the current epoch.BbEpoch number that is currently on.CnThe last view in which we are allowed to reach a decide on \xe2\x80\xa6BiSequencer-specific API endpoint handlers.DgChecks whether the given <code>Multiaddr</code> is a suffix of this \xe2\x80\xa6CkEnumerate the transactions in the block with their indices.0CeThe rate at which errors occur in the mock solver APICmUse an already-deployed EspToken.sol instead of deploying \xe2\x80\xa6CeReturn a transaction from this namespace. Set its \xe2\x80\xa6CkExecute the query and return all the generated results, \xe2\x80\xa60BnExecute the query and returns exactly one row.0CkThe snapshot also includes information about the latest \xe2\x80\xa60BlWhether we have seen a finalized certificateAiCreate from a vec of depsCmCreat an <code>OrDependency</code> from a vec of dependenciesBoLoads a <code>NetworkConfig</code> from a file.BlCreate HotShotActionViews from a view numberAlReturns a boxed function \xe2\x80\xa6CkGenerate n Push CDN clients, a marshal, and two brokers \xe2\x80\xa6C`generates a network given an expected node countChGet a range of objects from local storage or a provider.BfGet a gauge in this sub-group by name.1Ccget endpoint for whether or not the run has startedCepurpose: broadcasting messages to many peers NOTE \xe2\x80\xa60DeCreates a new call builder for the [<code>grantRole</code>] function.000CaReturns whether or not the network has any peers.BjCheck if a node has stake in the committee0CjSee if a node has stake in the committee in a specific \xe2\x80\xa60DaDoes the <code>index</code>th entry exist in the namespace table?CiThe view number increment each time it\xe2\x80\x99s duplicatedjustBjMutably access the underlying data source.CmReturns <code>true</code> if the channel is empty and closed.0CbA flag indicating whether the key is a merged key.00CkWhether or not the underlying network is supposed to be \xe2\x80\xa60CdDetermine if a message is unique between two sourcesClThe iteration this seed is from. For fresh calculations, \xe2\x80\xa6CfHelpers for connecting types between Jellyfish and \xe2\x80\xa6kL1 provider0CmPrint the file and line number of the location this macro \xe2\x80\xa60ChCreate a pair of PRNGs for the given SEED and ROUND. \xe2\x80\xa6CkCreate a single u64 seed by merging two u64s. Done this \xe2\x80\xa6BeMaximum disk usage (in basis points).0AlMerkle proof of the content.0AoThe namespace of the record keyAgNamespace to aggregate.AlView HotShot wishes to be inAmRound HotShot wishes to be inCnnote_type is meant to reflect the type of the node that is \xe2\x80\xa6CkReturn the commitment for a given namespace. WARN: will \xe2\x80\xa6BeThe commitment of the namespaced VID.A`Number of nodes.BjNumber of DA nodes used in VID computationAkNumber of validators to runAoNumber of nodes in the network.CkGets called to notify the persistence backend that this \xe2\x80\xa60EbFunction with signature <code>owner()</code> and selector <code>0x8da5cb5b</code>.0000000000000000000000000000000000EbFunction with signature <code>pause()</code> and selector <code>0x8456cb59</code>.0000BgThe (original) publisher of the record.CeAdd a query API module backed by a Postgres database.CeReceives events that are broadcast from any task, \xe2\x80\xa6kkill switch0ChChannel to resend requests, set to Some when we call \xe2\x80\xa60BfValue to reset to when reset is calledChSpawn a task which will retry the query after a backoff.0CnTime at which to revert back to the primary provider after \xe2\x80\xa6DaSpawn all tasks that operate on <code>SystemContextHandle</code>.BkDoes this object satisfy the given request?AoGet a ref to the backup networkCgThe semaphore for limiting the number of concurrent \xe2\x80\xa6Ciserialize converts the error into a struct representation0Cfserialize converts the MonetaryValue into a String \xe2\x80\xa6Cbserialize converts the timestamp into a string \xe2\x80\xa6CdSerialize a message with a version number, using \xe2\x80\xa6BdConvert a HotShotError into a stringBiGive the handler a way to retry requests.CcTODO: shut down the networks. Unneeded for testing.CmShut down the inner hotshot and wait until all background \xe2\x80\xa6BeBlocks until the network is shut downB`Stop participating in consensus.AjStop all background tasks.Dkget the assembled signature and the <code>BitVec</code> separately from \xe2\x80\xa60iSignatureAoThe signature on the public keyAnThe signature over the bundle.BnThe proposal must be signed by the view leaderClsignature of the Sha256 hash of the data so outsiders can\xe2\x80\xa6CbThe associated signature of the light client state00BmThe signature share associated with this vote000000000000000BgThe signature to the light client state0BdGet the signature of the vote senderClThe requester\xe2\x80\x99s signature over the [the actual request \xe2\x80\xa6ClWhether to skip initializing nodes that will start late, \xe2\x80\xa6CkSolidity types for interacting with contracts Re-export \xe2\x80\xa6nThe public keyBbUpdate the current eQC in storage.AdSubscribe to a topicA`name of the testlname of test1100Cothe <code>TestTask</code> struct and associated trait/functionsAoThreshold for quorum signatures00ithreshold0Cjthreshold for the accumulated \xe2\x80\x9cweight\xe2\x80\x9d of votes to \xe2\x80\xa6BmCalculate a threshold based on the membershipCeReturns the amount of stake needed to create this \xe2\x80\xa6CjMinimum weight to form an available state signature bundleBgTimestamp when this header was created.AbGet the timestamp.CmReturns a base-58 encoded string of this <code>PeerId</code>.CiThis should be compatible with our legacy implementation.0EbFunction with signature <code>token()</code> and selector <code>0xfc0c546a</code>.0000EhActual transport used in <code>self.provider</code> i.e. the <code>t</code> variable \xe2\x80\xa60BlAlternative Libp2p transport implementationsCmTries to acquire write lock on inner consensus and leaves \xe2\x80\xa6CgGet the number of bytes of transactions in the payload.0Bethe number of transactions in a block00Bhthe number of transactions in this blockCnCreate an unapplied migration, name and version are parsed \xe2\x80\xa6CeUnwrap an ADVZCommitment. Panic if incorrect version.CfUnwrap an AvidMCommitment. Panic if incorrect version.DiThis file contains the <code>ValidatedStore</code> struct, which is a \xe2\x80\xa6AhOptional VID share data.0BnThe task which implements view synchronizationCiWe\xe2\x80\x99re wanting to deserialize a MonetaryValue from a \xe2\x80\xa6CkDefault options for running a web server on the given port.0oVID common typeDjNewtype wrapper for a VID scheme type that impls <code>VidScheme</code>\xe2\x80\xa6BgPublic parameters of the AVID-M scheme.BoShare type to be distributed among the parties.ChBLS key pair used to sign and verify a consensus messageC`BLS private key used to sign a consensus message0AgEntry for a built blockBnThe error type for block and its transactions.ChBlockRange is a struct that represents a range for a \xe2\x80\xa60C`Information about builder fee for proposed blockAeBuilder signature keyAndenotes a change in node stateBgType of data commitment this vote uses.Cfthe compatible representation of the old ethers\xe2\x80\x99 \xe2\x80\xa6DfThe concrete <code>Connection</code> implementation for this database.CmDA proposal was received from the network or submitted to \xe2\x80\xa60BhProposal for data availability committeeBhRequest a DA proposal for a certain view22CiA proposal to start providing data availability for a \xe2\x80\xa6CnA DA vote has been received by the network; handled by the \xe2\x80\xa6ClSend a DA vote to the DA leader; emitted by DA committee \xe2\x80\xa6DgThe trait that allows the [<code>RequestResponseProtocol</code>] to \xe2\x80\xa6CmType which describes the idea of waiting for a dependency \xe2\x80\xa6CmFormat the alloy Log RPC type in a way to make it easy to \xe2\x80\xa6BoSeeds for DRB computation and computed results.BmGet a random, dummy proof with correct formatDeSNAFU context selector for the <code>QueryError::Error</code> variantC`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?CgMessage containing the highest QC and the next epoch QC11AkA replica send us a High QCCmSend our HighQc to the next leader, should go to the same \xe2\x80\xa6AjThe query has been startedkin progressAiInternal bootstrap eventsBiCustom Keccak256 node for our merkle treeAmType alias for alloy provider0Ckthe number of views to gather information for ahead of timeAmLibp2p network implementationCjCreates a new event filter for the <code>Log</code> event.AcGet address of peerBgMembership used for this implementationCnA protocol for determining membership in and participating \xe2\x80\xa6AmMemory network implementationBbMerkle tree scheme used in the VIDCfMock of hotshot ledger for testing LightClient.sol \xe2\x80\xa600BiOverarching network behaviour performing:0DjA map from node ids to <code>NodeMap</code>s; note that the latter may \xe2\x80\xa6CjTrivial <code>Provider</code> where fetching always fails.BeThis node does not have any peers yet00AhSpin the node up or downoNot in progressAnThe query has not been startedBdClap arguments for output operationsCiThe channel has overflowed since the last element was \xe2\x80\xa6000Cmstructure of peers\xe2\x80\x99 config, including public key, stake \xe2\x80\xa6CcInternal error when generating the SNARK proof: {0}CaThe private key type for this signature algorithm0CkProposerId is a type that represents the proposer id of \xe2\x80\xa60kProving key00CiQueryError is an error that indicates that a specific \xe2\x80\xa6D`SNAFU context selector for the <code>Error::Query</code> variant00AiData used for a yes vote.CdType of the quorum size (e.g. number of votes or \xe2\x80\xa6AaQuorum vote AliasEbA reference to a <code>T</code> which can be resolved into a whole <code>T</code>.0DfFor <code>STAKE_TABLE_CAPACITY=200</code>, the light client prover \xe2\x80\xa6CcMapping of vote commitment to signatures and bitvecBiA simple yes vote over some votable type.ClStorage for the APIs provided in this crate, backed by a \xe2\x80\xa6BbNewType to disambiguate StakeTable0C`Generated by the following Solidity interface\xe2\x80\xa6CeModule containing a contract\xe2\x80\x99s types and functions.0B`What to re-export, what to hide?CjShow the stake table in the Espresso stake table contract.CkApplication-specific state delta, which will be used to \xe2\x80\xa6BoUse a Postgres database for persistent storage.CjWhether or not to stop inclusively or exclusively when \xe2\x80\xa6Bgenum describing how the tasks completedChThe runner of a test network spin up and down nodes, \xe2\x80\xa6CnThe testing run definition for the Push CDN. Uses the real \xe2\x80\xa600AdA TextFamily metric.CjA family of related text metrics, partitioned by their \xe2\x80\xa6Bldata describing how a round should be timed.CjInitiate a withdrawal of delegated funds from a validator.CgNewType to hold upgrades and some convenience behavior.0CkThe current view has changed; emitted by the replica in \xe2\x80\xa6DjType-safe wrapper around <code>u64</code> so we know the thing we\xe2\x80\x99re \xe2\x80\xa6Adthe status of a viewDeEvent with signature <code>Withdrawal(address,uint256)</code> and \xe2\x80\xa60000DfCustom error with signature <code>ZeroAmount()</code> and selector \xe2\x80\xa60000EcFunction with signature <code>_getVk()</code> and selector <code>0x12173c2c</code>.0000000000000000000CkReturn the single encoding of this value, delegating to the00000000000000000000000000000000000000000000CkAdd a vote to the total accumulated votes for the given \xe2\x80\xa60Cdpublic parameter for the aggregated signature schemeBjAdd a proposal to the stored DA proposals.BkAdd a proposal to the stored VID proposals.DkGet the timestamp from when the Migration was applied. <code>None</code>\xe2\x80\xa6CmGet a mutable reference to the underlying <code>PeerId</code>CiNumber of blocks to remove in a single pruning operation.CmBatch size for pruning. This is the number of blocks data \xe2\x80\xa6Cdnetworking behaviours wrapping libp2p\xe2\x80\x99s behavioursCbThe hash of the block containing this transaction.0CmOptional information of the number of transactions in the \xe2\x80\xa6000AmView number this block is forChyoinked from futures crate, adds sync bound that we needAbcreate certificateDeFunction with signature <code>cancel(bytes32)</code> and selector \xe2\x80\xa6000DdThe following is the main <code>Broker</code> binary, which just \xe2\x80\xa6CmCharge a fee to an account, transferring the funds to the \xe2\x80\xa6B`whether or not to check the leafBcThe commission to charge delegatorsAothe commit this run is based onBdThe commit this benchmark was run on1BjGet a commitment to the underlying object.0nVid CommitmentBhThe commitment for a null block payload.DfCalculate <code>xor(drb.cycle(), public_key)</code>, returning the \xe2\x80\xa6AfSets up all API routesDh<code>define_api</code> is a function that defines the API endpoints \xe2\x80\xa6AlSet up APIs for relay serverAgSimple Dependency typesAdDeploy all contractsAnOption to deploy fee contractsCiInternal implementation of the event loop, drives the \xe2\x80\xa6CdAdditional API specification files to merge with \xe2\x80\xa600000AmTime to live for fanout peers000AcProposed fee amountCmFetch the leaf at the given height, retrying on transient \xe2\x80\xa6CmExecute multiple queries and return the generated results \xe2\x80\xa60ClSearch the namespace table for the ns_index belonging to \xe2\x80\xa6DfCreates a new call builder for the [<code>firstEpoch</code>] function.ClCreate a certificate for the parent of a leaf, using the \xe2\x80\xa6AmBlock to start counting from.CiConstruct an error object from a type-erased standard \xe2\x80\xa6CgBuild a payload with the encoded transaction bytes, \xe2\x80\xa6BcDeserialize a public key from bytesBhParses a <code>PeerId</code> from bytes.BhDeserialize a peer\xe2\x80\x99s config from bytesBfDeserialize the private key from bytes34BkCreate new commitment for <code>data</code>BfDeserialize the type from a byte arrayBgConvert bytes to a <code>Message</code>DfCreates a new call builder for the [<code>getVersion</code>] function.00000000000000AnGET Block Height from the nodeBhRetrieve a value for a key from the DHT.CmReceive a record from the kademlia DHT if it exists. Must \xe2\x80\xa6Cnwhether DA membership is determined by index. if true, the \xe2\x80\xa60Afnumber of views to runDfCreates a new call builder for the [<code>initialize</code>] function.00000000000000BdSerialize to bytes and consume self.BjConvert transaction to raw vector of bytesCiNumber of invalid QCs we\xe2\x80\x99ve seen since the last commit.BeWhether or not the timeout is expiredBnDoes this fetch represent an unresolved query?CdThe QC linking this leaf to its parent in the chain.CbHelper function to get the proposal\xe2\x80\x99s justify_qc11AgPer spec, justificationBncertificate that the proposal is chaining from011B`Configuration for the L1 client.0Agnodes with a late startA`late start nodesAnHandling LCV1 state signaturesAnHandling LCV2 state signaturesAnHandling LCV3 state signaturesChThe chain of Leaves that were committed by this decision000CmThe decided leaves with corresponding validated state and \xe2\x80\xa6CaLoad a range of these objects from local storage.BgLoad stake table for epoch from storageBbInner <code>RwLockReadGuard</code>BcInner <code>RwLockWriteGuard</code>BlInner <code>RwLockUpgradableReadGuard</code>CnLook up a peer\xe2\x80\x99s addresses in kademlia NOTE: this should \xe2\x80\xa6nThe master mapCkImplementations for test memberships elections used for \xe2\x80\xa6CfMembership for Quorum certs/votes and DA committee \xe2\x80\xa6AeMembership for votingBhMembership we are accumulation votes for111111111CgQuorum membership for checking if requesters have stateBaMembership for Quorum Certs/votes004BaGet a reference to the membershipAiThe underlying membhersipBgThe minimum number of peers in the mesh000CgAdd custom migrations to run when connecting to the \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa60DhThe number of times to duplicate a <code>QuorumProposalSend</code> eventDgContainer type for the return parameters of the <code>name()</code> \xe2\x80\xa6000CaThis file implements the namespaced AvidM scheme.CgNamespaced AvidmGf2 scheme This file implements the \xe2\x80\xa6oTask\xe2\x80\x99s senderBlSortition trait Network access compatibilityCnCreates and returns a new signed record by signing the key \xe2\x80\xa6CbCreate a new signed request message from a requestBcGet a membership for the next epochBoThe stake table used for the next HotShot block0CjThe stake table used in the next block (only different \xe2\x80\xa60C`Mock implementation of persistence, for testing.AjNETWORK INITIAL NODE COUNTCaglobal index of node (for testing purposes a uid)00Bbhelpers for testing variable stakeAbThe node\xe2\x80\x99s statejnode typesBiReturn the list of namespace commitments.BeThe list of all namespace commitments0CkConvenience wrapper for <code>Self::read_ns_payload</code>.AfThe namespace payload.0CnRecover the payload for a given namespace. Given namespace \xe2\x80\xa60AdProduce a null blockAlThe number of public inputs.00EcFunction with signature <code>paused()</code> and selector <code>0x5c975abb</code>.0000DjThis file contains the <code>PersistentStore</code> struct, which is a \xe2\x80\xa6CbPlookup verifying key, None if not support lookup.00AgPolynomial evaluations.00ClA node POSTs its public key to let the orchestrator know \xe2\x80\xa6Ajpredicates to use in testsCnGiven a SRS, returns the proving key and verifying key for \xe2\x80\xa600BaForcefully disconnect from a peerBjEnable pruning with a given configuration.CkA map from public keys to <code>(node_index, is_da)</code>.AkThe public key of this nodeCeThe underlying (public) verification key, used to \xe2\x80\xa6101Cbonly get the public key from the stake table entryBgWrapper to get this node\xe2\x80\x99s public keynOur public keykPublic key.0AeThis Nodes public keyAeThis Nodes Public KeyAeThis nodes public key111AiPublic key for this node.AbThis nodes Pub Key11111111142666665BlThe validator\xe2\x80\x99s public key and stake valueAbGet the public key0:BbGet a reference to the public key.AlThe requester\xe2\x80\x99s public key>AjThe public key of the nodeCmPublish a key/value to the kv store. Once replicated upon \xe2\x80\xa6BhPublish a key/value to the record store.BeInsert a record into the kademlia DHTD`Helper function. Let <code>k = recovery_threshold</code> and \xe2\x80\xa6CbThe Merkle proofs against the original commitment.DfRead the namespace id from the <code>index</code>th entry from the \xe2\x80\xa6Belowest value of repeats for a messageDfCreates a new call builder for the [<code>revokeRole</code>] function.000CkThe lowest level cause of this error \xe2\x80\x94 this error\xe2\x80\x99s \xe2\x80\xa6AhSchnorr verification key0DdNotify the system of an event within <code>hotshot-consensus</code>.BfSign the state for legacy light clientAkSign the light client stateDhSign the light client state The input <code>msg</code> should be the \xe2\x80\xa60Boassembled signature for certificate aggregationAhThe collected signatures00111111111111111BdSignatures to the light client state0BmThe most recent light client state signaturesCmstart next timeout result: whether or not we succeeded if \xe2\x80\xa6BoThe view to enter when first starting consensusCnStarting view number that should be equivalent to the view \xe2\x80\xa6BaState certificate query data type0ClThe last formed light client state update certificate if \xe2\x80\xa6BiThe light client state update certificateBnGet the current light client state certificate1CnHelper function to get the proposal\xe2\x80\x99s light client state \xe2\x80\xa6CjThe light client state update certificate for the next \xe2\x80\xa60BoOptional light client state update certificate.BoState certificate validation and error handlingBnRetrieves the name of the state being queried.0CiAlternative URL to submit transactions to, if not the \xe2\x80\xa6EcFunction with signature <code>symbol()</code> and selector <code>0x95d89b41</code>.000CiSync the light client state from the relay server and \xe2\x80\xa600BoProvides trait to create task states from a \xe2\x80\xa6AgThe name of the tokens.CmSerialization (and deserialization) of primitive unsigned \xe2\x80\xa6DfCreates a new call builder for the [<code>undelegate</code>] function.0BfUpdate the current high QC in storage.BbUpdate the current eQC in storage.ChCan <code>n</code> fit into <code>byte_len</code> bytes?DfCreates a new call builder for the [<code>validators</code>] function.0AkFunction with signature \xe2\x80\xa6000000AcGet the vid shares.CnAll the VID shares we\xe2\x80\x99ve received for current and future \xe2\x80\xa6DdGet all paths under <code>dir</code> whose name is of the form .txt.CcThe view data. Wrapped in a struct so we can mutateB`Collect all votes the node sendsBmIndicates whether or not epochs were enabled.00CiProof of correctness for namespace payload bytes in a \xe2\x80\xa60CfProof of correctness for transaction bytes in a block.0CgAdaptor combining multiple data availability providers.0CnThe deserialized form of an authentication message that is \xe2\x80\xa6AnCommit type for AVID-M scheme.AoDummy struct for AVID-M scheme.CeAn implementation of QC using BLS signature and a \xe2\x80\xa6ClBlockDetail is a struct that represents the details of a \xe2\x80\xa60CgThe block header type that this hotshot setup is using.D`Header of a block, which commits to a <code>BlockPayload</code>.Beconfiguration for builder type to useCnThe certificate formed from the collection of signatures a \xe2\x80\xa6BlGlobal variables for an Espresso blockchain.000CiA request for a chain config with a particular commitmentCjA response for a chain config with a particular commitmentCmClientState represents the service state of the connected \xe2\x80\xa6AeA configuration error00DaSNAFU context selector for the <code>Error::Custom</code> variant0000Aorepresents progress through DHTCnWrapper metadata around libp2p\xe2\x80\x99s request response usage: \xe2\x80\xa6BhProposal for data availability committeeCiA proposal to start providing data availability for a \xe2\x80\xa6AiTracks state of a DA taskAmAlias for DA vote accumulatorEbTODO: Put <code>DataResponse</code> content in a <code>Box</code> to make enum \xe2\x80\xa6CnA request for some data that the consensus layer is asking \xe2\x80\xa6AfSettings for each typeDfAn <code>EventHandlerState</code> that modifies view number on the \xe2\x80\xa6CnTrait for structures that need to be unambiguously encoded \xe2\x80\xa6DjType-safe wrapper around <code>u64</code> so we know the thing we\xe2\x80\x99re \xe2\x80\xa6ChMessage for the next leader containing the epoch root QCCgGet some poly evals during jf_plonk::prepare_pcs_info()DgPossible event filters If the hotshot<code>EventType</code> enum is \xe2\x80\xa6C`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?AeA GaugeFamily metric.CjA family of related gauges, partitioned by their label \xe2\x80\xa6Amevent for global event streamDe<code>GlobalState</code> represents the internalized state of the \xe2\x80\xa6oa gossip  eventCmIgnore peers. Only here for debugging purposes. Allows us \xe2\x80\xa6DfEvent with signature <code>Initialized(uint64)</code> and selector \xe2\x80\xa60000000000000000000000000000000000DgCustom error with signature <code>InvalidArgs()</code> and selector \xe2\x80\xa60000000000000000000AmMetadata holder for get query0CiAn L1 block from which an Espresso chain should start \xe2\x80\xa6CkLatestBlock is a message that is meant to show the most \xe2\x80\xa6BiA request for a leaf with a given height.BaThe pre-epoch version of an Event>CeModule containing a contract\xe2\x80\x99s types and functions.000000000000>B`Run the light client API module.BhOptions for the light client API module.BlAn error occurred while attempting to listen00BgFailed to look up a node on the network00CmMAX_HISTORY represents the last N records that are stored \xe2\x80\xa6BgEnum representation of any message typeCmUnifies the possible messages that can be received by the \xe2\x80\xa6AoLeaf was not present in storage0BcGet mock genesis light client stateBiSerialized representation of a namespace.0Anspin the node\xe2\x80\x99s network downAbNetwork definition0CkByte range for the part of a tx table that declares the \xe2\x80\xa60C`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?DgCreates a new call builder for the [<code>PAUSER_ROLE</code>] function.0ChType alias for a shared collection of peerid, multiaddrs0AoFile system backed persistence.AlPostgres-backed persistence.BfGet jf_plonk::Verifier::batch_verify()CePublic input to the light client state prover service00AkThe Push CDN implementationDgThe concrete <code>QueryResult</code> implementation for this database.AiData used for a yes vote.AaQuorum vote AliasBlDelay between re-tries on unsuccessful callsCdA (signed or unsigned) record value to be stored \xe2\x80\xa6AbA request for dataBfA type alias for the hash of a requestAgUnderlying data requestAkThe type of request to makeChTake a node down to be restarted after a number of viewsC`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?DjEvent with signature <code>RoleGranted(bytes32,address,address)</code> \xe2\x80\xa600000000DjEvent with signature <code>RoleRevoked(bytes32,address,address)</code> \xe2\x80\xa600000000BoVerification key for verifying state signaturesDaSNAFU context selector for the <code>Error::Status</code> variantFeFor the <code>Qc2Formed</code>, <code>ExtendedQc2Formed</code>, and <code>EpochRootQcFormed</code>\xe2\x80\xa6AmData used for a timeout vote.AkMessage with a Timeout voteAgA timeout vote was sentAgTimeout Vote type aliasBkThe type of the transitions we are applyingBcItem within a <code>Payload</code>.ChA transaction which can read and modify the data source.CfA unit of atomicity for updating a shared data source.1AjAn atomic SQL transaction.10CfThe transaction type that this hotshot setup is using.5CeAbstraction over any type of transaction. Used by \xe2\x80\xa6ChThe schemes for database URLs that should match this \xe2\x80\xa6DjEvent with signature <code>Undelegated(address,address,uint256)</code> \xe2\x80\xa60000AeUnspecified log levelAhunsubscribe from a topicCiA lock for an upgrade certificate decided by HotShot, \xe2\x80\xa6BhRepresents the specific type of upgrade.000mUpgrade vote.AlMessage with an upgrade voteAhAn upgrade vote was sentAeUpgrade proposal voteCgThe user definition for the Push CDN. Uses the Quic \xe2\x80\xa6BcCONSTANT for protocol major versionBcCONSTANT for protocol minor versionBiVID disperse, like <code>Proposal</code>.AdVID shares were sentAbVID dispersal dataia messageAbThe view timed out000DgCustom error with signature <code>ZeroAddress()</code> and selector \xe2\x80\xa60000DgCreates a new call builder for the [<code>_hashBlsKey</code>] function.0Biaccumulator handles aggregating the votes00000000Alaccumulator for quorum votesDgCreates a new call builder for the [<code>activeStake</code>] function.nAdd an addressCaCommitments to the table column for Stake amounts0Bkthe anchor leaf for the hotshot initializerBkAdd a proposal to the stored VID proposals.DeFunction with signature <code>approve(address,uint256)</code> and \xe2\x80\xa6000DdConvert a <code>NsPayloadBytesRange</code> into a range that\xe2\x80\x99s \xe2\x80\xa6BcStores blocks built by this builderkblock typesDfFunction with signature <code>blsKeys(bytes32)</code> and selector \xe2\x80\xa60000CgThe state of the task, as a boxed dynamic trait object.BiBuild a block with provided builder stateClHelper function to construct all builder data structures \xe2\x80\xa6BiBuilder fee data for a null block payloadCnThe path to the CA key If not provided, a local, pinned CA \xe2\x80\xa60CnAny in progress attempts at catching up are stored in this \xe2\x80\xa6DeThe following is the main <code>Marshal</code> binary, which just \xe2\x80\xa6Bawhether or not to check the blockCmHandles an event for the Test Harness Task.  If the event \xe2\x80\xa6CkTo claim a block from the list of provided available blockskClaim block0AmPrepend an error to its causeBmPeek if the share contains a given namespace.CcCheck whether this share contains a given namespaceCiUnderlying coordinator, responsible for builder state \xe2\x80\xa6AeUnderlying membershipCbFunction to create the task state from a given \xe2\x80\xa6AeCreate a text metric.CjGenerate a cartesian product of tests across all types \xe2\x80\xa6BmBlock height where the current scan will end.BiView we last proposed to the DA committeeChPersistent storage and sources of data consumed by APIs.BnData for the <code>merklized_state</code> API.BcData for the <code>node</code> API.CgThe data source trait. Is what we use to derive the \xe2\x80\xa6BgThe data source to use for the protocolDkThis file contains the <code>DataSource</code> trait. This trait allows \xe2\x80\xa6CgA QC signing the leaf corresponding to <code>qc</code>.0ClA second QC extending the committing QC, causing the new \xe2\x80\xa61DgCreates a new call builder for the [<code>delegations</code>] function.0DfFunction with signature <code>deposit(address)</code> and selector \xe2\x80\xa60Abproperties of taskCcdeserialize attempts to convert a string into a \xe2\x80\xa6Cmdeserialize converts a string representation of a RFC3339 \xe2\x80\xa6CfDeserialize a message with a version number, using \xe2\x80\xa6BdConvert a string into a HotShotErrorAfHandler for DHT Events0AlThe timeout for DHT lookups.Camax time before dropping message due to DHT error11111CkThe size of the evaluation domain. Should be a power of \xe2\x80\xa600DhGet all paths under <code>dir</code> whose name is of the form .txt. \xe2\x80\xa6BoBinary to generate hardcoded parameters for \xe2\x80\xa6AkFunction with signature \xe2\x80\xa6000AlAccount authorizing the fee.Bireturn the first epoch (activation epoch)0BnFirst view in which epoch version takes effect000000000DbGet first epoch if epochs are enabled, <code>None</code> otherwiseClCreate and return a Libp2p network from a network config \xe2\x80\xa6C`Construct the state with the given block header.00DgCreates a new call builder for the [<code>getMinDelay</code>] function.0CdGet the state of the requested <code>account</code>.BhGet a counter in this sub-group by name.CfMinimum number of peers to emit gossip to during a \xe2\x80\xa6000CnA helper function that handles a vote regardless whether it\xe2\x80\xa6DeFunction with signature <code>hasRole(bytes32,address)</code> and \xe2\x80\xa600000000AoField indicating progress stateC`Embed the contents of a directory in your crate.BfInsert a forgotten path into the tree.0DgCreates a new call builder for the [<code>isEpochRoot</code>] function.00000DgCreates a new call builder for the [<code>isOperation</code>] function.0CmDetermines whether or not a certificate is relevant (i.e. \xe2\x80\xa60BeSeed to use for generating node keys.AaKillswitch senderAlStake table: map(vk, weight)AmRequest rate when polling L1.0Bfmost recent view seen by spinning taskBoThe leaf commitment signed by this certificate.AfCommitment to the leaf0DgCreates a new call builder for the [<code>lightClient</code>] function.00AoTurns on leaf only data storageBfthe local address we\xe2\x80\x99re listening onCkGet a reference to the network node handle\xe2\x80\x99s listen addr.1Cathe listener id we are listening on, if it exists0BjLoad the orchestrator config from storage.CfLoads all events from persistent storage up to the \xe2\x80\xa60AkLoad a header from storage.AdGet the locked view.BfThe <code>locked_qc</code> view numberCnLog a failure to call the inner transport. Returns whether \xe2\x80\xa6BlLog a successful call to the inner transportCmLooks up a node\xe2\x80\x99s <code>PeerId</code> by its consensus key.BmMaximum number of retires for one-shot proverCfThe maximum number of retries before considering a \xe2\x80\xa6C`Interval between retries if a state update failsBhThe memberships of this particular node.BdA copy of the membership coordinatorBgThe maximum number of peers in the mesh000ChIndicate whether it is possible this object could exist.ChThe minimum number of successful tries to consider a \xe2\x80\xa6AbUtilities for test00BhThe new version that we are upgrading toBiThe new version that we are upgrading to.AoSkip verifying L1 head numbers.Cjstake to apply to particular nodes. Nodes not included \xe2\x80\xa6kNode stakesCnDisperse a payload according to a distribution table and a \xe2\x80\xa60CgThe outer merkle proof of the namespace against the \xe2\x80\xa6Ainumber of bootstrap nodes0CeThe number of transactions that were latency measuredBjThe old version that we are upgrading fromBkThe old version that we are upgrading from.DhContainer type for the return parameters of the <code>owner()</code> \xe2\x80\xa60000000000000000000000000000000000DjParses a <code>HotShotEvent</code> and returns a tuple of: (sender\xe2\x80\x99s \xe2\x80\xa6DhContainer type for the return parameters of the <code>pause()</code> \xe2\x80\xa60000BdMethods for stake table persistence.0AkSequencer node persistence.Aesequencer persistenceEfGroup elements of the form <code>{ \\beta^i G }</code>, where <code>i</code> ranges \xe2\x80\xa600Bjpowers of \\beta time the generator h of G200CeThe predecessor operation id if you need to chain \xe2\x80\xa6AlThe private key of this nodeCfThe underlying (private) signing key, used to sign \xe2\x80\xa60oOur Private KeylPrivate Key.0AfThis Nodes private key22220AiThis replicas private keyCfThis nodes private/signing key, used to sign requests.444443ClThe validator\xe2\x80\x99s private key, should be in the mempool, \xe2\x80\xa6BcGet a reference to the private key.8CkThe proposer id of the block as stored within the block \xe2\x80\xa60CnThe list of public keys that are allowed to connect to the \xe2\x80\xa6000CeThe task which handles the logic for the quorum vote.CbA helper function to read to the end of the readerBfhighest value of repeats for a messageC`the number of remaining retries before giving up0Aanumber of retriesAinumber of retries to makeCfThe amount of time to wait between each retry of a \xe2\x80\xa6DgCreates a new call builder for the [<code>rewardClaim</code>] function.DiRuns a test by building the task using <code>build_fn</code> and then \xe2\x80\xa6CkSample from bernoulli distribution to decide whether or \xe2\x80\xa600Acnever drop a packet0BhSave the orchestrator config to storage.CdNumber of VID entries processed in the current scan.DgCreates a new call builder for the [<code>schnorrKeys</code>] function.DfGet the result of the first future to return <code>Some</code>, if \xe2\x80\xa6DgCreates a new call builder for the [<code>setAuthRoot</code>] function.AaSets the address.000000000000000000000000000000000000000000000000000000000000000CkThe permutation polynomial commitments. The commitments \xe2\x80\xa600Bgsign transactions (marketplace version)CiGets the public signature key of the votes creator/senderBiImplementations of the simple vote types.CeFetch a resource, if it is not already being fetched.CmStart the background tasks which keep the L1 client up to \xe2\x80\xa6CeUse an already-deployed StakeTable.sol instead of \xe2\x80\xa6BhGet the stake table for the current viewBkKeys for nodes participating in the network0oThe stake tableBlTypes and structs related to the stake tableCjGet all participants in the committee (including their \xe2\x80\xa60CcProxy\xe2\x80\x99s to <code>Membership.da_stake_table</code>0C`Get  Stake Table from Membership implementation.AgThe validator\xe2\x80\x99s stakeCiDuration to wait after all nodes are connected before \xe2\x80\xa6C`The epoch to enter when first starting consensusCjStarting epoch number that should be equivalent to the \xe2\x80\xa6BePeer nodes use to fetch missing state0ClImplementations for testing/examples Implementations for \xe2\x80\xa6D`Store stake table at <code>epoch</code> in the persistence layerDiSubmits the <code>QuorumVoteSend</code> event if all the dependencies \xe2\x80\xa6CjSearch the database for missing objects and generate a \xe2\x80\xa600Ansynchronous portion of networkDg<code>HotShotConfig</code> used for setting up the test infrastructure.frunnerBachannel used to shutdown the testCkCreate a family of related text metricx, partitioned by \xe2\x80\xa6ktiming dataAmConvert to ViewChangeEvidenceClConsume <code>self</code> and return a <code>Proposal</code>00DhContainer type for the return parameters of the <code>token()</code> \xe2\x80\xa60000DgCreates a new call builder for the [<code>totalSupply</code>] function.0BnGet the total number of nodes in the committeeAeTotal number of nodesClReturns the number of total nodes in the committee in an \xe2\x80\xa6DcTotal number of nodes in the network. Also known as <code>n</code>.1CcProxy\xe2\x80\x99s to <code>Membership.da_total_nodes</code>0C`Proxy\xe2\x80\x99s to <code>Membership.total_nodes</code>BoGet Total Nodes from Membership implementation.BeRead a transaction from this payload.BnGet a transaction by its block-specific index.0B`The underlying transaction data.0AeTransaction fetching.A`SQL transactionsAjGet the height of the tree0BjTry to acquire a permit for the given key.ChGet the underlying object if it is available without \xe2\x80\xa6CfGet the requested data if it is available immediately.1Aoincoming stream of transactionsEdFunction with signature <code>unpause()</code> and selector <code>0x3f4ba83a</code>.0000AhUnsubscribe from a topicDgCreates a new call builder for the [<code>updateDelay</code>] function.0CnUpdate the validated state map with a new view_number/view \xe2\x80\xa6CnPeriodically updates the stake table from the L1 contract. \xe2\x80\xa6BjAsync task which updates the shared state.0CnThe libp2p view update is a special operation intrinsic to \xe2\x80\xa6CmUpdate view can be used for any reason, but mostly it\xe2\x80\x99s \xe2\x80\xa6AhUpdate the current view.BoThe view number that this event originates fromBdget the view number out of a message11AgThe view that timed outBfThe view number that has just finished1101AnThe view number that timed outB`Time when this leaf was created.AmWhich view this QC relates toAgView number to vote on.CeReturn the view number for a hotshot event if presentAoThe view number to propose for.8BkGet the view number this message relates to6Aoget the view out of the messageAgThe round that finishedCcHelper function to get the proposal\xe2\x80\x99s view_number88AmView this proposal applies to00BgCurView from leader when proposing leafAlview number for the proposal011CcThe view number that this block is associated with.CcThe view number for which this VID data is intended000BoThe view number that this event originates from0AgThe view that timed outBfThe view number that has just finished1101AcCurrent view number0CgThe view number that we\xe2\x80\x99re requesting a proposal for.AmWhich view this QC relates to00000000000000AoThe view this vote was cast for000000000000000BkReturns the view number the type refers to.AiBootstrapping View numberChWait for our view of the L1 chain to catch up to the \xe2\x80\xa6BlReturns when the transport has been switchedAcADVZ dispersal dataA`an autonat eventBeRe-export the AVID-M namespace proof.0BeConstant for the version of this API.BfBLS signature type for consensus votesBdStruct describing a benchmark resultAoThe requested block was missingBmAbstraction over the full contents of a blockC`The block type that this hotshot setup is using.1CfBlockSummary is a struct that represents a summary \xe2\x80\xa60EeFunction with signature <code>COSET_K1()</code> and selector <code>0xe3512d56</code>.000EeFunction with signature <code>COSET_K2()</code> and selector <code>0x0c551f3f</code>.000EeFunction with signature <code>COSET_K3()</code> and selector <code>0x5a14c0fe</code>.000EeFunction with signature <code>COSET_K4()</code> and selector <code>0xde24ac0f</code>.000AhEvent with signature \xe2\x80\xa6000C`A chaotic network using all the networking callsB`Base field in the prover circuitCeCombined Network implementation (libp2p + web server)CmThe API that tasks use to talk to the system TODO we plan \xe2\x80\xa6ClCallback when fetching the leaf in order to then look up \xe2\x80\xa6CaCurrencyCode represents an enumeration of all \xe2\x80\xa60C`Behaviour wrapping libp2p\xe2\x80\x99s kademlia included:AlA response to a data requestBfWhat type of delay we want to apply toCjConvenient handler that builds all the input arguments \xe2\x80\xa6DaAlias for DRB seed input for <code>compute_drb_result</code>, \xe2\x80\xa6C`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?BjCompute the epoch number from block heightCjGenerate internal hash values for the BLS signature schemeBfConfiguration for Libp2p\xe2\x80\x99s Gossipsub000CgReexport error type Error type for <code>HotShot</code>BcError type for <code>HotShot</code>CiAll of the possible events that can be passed between \xe2\x80\xa67BkA node is currently in the epoch transitionCiType for holding result sets matching epochs to stake \xe2\x80\xa60CkInvalidLimit is an error that represents that the there \xe2\x80\xa6AaInvalid parameterDhCustom error with signature <code>InvalidProof()</code> and selector \xe2\x80\xa60000000000000000000AaInvalid VID shareCbThe consensus state machine is in an invalid stateBmInvalid light client state or signatures: {0}1ClLatestVoters is a message that is meant to show the most \xe2\x80\xa6ChLeafAndBlock is a tuple that contains a [Leaf] and a \xe2\x80\xa6BfConfiguration describing a libp2p nodeDgSNAFU context selector for the <code>EventError::Missing</code> variantDgSNAFU context selector for the <code>QueryError::Missing</code> variantBdErrors that can occur in the network00Cnevents generated by the swarm that we wish to relay to the \xe2\x80\xa6ClNodeIdentity represents the identity of the node that is \xe2\x80\xa6AiNamespaced parameter typeBfNamespaced share for each storage nodeCjDefines a dependency that completes when one of it\xe2\x80\x99s \xe2\x80\xa6Ciwe source the network configuration from the orchestratorCgA packed bundle constructed from a sequence of bundles.CfHelper type for programmatically constructing queries.0C`Marker that data should use the quorum cert typeChThe errors that can occur when making a request for dataDbSNAFU context selector for the <code>Error::Request</code> variant0000CkSearchResult is a struct that represents the results of \xe2\x80\xa60CkA trait for serializing and deserializing a type to and \xe2\x80\xa6CaType alias for byte array of SHA256 digest lengthCkTrait for abstracting public key signatures Self is the \xe2\x80\xa6CcThe signature key that this hotshot setup is using.1AcSpinning task stateCiRegister the validators and delegates for the local demo.C`Generated by the following Solidity interface\xe2\x80\xa60B`What to re-export, what to hide?CdKey pairs for signing/verifying a light client stateBlSigning key for signing a light client stateBhTime to wait for txns before sending \xe2\x80\xa6mtest launcherDaAdditional functions required to use a <code>Leaf</code> with \xe2\x80\xa6AmData used for a timeout vote.AkMessage with a Timeout voteAiTimeout Vote 2 type aliasAhCheck ESP token balance.CfNew transactions were received from the network or \xe2\x80\xa6000Ahthe type of transmissionCiAn error returned from <code>Receiver::try_recv()</code>.0AiThe hash for the upgrade.mUniversal SRS00CdData used for an upgrade once epochs are implementedAgUpgrade proposal 2 votemVerifying key00CjVid disperse share has been received from the network; \xe2\x80\xa6AjTracks state of a VID taskDkThe view has finished.  If values were decided on, a <code>Decide</code>\xe2\x80\xa6000CkFor the <code>ViewSyncFinalizeCertificateRecv</code> event.B`<code>ViewSync</code> task stateAnMessage with a view sync vote.nView Sync VoteAbThe view timed out0DhCustom error with signature <code>WrongPlonkVK()</code> and selector \xe2\x80\xa600000DiContainer type for the return parameters of the <code>_getVk()</code> \xe2\x80\xa60000000000000000000ClSpawn a task to fetch the object from a remote provider, \xe2\x80\xa6BgAdd a provider to the list of providersBbValidatedState for the anchor leafBdAdd an entry to the namespace table.C`Updates state with <code>Header</code> proposal.Aoasynchronous portion of networkEeFunction with signature <code>authRoot()</code> and selector <code>0x998328e8</code>.000000CmThe signed authentication message sent to the remote peer \xe2\x80\xa600000ChA pre-signed message that we (depending on if it\xe2\x80\x99s \xe2\x80\xa6Cdverified the BLS and Schnorr signatures in the event0B`Queries for HotShot chain state.ClAvailability storage implementation for a database query \xe2\x80\xa6DgFunction with signature <code>balances(address)</code> and selector \xe2\x80\xa60CmThe offset for how far in the future the upgrade actually \xe2\x80\xa6CjFor the wire format, we use bincode with the following \xe2\x80\xa6AfThe address to bind to00000BhThe block header contained in this leaf.CdHelper function to get the proposal\xe2\x80\x99s block_header11AjThe block header to append00mBlock header.0A`the block heightCdThe height of the block containing this transaction.0AdCurrent block height0mBlock number.AeGet the block number.BnThe block number attached to this certificate.CnBlock number of the leaf. It\xe2\x80\x99s optional to be compatible \xe2\x80\xa6CcCommitments to the table column for BLS public keys0AlSender to the bootstrap taskAfbuilder implementation00CaKeys that this builder will use to sign responses0AdBuilder API base URL0AcHotShot builder URLClThe path to the CA certificate If not provided, a local, \xe2\x80\xa60CmCreates a new call builder using this contract instance\xe2\x80\x99\xe2\x80\xa6000000000000000000000000000000000000000000000000000000000000000CcContainer type for the return parameters of the \xe2\x80\xa6000BcCancel all tasks for previous viewsCkCancel all tasks the consensus tasks has spawned before \xe2\x80\xa60BjThe address where a CDN marshal is locatedCnThe socket address of the HotShot CDN\xe2\x80\x99s main entry point \xe2\x80\xa6DfConfiguration <code>Header</code> proposals will be validated against.CdA commitment to a ChainConfig or a full ChainConfig.100DkGet the upgrade data from <code>UpgradeType</code>. As of this writing, \xe2\x80\xa6ClVerifiable <code>ChainConfig</code> holding contract address22022DhCreates a new call builder for the [<code>claimRewards</code>] function.0BfPeer nodes use to fetch missing configDhCreate an empty builder, with all fields set to <code>None</code> or \xe2\x80\xa60000DeCreate a <code>Gauge</code> with an optional <code>unit_label</code>.DhCreates a new call builder for the [<code>currentEpoch</code>] function.00000BcThe current number that is running.A`The current viewBgReturns a copy of the last decided leafDeGet the last decided leaf of the <code>SystemContext</code> instance.AkGets the last decided leaf.EeFunction with signature <code>decimals()</code> and selector <code>0x313ce567</code>.000CiLowest value in milliseconds that a packet may be delayedCilowest value in milliseconds that a packet may be delayed0DfFunction with signature <code>delegate(address,uint256)</code> and \xe2\x80\xa60000BcDelete a batch of data for pruning.Cfcompute the epoch corresponding to <code>height</code>0C`Downcast this error object by mutable reference.BhDowncast this error object by reference.lEpoch heightCiNumber of blocks in an epoch, zero means there are no \xe2\x80\xa60Ainumber of block per epoch0111111111111lepoch height2222AlNumber of blocks in an epoch33CkGet the epoch number this message relates to, if applicableCcThe view number that this block is associated with.EeFunction with signature <code>espToken()</code> and selector <code>0xf092e13a</code>.0CeUse an already-deployed EspTokenV2.sol instead of \xe2\x80\xa6BdMnemonic phrase for builder account.BmMnemonic phrase for a funded Ethereum wallet.Bjethers-compatible/equivalent serializationCmCreates a new event filter using this contract instance\xe2\x80\x99\xe2\x80\xa6000000000000000000000000000000000000000000000000000000000000000Bfobtains a stream to expose to the userAhStream consensus events.DhCreates a new call builder for the [<code>executeBatch</code>] function.0CnExecute multiple queries and return the rows affected from \xe2\x80\xa60CfUse an already-deployed FeeContract.sol instead of \xe2\x80\xa6AkFee contract address on L1.000Aginitialize from genesisBgProduce a public key from a private key0BmGet a gauge family in this sub-group by name.CkCreate a family of related gauges, partitioned by their \xe2\x80\xa6Dkturn a description of a test (e.g. a <code>TestDescription</code>) into \xe2\x80\xa6BoGenerate the communication channels for testing00DhCreates a new call builder for the [<code>genesisState</code>] function.00000000BkPath to TOML file containing genesis state.0DhCreates a new call builder for the [<code>getRoleAdmin</code>] function.000DhCreates a new call builder for the [<code>getTimestamp</code>] function.0CeGet the state of the requested <code>accounts</code>.0Ajget endpoints for buildersClAttempts to get the chain ID from the provider, retrying \xe2\x80\xa6BdGet the blocks Merkle tree frontier.0CkGet a (possibly nested) subgroup of this group by its path.Bnglobal state handle, defined in the service.rsC`Update storage based on an event from consensus.CmHandles an event, providing direct access to the specific \xe2\x80\xa6C`Handles an event from one of multiple receivers.00A`Handles an eventBjCheck if a node has stake in the committeeBmCheck if a node has stake in the da committeeCjSee if a node has stake in the committee in a specific \xe2\x80\xa60BhTask primitives for <code>HotShot</code>DeIgnore <code>peers</code> when pruning e.g. maintain their connectionDhCreates a new call builder for the [<code>initializeV2</code>] function.0000000DhCreates a new call builder for the [<code>initializeV3</code>] function.00ClThe Espresso block header includes information about the \xe2\x80\xa6CmBundle of views which we performed the most recent action \xe2\x80\xa6CdTracks the latest node index we have generated a \xe2\x80\xa6CfUse an already-deployed LightClient.sol instead of \xe2\x80\xa6BmHelpers and test mocks for Light Client logicCdTypes and structs associated with light client stateAnAdd a light client API module.CnResolve a namespace index to the serialized identifier for \xe2\x80\xa60Cknamespace_id returns the namespace id of the individual \xe2\x80\xa60AlAdversarial Espresso client.Cjnetwork_type is meant to represent the type of network \xe2\x80\xa6Aothe next node unique identifierCgReturn the timeout duration and start the next timeout.Bnthe changes in node status, time -&gt; changesAfNode Validator ServiceClPerform an async operation on all providers matching the \xe2\x80\xa6oOpsTimelock.solDiContainer type for the return parameters of the <code>paused()</code> \xe2\x80\xa60000Cgpayload_size returns the size of the payload of the \xe2\x80\xa60BhPhantom data to help with type inferenceCdpost endpoint for registering a builder with the \xe2\x80\xa6CnPrepare the SQL query, with parameter type information, to \xe2\x80\xa60BbWhether primary is considered down0BcCommitment for QC verification keys00BeBreak a range into fixed-size chunks.CkRead the number of namespaces declared in the namespace \xe2\x80\xa6BjPrivate helper. (Could be pub if desired.)CkThe running delta between the records in the persistent \xe2\x80\xa6CkHandle a message from either twin, forwarding it to the \xe2\x80\xa6Bimodify incoming messages from the networkCiReceive one or many messages from the underlying network.00DiReceive a message. Is agnostic over <code>transmit_type</code>, which \xe2\x80\xa61CmRegisters two versions (v0 and v1) of the same API module \xe2\x80\xa6CmUrl of the state relay server (a CDN that sequencers push \xe2\x80\xa6ClA relay server that\xe2\x80\x99s collecting and serving the light \xe2\x80\xa6AmUrl of the state relay serverDhCreates a new call builder for the [<code>renounceRole</code>] function.000Bgchannel receiver for the block requestsCjThe hash of the request. We need this so we can remove \xe2\x80\xa6ChThe hash of the application-specific request we\xe2\x80\x99re \xe2\x80\xa6AoReset the schema on connection.oRewardClaim.solCmsample from uniform distribution to decide whether or not \xe2\x80\xa600AeGet the saved leaves.AkMap of leaf hash -&gt; leafAkFunction with signature \xe2\x80\xa6000ClHandle a message sent to the twin from the network task, \xe2\x80\xa6Bimodify outgoing messages from the networkCnSend an event to the next leader containing the highest QC \xe2\x80\xa6Bfsend an action to the networkbehaviour0BdSend a client request to the networkDhCreates a new call builder for the [<code>setHotShotUp</code>] function.00CgAdvance the version of the persistent store without \xe2\x80\xa600DbCreates a <code>SystemContextHandle</code> with the given even \xe2\x80\xa6lStake amount00AkThe associated stake amountDistarts the swarm listening on <code>listen_addr</code> and optionally \xe2\x80\xa6Bkwhether to initialize the solver on startupCaReturn a reference to the consensus state signer.BhContext for generating state signatures.AeState tables to pruneBjstore stake table events upto the l1 blockDiContainer type for the return parameters of the <code>symbol()</code> \xe2\x80\xa6000AgReturn the target epochCcEpoch to which the recipients of this VID belong to0CgThe epoch number to which the recipient of this VID \xe2\x80\xa6ClAmount (in bytes) of data to retain in consensus storage \xe2\x80\xa6AlTasks this registry controlsgbuilderCnMacro to test multiple <code>TaskState</code> scripts at once.AcTimeout task handleCjTimeout task handle, when it expires we try the next relayAdrunning timeout taskAnConvert to ViewChangeEvidence2AiThe symbol of the tokens.BdGet the transactions in the payload.AhThe list of transactions0AeList of transactions.CbThe task which implements all transaction handlingBlThe bundle transactions sent by the builder.433DfFunction with signature <code>transfer(address,uint256)</code> and \xe2\x80\xa6000DhCreates a new call builder for the [<code>transferFrom</code>] function.0BkHow many transactions to include in a blockEdSerialize <code>n</code> into <code>BYTE_LEN</code> bytes in little-endian form, \xe2\x80\xa6AiUpdate the current epoch.Bcshared lock for upgrade informationAjLock for a decided upgrade00000000000000000Acversion informationAhThe type of the upgrade.0Bcview in which to propose an upgradeCnGiven an upgrade certificate and a view, tests whether the \xe2\x80\xa60BlOption to deploy contracts owned by multisigCkThe associated signature of the light client state for LCV2BjThe signature to the light client V2 stateCmMakes sure the sender is allowed to send a request in the \xe2\x80\xa6DgValidate that <code>FeeAmount</code> that is sufficient for block size.CcContainer type for the return parameters of the \xe2\x80\xa6000000CgInternally verify the share given necessary information00DlVerify the given VID <code>share</code> against the VID <code>commit</code>.AiVerify a namespaced share0ClThis module provides types for VID disperse related data \xe2\x80\xa6CgThe weight of query actions in the random distribution.CjThe maximum number of headers which can be loaded in a \xe2\x80\xa6EdConvert this <code>Fetch</code> to a <code>Result</code> with the provided error \xe2\x80\xa6CnUse the given metrics collector to publish metrics related \xe2\x80\xa6CmWait for the requested data to become available, but only \xe2\x80\xa6Bcadd vec of known peers or addressesClDefines a dependency that completes when all of its deps \xe2\x80\xa6AcADVZ dispersal datanVID ParametersCcVID Share type to be distributed among the parties.EhFunction with signature <code>BETA_H_X0()</code> and selector <code>0x834c452a</code>\xe2\x80\xa6000EhFunction with signature <code>BETA_H_X1()</code> and selector <code>0xaf196ba2</code>\xe2\x80\xa6000EhFunction with signature <code>BETA_H_Y0()</code> and selector <code>0xf5144326</code>\xe2\x80\xa6000EhFunction with signature <code>BETA_H_Y1()</code> and selector <code>0x4b4734e3</code>\xe2\x80\xa6000AnA <code>BN254</code> instance.00000000000000000000CmBalanceAmount is a type that represents a general balance \xe2\x80\xa60BaThe requested block was not foundBcPinned future that is Send and SyncCiDescribes a possible change to builder status during testAfClient for builder API0BgConfiguration to initialize the builderAhEvent with signature \xe2\x80\xa6000Bjtypes in src/libraries/PlonkVerifierV2.solCmClientMessage represents the messages that the client can \xe2\x80\xa6BlActions to send from the client to the swarmDcA type alias for <code>HashMap&lt;Commitment&lt;T&gt;, T&gt;</code>CiTrait for time compatibility needed for reward collectionCeError when communicating with the smart contract: {0}AgA CounterFamily metric.ClA family of related counters, partitioned by their label \xe2\x80\xa6Ajdescription of a crosstestAcMessage with a DAC.AmCertificate data is availableCkType alias for a <code>DaCertificate</code>, which is a \xe2\x80\xa6DeBlanket trait combining <code>Debug</code> and <code>Provider</code>.BnDecide Message to be put on the decide channelAnConfig for each supported typeDiCustom error with signature <code>DeprecatedApi()</code> and selector \xe2\x80\xa60000000000000Cbclient request to send a direct serialized messageBdRecv-ed a direct message from a nodeAmWe received as Direct RequestDcCreates a new call builder for the [<code>EXECUTOR_ROLE</code>] \xe2\x80\xa60DiCustom error with signature <code>EnforcedPause()</code> and selector \xe2\x80\xa60000ClMessage for the next leader containing the epoch root QC \xe2\x80\xa6CkContainer for all the <code>EspToken</code> function calls.0DiCustom error with signature <code>ExpectedPause()</code> and selector \xe2\x80\xa60000DcSNAFU context selector for the <code>Error::Explorer</code> variantClInformation about the genesis state which feeds into the \xe2\x80\xa60BgAny type that is associated with a viewCiTypes which have a notion of \xe2\x80\x9cheight\xe2\x80\x9d within a chain.BiA list of actions that we track for nodesBnHolds configuration for a <code>HotShot</code>BbRun the hotshot events API module.CdOptions for the Hotshot events streaming API module.Cjan identify event. Is boxed because this event is much \xe2\x80\xa6ClThe instance-level state type that this hotshot setup is \xe2\x80\xa6CjInstance-level state, which allows us to fetch missing \xe2\x80\xa6DcSNAFU context selector for the <code>Error::Internal</code> variantDiCustom error with signature <code>InvalidScalar()</code> and selector \xe2\x80\xa60000000000000000000000000CcA yet-to-be-started node that participates in testsAkWe decided the given leavesDjNetworking implementation that uses libp2p generic over <code>M</code> \xe2\x80\xa60C`Generated by the following Solidity interface\xe2\x80\xa60B`What to re-export, what to hide?110BnA callback to process the result of a request.BaIn memory only network simulator.0CjAllows to fix the size of the message at compilation time.CkA family of related metrics, partitioned by their label \xe2\x80\xa6CmMonetaryValues is a struct that paris a CurrencyCode with \xe2\x80\xa60BeChanges that can occur in the networkAga network configurationAcA node is connectedDhSNAFU context selector for the <code>EventError::NotFound</code> variantDhSNAFU context selector for the <code>QueryError::NotFound</code> variantAjNamespaced commitment typeBhDummy struct for namespaced AvidM schemeDiCustom error with signature <code>OutdatedState()</code> and selector \xe2\x80\xa60000000000000000000DcCreates a new call builder for the [<code>PROPOSER_ROLE</code>] \xe2\x80\xa60CmCreates a new event filter for the <code>Paused</code> event.0?C`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?ClThe production run definition for the Push CDN. Uses the \xe2\x80\xa600DcSNAFU context selector for the <code>Error::QueryVid</code> variantBoShare type to be distributed among the parties.BoA handle that closes a subscriber when dropped.CjList of keys to send a message to, or broadcast to all \xe2\x80\xa6CmServerMessage represents the messages that the server can \xe2\x80\xa6BlThe view and epoch number of the first epochCmA data source for the APIs provided in this crate, backed \xe2\x80\xa6CmLight client state Variable The stake table commitment is \xe2\x80\xa600Bjconvenience type alias for state and blockBdconvenience type for state and blockBiOptional validated state and state delta.DgHolds the state needed to participate in <code>HotShot</code> consensusCmType for mutable task state that can be used as the state \xe2\x80\xa6Ceextra functions required on block to be usable by \xe2\x80\xa6CeImplement this method to add some delay to async callCeextra functions required on state to be usable by \xe2\x80\xa6DoA type alias for an <code>Arc&lt;dyn Any + Send + Sync + &#39;static&gt;</code>AlThe feature is unimplemented0CmUnimplemented is an error that indicates that the feature \xe2\x80\xa61BiHolds configuration for the upgrade task.CmA type alias for the future that upgrades a connection to \xe2\x80\xa6BaArguments passed to the validatorDiEvent with signature <code>ValidatorExit(address)</code> and selector \xe2\x80\xa60000AcVID Commitment typeAcPhases of view syncClWalletAddress is a type that represents the address of a \xe2\x80\xa60CkAccount index in the L1 wallet generated by MNEMONIC to \xe2\x80\xa6CeAccount index when deriving an account from MNEMONIC.00ChThe mnemonic account index to use when deriving the key.0CiThis function will fetch the cross epoch state update \xe2\x80\xa60DgFunction with signature <code>allowance(address,address)</code> and \xe2\x80\xa6000BjAnchored leaf provided by the initializer.DeUpdates the <code>ValidatedState</code> if a protocol upgrade has \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa6000CdGet a mutable reference to the underlying connectionAjyoinked from futures crateDhFunction with signature <code>balanceOf(address)</code> and selector \xe2\x80\xa6000AmThe results of the benchmarksBdTest implementation of block builderAhgenerate a genesis block00AgOptional block payload.mBlock payload111188888AnBLS signature over the address0lbuilder impl00CjThe whitelist is an adaptor that is able to update the \xe2\x80\xa6CfMaximum number of unprocessed transaction submissions.CoThe QC signing the most recent leaf in <code>leaf_chain</code>.0ClThe QC signing the latest new leaf, causing it to become \xe2\x80\xa61CmNumber of confirmations to wait for before considering an \xe2\x80\xa6BmContains the <code>ConsensusApi</code> trait.Cgsend a transaction and wait for confirmation before \xe2\x80\xa6AnTimestamp this view starts at.BlBlock height where the current scan started.CkDA committees, indexed by the first epoch in which they \xe2\x80\xa60CnDA committees from HotShotConfig, to apply when an upgrade \xe2\x80\xa60CdAll public keys known to be DA nodes, by start epochCjThe known DA nodes\xe2\x80\x99 public keys and stake values, by \xe2\x80\xa6DcCreates a new call builder for the [<code>dailyLimitWei</code>] \xe2\x80\xa6BiReturns the last decided validated state.DjGet the last decided validated state of the <code>SystemContext</code> \xe2\x80\xa6BfGets the last decided validated state.CfMax value in milliseconds that a packet may be delayedCjhighest value in milliseconds that a packet may be delayed0CcContainer type for the return parameters of the \xe2\x80\xa60BgThe path to the file to save the DHT to00000BmReturn a dummy new genesis that will pass \xe2\x80\xa6CiReturn a dummy new genesis stake state that will pass \xe2\x80\xa6CkUtilities for converting between HotShotError and a string.4444BfAccount that receives sequencing fees.000CfSignature over fee amount by <code>fee_account</code>.CaTimeout for failing requests due to missing data.0Ckconvert a field element to U256, panic if field size is \xe2\x80\xa6CfThe offset for how far in the future the upgrade ends.ClIf enabled newly created messages will always be sent to \xe2\x80\xa6000BlGenerate key pairs from private signing keysBgFuse two channels into a single channelClWrap the supplied future in an upgrade that performs the \xe2\x80\xa6DbBind all interfaces on port <code>port</code> NOTE we may want \xe2\x80\xa6ClGenerates an authenticated transport checked against the \xe2\x80\xa6Bcgenerate the code for a single testDcCreates a new call builder for the [<code>getFirstEpoch</code>] \xe2\x80\xa6BgGets the DRB result for the given epochBhWraps the same named Membership trait fnBjGet a histogram in this sub-group by name.DgSame as <code>Self::get_range</code>, but yields objects in reverse \xe2\x80\xa6CjGet the stored VID share for a given block, if one exists.0BhConfiguration for <code>GossipSub</code>00000CiAffects how many peers we will emit gossip to at each \xe2\x80\xa6000DgFunction with signature <code>grantRole(bytes32,address)</code> and \xe2\x80\xa600000000CiHandle output of the payload to the specified destinationCcContainer type for the return parameters of the \xe2\x80\xa600000000DcCreates a new call builder for the [<code>hashOperation</code>] \xe2\x80\xa60BjThe highest block number that we have seenAhnodes that hit view syncCnTypes and Traits for the <code>HotShot</code> consensus moduleBhGeneral (not HotShot-specific) utilitiesBmRecent included txs set while building blocksCdThe transactions in the block payload for each leaf.BdSerialize to bytes and consume self.DcCreates a new call builder for the [<code>isGtEpochRoot</code>] \xe2\x80\xa600000DjIs the payload byte length declared in a <code>ADVZCommon</code> equal \xe2\x80\xa6Ckreturn true of the current state is epoch root since it \xe2\x80\xa60ClReturns true if the given block number is the third from \xe2\x80\xa6ChReturns true if the block is the last block in the epochDiReturns <code>true</code> if this error indicates the receiver missed \xe2\x80\xa60BnChecks if the cert is valid in the given epochBdname of the key type (for debugging)0BeRPC client to the L1 (or L2) providerAathe libp2p config0CnThe number of nodes a Libp2p node should try to maintain a \xe2\x80\xa6BfThe target number of peers in the meshCbTarget number of peers for the Libp2p mesh networkCmReturns the leader\xe2\x80\x99s public key for a given view number \xe2\x80\xa6EdThe leader of the committee for view <code>view_number</code> in <code>epoch</code>.0Dloptional gas price cap <strong>in wei</strong> to prevent prover sending \xe2\x80\xa6Dnmax acceptable gas price <strong>in Gwei</strong> for prover to send light \xe2\x80\xa6BbMaximum namespace ID to submit to.BbMinimum namespace ID to submit to.CkA collection of namespace ids that are contained within \xe2\x80\xa60CjA raw QC from the subsequent epoch\xe2\x80\x99s quorum, if this \xe2\x80\xa6CjA QC from the next epoch\xe2\x80\x99s membership, if this QC is \xe2\x80\xa6B`Optional index of the next node.CdSkip all migrations when connecting to the database.BaSkip verifying header timestamps.BaNumber of network bootstrap nodes0CaReturns number of peers this node is connected to0Dg(Aggregated) proof of evaluations at challenge point <code>zeta</code>.00CnOutput the results to a csv file according to orchestrator \xe2\x80\xa6ClHelper function. Transform the payload bytes into a list \xe2\x80\xa6BjWait for someone else to fetch the object.CnThe encoded peer ID of the sender. This is appended to the \xe2\x80\xa6BfThe partial proof for Plookup argument00CkPost an identity to the orchestrator. Takes in optional \xe2\x80\xa60DcCreates a new call builder for the [<code>proxiableUUID</code>] \xe2\x80\xa600000000000000Bfget the public config of the validatorAoHelper: initialize a FFT domainBnReturn the internal <code>recipient_key</code>Bca public key of the share recipient0AmRecord a HotShotAction taken.Clreset last actions to genesis so we can resend events in \xe2\x80\xa6CdResets high qc and next epoch qc to the provided \xe2\x80\xa6BdChannel to send the response back toBdnumber of times to repeat the packet00DcCreates a new call builder for the [<code>scheduleBatch</code>] \xe2\x80\xa60CkURL of a sequencer node that is currently providing the \xe2\x80\xa6CiURL of a node that is currently providing the HotShot \xe2\x80\xa6C`Sequencer endpoint to query for stake table info22DcCreates a new call builder for the [<code>setDailyLimit</code>] \xe2\x80\xa6CkWhether or not the transport should be switched back to \xe2\x80\xa6CjWhether or not the transport should be switched to the \xe2\x80\xa6CiReceiver for the shutdown signal from the testing harnessDgA flag indicating that <code>HotShotEvent::Shutdown</code> has been \xe2\x80\xa6ClWhether or not this current transport is being shut down \xe2\x80\xa6C`Types and structs for the hotshot signature keysC`Minimal compatibility over public key signaturesCdGet information identifying a <code>Snapshot</code>.BiInitiates connection to the outside world5CnSpawned tasks related to a specific view, so we can cancel \xe2\x80\xa6Antask to spin nodes up and downCfthe stake table (snapshot) this QC is verified againstAmthe peer\xe2\x80\x99s state public key0Agstate verification keys00Biverify HotShot state in the state-prover.2Bastorage types for hotshot storagehlauncherClReceiver for test events, used for communication between \xe2\x80\xa6ChThe exponential backoff ratio for the next-view timeout.Ca[DEPRECATED] Deployed ESP token contract address.BbTotal weights of all storage nodes00000AfGet the transition QC.BgThe transition QC for the current epochCeTry to get a range of objects from local storage, \xe2\x80\xa6Ck<code>ToString::to_string</code>, but without panic on OOM.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Bktxns currently in the <code>tx_queue</code>Bcconvert U256 to a field (mod order)DcCreates a new call builder for the [<code>undelegations</code>] \xe2\x80\xa60DjContainer type for the return parameters of the <code>unpause()</code> \xe2\x80\xa60000CjUpdate the last actioned view internally for votes and \xe2\x80\xa6BhMap of all signatures accumulated so farCiCreate a new, empty multiaddress with the given capacity.ChAdd a sub-provider which fetches both blocks and leaves.AcVID commitment typeDjCustom error with signature <code>AlreadyClaimed()</code> and selector \xe2\x80\xa600CjThe concrete type used as a buffer for arguments while \xe2\x80\xa6ChA channel generator for types that need asynchronous \xe2\x80\xa6AcVID Commitment typeBgDummy struct for AVID-M scheme over GF2BjPublic parameters for BLS signature schemeCiA background task which is cancelled on <code>Drop</code>BgStart the bootstrap process to kademliaBaA request for the blocks frontierBbA response for the blocks frontierCmBlocksSnapshot is a message that is sent in response to a \xe2\x80\xa6Cjconvenience alias for the type for bootstrap addresses \xe2\x80\xa6Da<code>BoxedTransport</code> is a type alias for a boxed tuple \xe2\x80\xa6CbWhen a message should be broadcast to the network.CbResponse Message to be put on the response channelDdCreates a new call builder for the [<code>CANCELLER_ROLE</code>] \xe2\x80\xa60DkContainer type for the return parameters of the <code>COSET_K1()</code> \xe2\x80\xa6000DkContainer type for the return parameters of the <code>COSET_K2()</code> \xe2\x80\xa6000DkContainer type for the return parameters of the <code>COSET_K3()</code> \xe2\x80\xa6000DkContainer type for the return parameters of the <code>COSET_K4()</code> \xe2\x80\xa6000AeCompletion task stateAmCertificate data is availableClType alias for a <code>DaCertificate2</code>, which is a \xe2\x80\xa6CmA DA proposal has been received from the network; handled \xe2\x80\xa6CmSend a DA proposal to the DA committee; emitted by the DA \xe2\x80\xa6CmA task that runs until it\xe2\x80\x99s dependency completes and it \xe2\x80\xa6CnCreates a new event filter for the <code>Deposit</code> event.Cbclient request to send a direct reply to a messageCmRecv-ed a direct response from a node (that hopefully was \xe2\x80\xa6AmWe received a Direct ResponseDeAn <code>EventHandlerState</code> that will send a vote for a bad \xe2\x80\xa6AnHolds Stake table and da stakeCjContainer for all the <code>EspToken</code> custom errors.0CcContainer for all the <code>EspToken</code> events.0CcWrapper struct representing a set of event filters.CeExplorerHeader is a trait that represents certain \xe2\x80\xa60CgA replica sent us an extended QuorumCertificate and \xe2\x80\xa6BkSend our extended QuorumCertificate and \xe2\x80\xa6ClFeeAttribution represents a specific attribution of fees \xe2\x80\xa60DdSNAFU context selector for the <code>Error::FetchLeaf</code> variantCeModule containing a contract\xe2\x80\x99s types and functions.C`Generated by the following Solidity interface\xe2\x80\xa61111111111111111CgA proof that a certain transaction exists in the block.0DjCustom error with signature <code>InvalidAddress()</code> and selector \xe2\x80\xa60000000000000000000AgThe request was invalidCkReport that kademlia has successfully bootstrapped into \xe2\x80\xa6ChOnly event tracked currently is when we successfully \xe2\x80\xa6ClMessage with most recent [quorum/DA] proposal the server \xe2\x80\xa6AcThe hash of a leaf.BjPre-epoch version of <code>LeafInfo</code>CkThis trait should be implemented by the MerkleTree that \xe2\x80\xa60ChA message type agnostic description of a message\xe2\x80\x99s \xe2\x80\xa6DiEvent with signature <code>MinDelayChange(uint256,uint256)</code> and \xe2\x80\xa6000CbGet a light client state that skipped a few blocksBaIndex for looking up a namespace.0ClNode signatures containing pre-signed address signatures \xe2\x80\xa6CkIndex range for a namespace payload inside a block payload.0DfA thin wrapper around <code>LockedConsensusState</code> that helps \xe2\x80\xa6CfByte length of a block payload, which includes all \xe2\x80\xa60C`A request for a payload with a given commitment.AdNode PeerConfig keysmideal networkBkReturn the Plonk Verifier related constantsAcPruning parameters.Baa network config stored in a fileCgA communication channel to the Push CDN, which is a \xe2\x80\xa60CfPublic parameters for generating the QC E.g: snark \xe2\x80\xa6CnQuorum proposal was received from the network or submitted \xe2\x80\xa60DgFor the <code>QuorumProposalValidated</code> event after validating \xe2\x80\xa611AkProposal to append a block.CmA quorum vote has been received from the network; handled \xe2\x80\xa6CgSend a quorum vote to the next leader; emitted by a \xe2\x80\xa6C`Request Message to be put on the request channelCnA request message, which includes the requester\xe2\x80\x99s public \xe2\x80\xa6DiEvent with signature <code>RewardsClaimed(address,uint256)</code> and \xe2\x80\xa600BaFailed to serialize NetworkConfigBeStake table info for a specific epochoStart bootstrapAiThe type of the signaturejSignaturesCgApplication-specific state delta implementation for \xe2\x80\xa6CbCheck ESP token allowance of stake table contract.BnByte range for a transaction\xe2\x80\x99s payload data.0CgEntries from a tx table in a namespace for use in a \xe2\x80\xa60AlAn upgrade proposal was sentCnCreates a new event filter for the <code>Upgrade</code> event.000000000000BbState to be validated by replicas.0oValidated StateBmAbstraction over the state that blocks modifyCjThe validated state type that this hotshot setup is using.21DdA <code>RecordStore</code> wrapper that validates records before \xe2\x80\xa6Clall the info we need to validate a proposal.  This makes \xe2\x80\xa6AgInitiate VID dispersal.CnReceive a VID request from the network; Received by a node \xe2\x80\xa6CkSend a VID request to the network; emitted to on of the \xe2\x80\xa6AfVote dependency types.CmVotersSnapshot is a message that is sent in response to a \xe2\x80\xa6DjCustom error with signature <code>ZeroDailyLimit()</code> and selector \xe2\x80\xa60CmCalled to notify the Membership when a new DRB result has \xe2\x80\xa6BfAdd the epoch result to the membershipCiAdds the epoch committee and block reward for a given \xe2\x80\xa6ChHandles notifications that a new epoch root has been \xe2\x80\xa6ChAccess the underlying index range for this namespace \xe2\x80\xa6DkContainer type for the return parameters of the <code>authRoot()</code> \xe2\x80\xa6000000Aefactor to back off byCcContainer type for the return parameters of the \xe2\x80\xa60BhAbstraction over the contents of a blockDdCreates a new call builder for the [<code>blocksPerEpoch</code>] \xe2\x80\xa600000Cka handy thin wrapper around wallet builder and provider \xe2\x80\xa6CmDeterministic, infallible, invertible iterator adaptor to \xe2\x80\xa6CkDetermines how many possible values can be made for the \xe2\x80\xa6Cigiven a message and a way to send the message, decide \xe2\x80\xa600DdCreates a new call builder for the [<code>claimedRewards</code>] \xe2\x80\xa60BbThe membership committee type used0AmTry to obtain a ledger signerC`return hashset of PIDs this node is connected to0CmCreate a family of related counters, partitioned by their \xe2\x80\xa6DgCreate a <code>Counter</code> with an optional <code>unit_label</code>.BhGet the stake table for the current viewCjGet all participants in the committee (including their \xe2\x80\xa60CaGet the total number of DA nodes in the committeeClReturns the number of total DA nodes in the committee in \xe2\x80\xa60Cnhow long to wait between external events before timing out \xe2\x80\xa6DkContainer type for the return parameters of the <code>decimals()</code> \xe2\x80\xa6000Bfthe default metadata for a stress testAaHow long to delay0Cgdelay duration before sending a message through the \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa60000DkCreates a <code>RawCallBuilder</code> for deploying this contract using \xe2\x80\xa6000000000000000000000000000000000000000000000000000000000000000000000000CjSend a direct message to a node with a particular key. \xe2\x80\xa6B`purpose: directly messaging peerBkWrapper around <code>RequestResponse</code>1CbSends a direct message to a specific node blockingDiMake a direct request to <code>peer_id</code> containing <code>msg</code>Bknumber of iterations in the DRB calculationClNumber of iterations for the DRB calculation, taken from \xe2\x80\xa6Bhnumber of iterations for DRB calculationCiwhether we should have seen an upgrade certificate or notBnByte length of a single namespace table entry.CcReturn whether epochs are enabled in the given viewDkContainer type for the return parameters of the <code>espToken()</code> \xe2\x80\xa60Abget event streamerClReturn all transactions in this namespace. The namespace \xe2\x80\xa6CmReturn all transactions in the namespace whose payload is \xe2\x80\xa6CkFetch the given list of accounts, retrying on transient \xe2\x80\xa6BnExecute the query and returns at most one row.0CnTrigger a request to the network for a proposal for a view \xe2\x80\xa6DaDeterministic, infallible inverse of <code>bytes_to_field</code>.DdCreates a new call builder for the [<code>finalizedState</code>] \xe2\x80\xa600000000DbFunction with signature <code>firstEpoch()</code> and selector \xe2\x80\xa600DbTries to turn a <code>Multihash</code> into a <code>PeerId</code>.DbFunction with signature <code>getVersion()</code> and selector \xe2\x80\xa600000000000000000000000000000000CkGets the validated block header and epoch number of the \xe2\x80\xa6BhWraps the same named Membership trait fnAlGet the whole validators mapAfGet all the validatorsClGet the stored VID common data for a given block, if one \xe2\x80\xa60CaHandles a (deserialized) message from the networkAkHandle a request sent to usBdHandle a <code>Timeout</code> event.BmThe number of past heartbeats to gossip about000CfThe number of past heartbeats to remember the full \xe2\x80\xa6000C`configuration used to generate each hotshot nodeBjAdd a Hotshot events streaming API module.AjMacros for use in testing.DhHelper macro for trivial implementation of the <code>HasEpoch</code> \xe2\x80\xa6AcIn progress queriesAkFunction with signature \xe2\x80\xa6000DiFunction with signature <code>initialize(address)</code> and selector \xe2\x80\xa61111111111111111011111111111CiReturn the inner share for a given namespace if there \xe2\x80\xa60BdReturns a copy of the instance stateAhImmutable instance stateAeInstance-level state.Ceinstance state to enforce <code>max_block_size</code>BlInstance state, used to construct new blocks333mInstanceState4444BlThe internal queue for messages to ourselves0Ckis_ascii_digit is a convenience function for converting \xe2\x80\xa6Blnumerator for probability of keeping packets0BdAll public keys known to be DA nodesCaThe known DA nodes\xe2\x80\x99 public key and stake valuesBfDelay when retrying failed L1 queries.0C`Separate provider to use for subscription feeds.0BcGet the map of our recent proposalsCmLast proposals we sent out, None if we haven\xe2\x80\x99t proposed \xe2\x80\xa6CfReturn the underlying undecide leaf commitment and \xe2\x80\xa6CjLibp2p based/production networking implementation This \xe2\x80\xa6C`Maximum size of batch of transactions to submit.B`Maximum size in bytes of a block000AiCurrent block size limitsAkIn memory network simulatorC`Minimum size of batch of transactions to submit.CgGet the size taken up by the given namespace in the \xe2\x80\xa60AoFetching hotshot network configAenetwork configuration0AfGet the network configAnThe new commission rate to setCbCreate a new <code>VersionedVoteData</code> structBeThe number of validators to register.jfor OptionDeShort hand for <code>pad_to_field</code> and <code>raw_encode</code>.CiHelper function for AvidM scheme to parse a namespace \xe2\x80\xa6AmCommitment to a block payload0Cnpost endpoint for whether or not all peers public keys are \xe2\x80\xa6CkWhether the network configuration has been updated with \xe2\x80\xa6ChUse an already-deployed PlonkVerifier.sol instead of \xe2\x80\xa6Bfpost endpoint for each node\xe2\x80\x99s configBdPost a signature to the relay server00CdProactively search for and retrieve missing objects.CkThe offset for how far in the future we will send out a \xe2\x80\xa6CoReturns &amp;str identifiers for the protocol names themselves.CbThe address to advertise as our public API\xe2\x80\x99s URLChThe URL we advertise to other nodes as being for our \xe2\x80\xa6AfPublish a given gossipAerandom builder config0Alrandom builder configurationChThe task responsible for receiving messages from the \xe2\x80\xa6BiThe recovered polynomial from VID shares.CjCleans up the <code>GlobalState</code> by removing all \xe2\x80\xa6C`Interval between retries if a state update fails0DhFunction with signature <code>revokeRole(bytes32,address)</code> and \xe2\x80\xa600000000Cireward_balance at the moment is only implemented as a \xe2\x80\xa6CiThe balance amount of the reward for constructing the \xe2\x80\xa60AgGet the saved DA certs.ClAll the DA certs we\xe2\x80\x99ve received for current and future \xe2\x80\xa6AgGet the saved payloads.oSaved payloads.BoNumber of blocks processed in the current scan.CcContainer type for the return parameters of the \xe2\x80\xa6000ClThe selector polynomial commitments. The commitments are \xe2\x80\xa600AfThe fee for sequencingBgThe shutdown signal for this event typeCmCreates and signs the payload, then will create a request \xe2\x80\xa6ClRegister validators, and delegate to themselves for demo \xe2\x80\xa6CgUse an already-deployed StakeTableV2.sol instead of \xe2\x80\xa6B`What to re-export, what to hide?CkThe list of <code>MemoryNetwork</code>s aggregated by topic0Anadd a delay to async functionsDjReturn array containing underlying bytes of inner <code>Address</code> \xe2\x80\xa600DkConverts a <code>Leaf2</code> to a <code>Leaf</code>. This operation is \xe2\x80\xa60;;;;Bamap view number to transmit tasksCjFetch the leaf at the given height without retrying on \xe2\x80\xa6BlTry to convert a byte vector to a record keyEhDeserialize <code>bytes</code> in little-endian form into a <code>$T</code>, padding \xe2\x80\xa6DhFunction with signature <code>undelegate(address,uint256)</code> and \xe2\x80\xa60000CnUpdate the validated state map with a new view_number/view \xe2\x80\xa6BfUpdate the current high QC in storage.BhUpdate the high QC if given a newer one.CmHolds the upgrade configuration specification for HotShot \xe2\x80\xa6EdSerialize <code>n</code> into <code>BYTE_LEN</code> bytes in little-endian form, \xe2\x80\xa6CnValidates whether the epoch is consistent with the version \xe2\x80\xa60AmValidate a stake table event.DdCreates a new call builder for the [<code>validatorExits</code>] \xe2\x80\xa60DiFunction with signature <code>validators(address)</code> and selector \xe2\x80\xa60000CmUtility program to verify properties of headers sequenced \xe2\x80\xa6CmCompute the VID payload commitment. TODO(Gus) delete this \xe2\x80\xa6Ahview generator for testsCaNumber added to the original vote\xe2\x80\x99s view numberAmHow far back to look for a QCBltask for checking if view sync got activatedCkWait until the highest L1 block number reaches at least \xe2\x80\xa6BgReturns only when the network is ready.C`Wait for the client to initialize the connectionCdBlocks until the network is successfully initializedBiAdd a list of tasks to the given context.CnIf true, each randomly generated transaction will have the \xe2\x80\xa6BmInfo needed to create a vote accumulator taskCoCreates a new event filter for the <code>Approval</code> event.0DkContainer type for the return parameters of the <code>BETA_H_X0()</code>\xe2\x80\xa6000DkContainer type for the return parameters of the <code>BETA_H_X1()</code>\xe2\x80\xa6000DkContainer type for the return parameters of the <code>BETA_H_Y0()</code>\xe2\x80\xa6000DkContainer type for the return parameters of the <code>BETA_H_Y1()</code>\xe2\x80\xa6000ClBlockIdentifier is an enum that represents multiple ways \xe2\x80\xa60ClAdjustable limits for block size ceiled by maximum block \xe2\x80\xa60BkA <code>VecDeque</code> with a maximum sizeAjBuilder Provided ResponsesCoCreates a new event filter for the <code>CallSalt</code> event.0AdCDN-specific metrics0CcA pair of QCs (or a single QC) attesting to a leaf.Dk<code>ClaimBlockError</code> is an error enum that represents the class \xe2\x80\xa6BgClaim withdrawal after an undelegation.AlData availability task stateAoTrait for creating task states.DkCustom error with signature <code>DepositTooLarge()</code> and selector \xe2\x80\xa60DkCustom error with signature <code>DepositTooSmall()</code> and selector \xe2\x80\xa60DaAn <code>EventHandlerState</code> that modifies justify_qc on \xe2\x80\xa6DkAn <code>EventHandlerState</code> that modifies view number on the vote \xe2\x80\xa6CnEnum to represent the first field of different versions of \xe2\x80\xa6BiType to describe DA and Stake memberships0CnWrapper around a membership that guarantees that the epoch \xe2\x80\xa6BcA replica receives an epoch root QCBcA replica sends us an epoch root QCCmContainer for all the <code>EspTokenV2</code> function calls.0ClA dependency that listens on a channel for an event that \xe2\x80\xa6CjAn interface for querying Data and Statistics from the \xe2\x80\xa6CnExplorerSummary is a struct that represents an at-a-glance \xe2\x80\xa60CnAn external message that can be sent to or received from a \xe2\x80\xa6DkCustom error with signature <code>FailedInnerCall()</code> and selector \xe2\x80\xa600000000000000000000000000000000000000CgA proof of the balance of an account in the fee ledger.0DeSNAFU context selector for the <code>Error::FetchBlock</code> variantCkGas price too high: current {0} gwei, max allowed: {1} gweiAfGenerate Client WalletClGenesisOverview provides a summary overview of the block \xe2\x80\xa60CbPrint the routing  table to stderr, debugging onlyCiDefines a type that can handle the result of a dependencyBoTrait for types which will handle a vote event.AiA HistogramFamily metric.CnA family of related histograms, partitioned by their label \xe2\x80\xa6CiDoes this object use the large object limit for range \xe2\x80\xa6AhShare index out of boundDkCustom error with signature <code>InvalidAuthRoot()</code> and selector \xe2\x80\xa600AfMethods for use w/ Vec0BnConfiguration of Keccak256 based AVID-M schemeCiKeccak256 hasher that matches our Solidity implementationAoConfiguration for an L1 client.0CnThe late node context dictates how we\xe2\x80\x99re building a node \xe2\x80\xa6CjLatestValidator is a message that is meant to show the \xe2\x80\xa6CePre-epoch version of the <code>EventType</code> enum.BkPre-epoch version of <code>LeafChain</code>C`Generated by the following Solidity interface\xe2\x80\xa60B`What to re-export, what to hide?CmLocationDetails represents the details of the location of \xe2\x80\xa6CdMock for system parameter of <code>MockLedger</code>00CmA dynamic type alias for a function that takes the result \xe2\x80\xa6CoCreates a new event filter for the <code>NewEpoch</code> event.00000CoCreates a new event filter for the <code>NewState</code> event.00000000BeA node is not in the epoch transitionDkCustom error with signature <code>NotInitializing()</code> and selector \xe2\x80\xa60000000000000000000000000000000000AiNamespaced parameter typeChNamespaced share for each storage node, contains one \xe2\x80\xa6CmThe part of a tx table that declares the number of txs in \xe2\x80\xa60DkCustom error with signature <code>OnlyRewardClaim()</code> and selector \xe2\x80\xa60BbAn api exposed by the orchestratorCgAn outgoing request. This is what we use to track a \xe2\x80\xa6DcFunction with signature <code>PAUSER_ROLE()</code> and selector \xe2\x80\xa60000BlA summary of a payload without all the data.0DkA <code>RecordStore</code> wrapper that occasionally saves the DHT to a \xe2\x80\xa6C`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?10BhOptions for Postgres-backed persistence.BhLoad from prepared node signature sourceDhSNAFU context selector for the <code>MetricsError::Prometheus</code> \xe2\x80\xa6AoMessage with a quorum proposal.CnWrapper type for the event to notify tasks that a proposal \xe2\x80\xa6AkProposal to append a block.BaAlias for Quorum vote accumulatorCfAmount of time to try for a request before timing out.DeSNAFU context selector for the <code>Error::RangeLimit</code> variantDiA trait that allows the [<code>RequestResponseProtocol</code>] to get \xe2\x80\xa6CnA protocol that allows for request-response communication. \xe2\x80\xa6CgA channel for sending a response to an inbound request.CbResponse Message to be put on the response channelDiA response for a request.  <code>SequencingMessage</code> is the same \xe2\x80\xa6CnA response message, which includes the hash of the request \xe2\x80\xa6DjThe task state for the <code>Rewind</code> task is used to capture all \xe2\x80\xa6CeThe state of the current provider being used by a \xe2\x80\xa6CmContainer for all the <code>StakeTable</code> function calls.0CjThe type of the entry that contain both public key and \xe2\x80\xa60AaStake table entryBcConcrete type for stake table stateAdThe private key typeDiA <code>BlockHeader</code> that commits to <code>TestBlockPayload</code>.BbBuilder for <code>TestData</code>.Ajmetadata describing a testCcThe transaction in a <code>TestBlockPayload</code>.ChA timeout vote received from the network; handled by \xe2\x80\xa6ClSend a timeout vote to the network; emitted by consensus \xe2\x80\xa6Bhtrait make a string lower and snake caseCkTrait for marker types indicating what type of access a \xe2\x80\xa60B`Send transactions to the networkCoCreates a new event filter for the <code>Transfer</code> event.0CoCreates a new event filter for the <code>Unpaused</code> event.0ClThis trait defines methods for updating the storage with \xe2\x80\xa60CeUpgrade proposal was received from the network or \xe2\x80\xa60BaMessage with an upgrade proposal.B`Message with an upgrade proposal22BaA proposal to upgrade the networkBoUpgrade vote has been received from the networkBiUpgrade vote has been sent to the networkCoCreates a new event filter for the <code>Upgraded</code> event.000000000000000AgCustom validation error00000Clconfig for validator, including public key, private key, \xe2\x80\xa6B`What to re-export, what to hide?ClHeaders with versions greater than 0.1 are serialized as \xe2\x80\xa6AgInitiate VID dispersal.CkSend VID shares to VID storage nodes; emitted by the DA \xe2\x80\xa6ClReceive a VID response from the network; received by the \xe2\x80\xa6CnSend a VID response to the network; emitted to the sending \xe2\x80\xa6ClTimeout for the view sync protocol; emitted by a replica \xe2\x80\xa6CkTrigger the start of the view sync protocol; emitted by \xe2\x80\xa6CjAccumulates votes until a certificate is formed.  This \xe2\x80\xa6DkCustom error with signature <code>ZeroTotalSupply()</code> and selector \xe2\x80\xa60AkFunction with signature \xe2\x80\xa60000ClTake one vote and accumulate it. Returns either the cert \xe2\x80\xa6CgAccumulate a vote and return the certificates if formedDcFunction with signature <code>activeStake()</code> and selector \xe2\x80\xa600Chinitialize the DHT with known peers add the peers to \xe2\x80\xa6BeTell libp2p about known network nodesCcContainer type for the return parameters of the \xe2\x80\xa6000BcAdd a proposal we sent to the store1111CaNotify the network to begin the bootstrap processBaRoot of the block commitment tree0Clthis is really cheating to enable local tests hashset of \xe2\x80\xa6CdThe bootstrap nodes to connect to (multiaddress, \xe2\x80\xa6AfState of bootstrappingBmHelper function to send events and log errorsAnTo get the builder\xe2\x80\x99s addressBeReturns the public key of the builder0CgOptional address to run builder on. Address must be \xe2\x80\xa6AgBuilder 0.1 API clientsCiThe maximum amount of time a leader can wait to get a \xe2\x80\xa6AaThe state\xe2\x80\x99s api111111AcJoins all subtasks.0CjExponential backoff for fetching missing state from peers.BhClean up after a failed catchup attempt.DeCreates a new call builder for the [<code>claimWithdrawal</code>] \xe2\x80\xa60CjGarbage collects based on state change right now, this \xe2\x80\xa6Bjtask that decides when things are completeClComputes the reward in a block for the validator and its \xe2\x80\xa6mConstructor`.00000000000000000000BaCurrent version of the sequencer.0BdGets the Data commitment of the voteCaGet the vote commitment which the votes commit toodecide receiverDiFunction with signature <code>delegations(address,address)</code> and \xe2\x80\xa60000B`Task which can uses dependenciesCoReply with <code>msg</code> to a request over <code>chan</code>DeCreates a new call builder for the [<code>epochStartBlock</code>] \xe2\x80\xa600000Bareturn true if epoch is activated0CiUse an already-deployed EspToken.sol proxy instead of \xe2\x80\xa6CbA map that is from view number to vector of eventsChevents streamer to stream hotshot events to external \xe2\x80\xa6ClThe expected events we get from the test.  Maps an event \xe2\x80\xa6CmValidate that a leaf has the right upgrade certificate to \xe2\x80\xa600CmFake the thing a genesis block points to. Needed to avoid \xe2\x80\xa6BfFrontier of <code>FeeMerkleTree</code>0AhFinalized bytes per viewClCreate VID dispersal from a specified membership for the \xe2\x80\xa60EdConstructs <code>ValidatorArgs</code> from <code>MultiValidatorArgs</code> and a \xe2\x80\xa6BoBuilds a <code>PeerId</code> from a public key.C`Create a new commitment from a raw Sha256 digestBgConvert from the underlying value type.00000000000000000000000000000000000000000000DbExtract payload byte length from a <code>ADVZCommon</code> and \xe2\x80\xa6CmThe function data of the function selector for the target \xe2\x80\xa6BiGarbage collects internal data structuresCkReturn the light client state and proof of consensus on \xe2\x80\xa600CeThis executable generates the solidity files with \xe2\x80\xa6DcFunction with signature <code>getMinDelay()</code> and selector \xe2\x80\xa6000BeGet the stake table for a given epoch0CcContainer type for the return parameters of the \xe2\x80\xa600000000Dk<code>handle_da_event</code> is a utility function that will attempt to \xe2\x80\xa6Amhandle a direct message eventAlHandle a response sent to usCkReturns if the stake table is available for the given epochBhByte length of a namespace table header.BoTesting infrastructure for <code>HotShot</code>ChModule for publicly usable implementations of the traitsBgInner <code>LockedConsensusState</code>AlReturn the underlying value.00000000000000000000000000000000000000000000DiFunction with signature <code>isEpochRoot(uint64)</code> and selector \xe2\x80\xa60000000000000DjFunction with signature <code>isOperation(bytes32)</code> and selector \xe2\x80\xa6000DeCreates a new call builder for the [<code>isOperationDone</code>] \xe2\x80\xa60Cdwhether or not we\xe2\x80\x99ve bootstrapped into the DHT yetCjIs primary network down? Makes sense only for combined \xe2\x80\xa6Amget the keypair for a node idBkThe block numberto use for the stake table.BnUrl we will use for RPC communication with L1.00BaThe number of the last voted viewBlreturn the underlying leaf hash if it existsDcFunction with signature <code>lightClient()</code> and selector \xe2\x80\xa6000000AaLightClientV2.solB`What to re-export, what to hide?AaLightClientV3.sol1C`Whether or not to use the local discovery clientChreturn the Hotshot event for the completion of this CERTClSet the maximum number of connections to maintain at any \xe2\x80\xa6ClMaximum number of concurrent HTTP connections the server \xe2\x80\xa6CmThe maximum number of database connections to maintain at \xe2\x80\xa6B`Api for querying merklized stateEcMigrate leaves from <code>Leaf</code> to <code>Leaf2</code>, and proposals from \xe2\x80\xa6ClSet the minimum number of connections to maintain at any \xe2\x80\xa6CmThe minimum number of database connections to maintain at \xe2\x80\xa6CjGenerate a proof of inclusion for a namespace payload. \xe2\x80\xa6CfGenerate a proof of inclusion for a namespace payload.BbThe DRB result for the next epoch.0CgHelper function to get the proposal\xe2\x80\x99s next_drb_result111BgSkip verifying L1 finalized references.ChPath to file or \xe2\x80\x9c-\xe2\x80\x9d for stdin (format auto-detected)ChThe total nodes that have posted they are ready to startBeGet the <code>nth</code> transaction.0ClOpen an existing FileSystemDataSource using a persistent \xe2\x80\xa60CiOpen an existing FileSystemStorage using a persistent \xe2\x80\xa6BhWhether it\xe2\x80\x99s partial collected resultsCnWhether the results are partially collected \xe2\x80\x9cOne\xe2\x80\x9d when \xe2\x80\xa6CiPrefund an account with a given amount. Only for demo \xe2\x80\xa6BlTask for handling logic for quorum proposalsChReceive a message. Returning an error here means the \xe2\x80\xa6CfThe below functions just pass through to the inner \xe2\x80\xa6ChGet a partial snapshot of the given fee state, which \xe2\x80\xa60DcFunction with signature <code>rewardClaim()</code> and selector \xe2\x80\xa60BbRun light client state prover once00CkProposals we have sent out to provide to others for catchupDjFunction with signature <code>schnorrKeys(bytes32)</code> and selector \xe2\x80\xa600BjThe sequencing fee for submitting bundles.DjFunction with signature <code>setAuthRoot(uint256)</code> and selector \xe2\x80\xa600DeCreates a new call builder for the [<code>setStateHistory</code>] \xe2\x80\xa600ClCalled to notify the Membership that Epochs are enabled. \xe2\x80\xa6BaAdd a kill switch to the receiverAcSet the view number0CjShut down background tasks associated with this L1 client.Bdsign information about offered blockCkSpawn a task to listen for requests on the returned channelAgThe peer\xe2\x80\x99s public key00AjNumber of staking DA nodesEg\xe2\x80\x9cStarts\xe2\x80\x9d consensus by sending a <code>Qc2Formed</code>, <code>ViewChange</code> \xe2\x80\xa6BaStart participating in consensus.ClThe proportion of nodes required before the orchestrator \xe2\x80\xa60mThe thresholdClReturn the underlying validated state and state delta if \xe2\x80\xa6CkGets the validated state and state delta with the given \xe2\x80\xa6BfCommitment for state verification keys00CnUtilities for generating and storing the most recent light \xe2\x80\xa6DfConvert a <code>Statement&lt;&#39;_, VidSchemeType&gt;</code> to a \xe2\x80\xa6oStorage metricsBjReturns a reference to the storage metrics11111CnThe target contract of the timelock operation The timelock \xe2\x80\xa6EdCreate <code>VidDisperse</code> out of an iterator to <code>VidDisperseShare</code>sDcFunction with signature <code>totalSupply()</code> and selector \xe2\x80\xa6000BmThe total number of views during benchmarking0nPrivate helperktxns timingAeNot yet decided stateDjFunction with signature <code>updateDelay(uint256)</code> and selector \xe2\x80\xa6000BfUpdate the current high QC in storage.BjInterval between light client state updateCeThe frequency of updating the light client state, \xe2\x80\xa6ChAcquires upgradable read lock on inner consensus and \xe2\x80\xa6AcCheck the signatureD`Validate that proposal height is <code>parent_height + 1</code>.Civalidated state that is required for a proposal to be \xe2\x80\xa6AjThe time this view started0BaGeneric task for collecting votesCaA map of <code>QuorumVote</code> collector tasks.BmA map of <code>DaVote</code> collector tasks.CaA map of <code>UpgradeVote</code> collector tasksCkcommitment of all the votes this cert should be signed over00000000000000CiWait until at least <code>num_peers</code> have connectedBoSet the maximum number of simultaneous fetches.DjCustom error with signature <code>AddressEmptyCode(address)</code> and \xe2\x80\xa60000000000000000000000000000000000CnDescribes the functions a vote must implement for it to be \xe2\x80\xa6DhType alias for type-erased <code>TestTaskState</code> to be used for \xe2\x80\xa6BkThe result of applying a stake table event:DcCustom error with signature <code>BN254G1AddFailed()</code> and \xe2\x80\xa600000Ansignature type for the builderCkThe type of the signature builder would use to sign its \xe2\x80\xa6D`Creates a new event filter for the <code>Cancelled</code> event.0AmFailed to send over a channel00CnA communication channel with 2 networks, where we can fall \xe2\x80\xa60Clrepresents a networking implmentration exposes low level \xe2\x80\xa6AhBootstrap task\xe2\x80\x99s stateCgArbitrary number of times the hash function will be \xe2\x80\xa6D`Creates a new event filter for the <code>Delegated</code> event.0BjFailed to deserialize loaded NetworkConfigDdA no-op <code>PersistentStorage</code> that does not persist the DHTBaA <code>EspToken</code> instance.0ClContainer for all the <code>EspTokenV2</code> custom errors.0CeContainer for all the <code>EspTokenV2</code> events.0CmExplorerAPIError is a trait that represents an error that \xe2\x80\xa6CnContainer for all the <code>FeeContract</code> function calls.0DfSNAFU context selector for the <code>Error::FetchHeader</code> variantB`Generate some random point in G2CiGenerate reward claim test fixtures with configurable \xe2\x80\xa6CkURL segment used to indicate that we want to fetch this \xe2\x80\xa6CmA type alias for the list of tasks that are responding to \xe2\x80\xa6DcCustom error with signature <code>InvalidPlonkArgs()</code> and \xe2\x80\xa600000DcCustom error with signature <code>InvalidSchnorrVK()</code> and \xe2\x80\xa60000CkLatestStakeTable is a message that is meant to show the \xe2\x80\xa6CnContainer for all the <code>LightClient</code> function calls.0BdConcrete type for light client stateBiAn error occurred while sending a message00CmByte lengths for the different items that could appear in \xe2\x80\xa60000DcCustom error with signature <code>NoChangeRequired()</code> and \xe2\x80\xa6000000000000000000000DcCustom error with signature <code>NoFunctionCalled()</code> and \xe2\x80\xa60AfA node is disconnectedCkA sanitized map from views to leaves for a single node, \xe2\x80\xa6AjNamespaced commitment typeCgVID Common data that needs to be broadcasted to all \xe2\x80\xa6BkDummy struct for namespaced AvidmGf2 schemeCnBuild an individual namespace payload one transaction at a \xe2\x80\xa60BcByte length of a namespace payload.0AiDisable catchup entirely.CnContainer for all the <code>OpsTimelock</code> function calls.0BlGet jf_plonk::Verifier::compute_challenges()CmProcessLeafError represents the error that can occur when \xe2\x80\xa6BnA replica has responded with a valid proposal.CjPublic parameters for validating the QC E.g: verifying \xe2\x80\xa6DfSNAFU context selector for the <code>Error::QueryWindow</code> variantCcA block payload whose contents (e.g. individual \xe2\x80\xa60CiError when communicating with the state relay server: {0}CmThe network request had been cancelled before it could be \xe2\x80\xa600CnA request for the v1 reward accounts at a given height and \xe2\x80\xa6CkA response for the v1 reward accounts at a given height \xe2\x80\xa6CkA request for the reward accounts at a given height and \xe2\x80\xa6ClA response for the reward accounts at a given height and \xe2\x80\xa6CnContainer for all the <code>RewardClaim</code> function calls.0AhEvent with signature \xe2\x80\xa600000000C`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?CiThe sequencer context contains a consensus handle and \xe2\x80\xa6CaInitial configuration of an Espresso stake table.ClContainer for all the <code>StakeTable</code> custom errors.0CeContainer for all the <code>StakeTable</code> events.0CiStatic stake table that doesn\xe2\x80\x99t use DRB results for \xe2\x80\xa6CjDefines a threshold which is 2f + 1 (Amount needed for \xe2\x80\xa6EaA <code>BlockPayload</code> that contains a list of <code>TestTransaction</code>.CmThe state for the test harness task. Keeps track of which \xe2\x80\xa6CeRepresents an upgrade based on time (unix timestamp).0CgEnum representing different types of timelock contractsBbAlias for Timeout vote accumulatorCnTransactionRange is a struct that represents a range for a \xe2\x80\xa60BeReceive transactions from the networkBaUpdate validator commission rate.CkAn extension trait for types which implement the update \xe2\x80\xa60BnConstants associated with the upgrade process.AoTracks state of an upgrade taskCkDefines a threshold which is 0.9n + 1 (i.e. over 90% of \xe2\x80\xa6BbAlias for upgrade vote accumulatorAnA request for VID common data.CcVID share and associated metadata for a single nodeBdRepresents an upgrade based on view.0ChA view map, sanitized to have exactly one leaf per view.BeFailed to write NetworkConfig to fileDkSNAFU context selector for the <code>ParseSeedError::WrongLength</code> \xe2\x80\xa6DcCustom error with signature <code>ZeroTokenAddress()</code> and \xe2\x80\xa60ClAdd a chain config preimage which can be fetched by hash \xe2\x80\xa6BcAdd a proposal we sent to the storeBcTo get the list of available blocksBbQuery builder for available blocksClGet a mutable reference to the block header contained in \xe2\x80\xa600AdThe blocks per epochBiEpoch length in number of Hotshot blocks.CjBlocks per epoch, should be initialized from the sequencerEoImpl <code>serde</code> for type <code>$T</code> with methods named <code>$to_bytes</code>, \xe2\x80\xa6DhFunction with signature <code>claimRewards(uint256,bytes)</code> and \xe2\x80\xa600CfNetworking Implementation that has a primary and a \xe2\x80\xa6BlMap of commit vote accumulates for the relayCdA map from node ids to (leaves keyed on view number)Cjtask that checks leaves received across all nodes from \xe2\x80\xa6CcThe address of the Espresso fee contract on the L1.DiConvert a <code>Proposal</code> by converting the underlying proposal \xe2\x80\xa6DiCreate a <code>Histogram</code> with an optional <code>unit_label</code>.DdFunction with signature <code>currentEpoch()</code> and selector \xe2\x80\xa60000000000000CmWhether the currently running scan is a major scan (1) or \xe2\x80\xa6CdThe offset for how far in the future the upgrade \xe2\x80\xa6AjOption to deploy esp tokenAbhandle a DHT eventBhDifficulty level of the DRB calculation.Bhdifficulty value for the DRB calculationCnThe nodes eligible for leadership. NOTE: This is currently \xe2\x80\xa60AiEpoch Membership wrappersAhindicate the first epoch0AkFunction with signature \xe2\x80\xa6000DfCreates a new call builder for the [<code>exitEscrowPeriod</code>] \xe2\x80\xa60BnThe number of failed views during benchmarking0Bfdescription of fallback builder to runChThe wallet address of the fee info account contained \xe2\x80\xa60CkThe balance amount of the fee info contained within the \xe2\x80\xa60CmSpecifies the maximum number of concurrent fetch requests \xe2\x80\xa6CnFetch the state certificate for a given epoch, retrying on \xe2\x80\xa6BaSend that the bootstrap succeededCcContainer type for the return parameters of the \xe2\x80\xa600DbCreate a new <code>UpgradeLock</code> from an optional upgrade \xe2\x80\xa6DdFunction with signature <code>genesisState()</code> and selector \xe2\x80\xa60000000000000000000DkFunction with signature <code>getRoleAdmin(bytes32)</code> and selector \xe2\x80\xa600000000DkFunction with signature <code>getTimestamp(bytes32)</code> and selector \xe2\x80\xa6000444444444444444444444444444444444Dk<code>get_block_detail</code> is a method that retrieves the details of \xe2\x80\xa600BgRetrieves the <code>ChainConfig</code>.BlRetrieve and verify <code>ChainConfig</code>CiSign the light client state at given height and store it.Bgupdate state based on recv-ed get queryAoUpdate state based on put queryBmWhether these options will run the query API.CiCreate a family of related histograms, partitioned by \xe2\x80\xa6GmImplements <code>ConsensusTime</code>, <code>Display</code>, <code>Add</code>, <code>AddAssign</code>, <code>Deref</code> \xe2\x80\xa6CfPeriod between optimistic increments of the block size>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>DkFunction with signature <code>initializeV2(address)</code> and selector \xe2\x80\xa6DhFunction with signature <code>initializeV2(uint64,uint64)</code> and \xe2\x80\xa6000AkFunction with signature \xe2\x80\xa61111011201111DdFunction with signature <code>initializeV3()</code> and selector \xe2\x80\xa6000000CnUpdates <code>Self.stake_table</code> with stake_table for \xe2\x80\xa6BcA reference to the internal metricsDfCreates a new call builder for the [<code>isOperationReady</code>] \xe2\x80\xa60Cnreturn true of the current state is between epoch root and \xe2\x80\xa60CnReturns true if the given block number is equal or greater \xe2\x80\xa6CnReturns true if the given block number is strictly greater \xe2\x80\xa6Bndenominator for probability of keeping packets0Ckthe latest view number (for node lookup purposes) NOTE: \xe2\x80\xa6DfCreates a new call builder for the [<code>maxDepositAmount</code>] \xe2\x80\xa6CbThe maximum number of messages in an IHAVE message000CnThe maximum number of open WebSockets connections for each \xe2\x80\xa6CjThe maximum number of records that can be added to the \xe2\x80\xa6DfCreates a new call builder for the [<code>minDepositAmount</code>] \xe2\x80\xa6CfAddress for the multisig wallet that will be the adminBfregistry for controlling network tasks0CmA unique identifier for the specific protocol being voted \xe2\x80\xa6CjHow many times messages were sent on secondary without \xe2\x80\xa60CnSender for node lookup (relevant view number, key of node) \xe2\x80\xa6CiCreate a certificate for a non-epoch-transitioning block.DkCrazy boilerplate code to make it so that [<code>NsPayloadOwned</code>] \xe2\x80\xa6BaRange relative to this ns payloadBdNumber of transactions in the block.0DfCreates a new call builder for the [<code>onERC721Received</code>] \xe2\x80\xa60fOptionCjThe URL the orchestrator is running on. This should be \xe2\x80\xa6B`URL of the HotShot orchestrator.0CmGet the parent Leaf Info from a given leaf and our public \xe2\x80\xa6CnParse a percentage string into a <code>Percentage</code> type.BcReturn the payload length in bytes.BdReturns the payload length in bytes.000AjLength of payload in bytesAoThe length of payload in bytes.C`Return the length of underlying payload in bytesBhpost endpoint for the results of the runCmThe encoded (stake table) public key of the sender. This, \xe2\x80\xa6Chget the public parameter for the assembled signature \xe2\x80\xa60DfPublishes a proposal given the <code>CommitmentAndMetadata</code>, \xe2\x80\xa6AdThe Push CDN networkCkBreak a range into fixed-size chunks, starting from the \xe2\x80\xa6CjDigest the raw shares into the element type for Merkle \xe2\x80\xa6CiThe recipient source trait. Is what we use to get the \xe2\x80\xa6BlThe recipient source to use for the protocolCkregister a node with an unknown public key. this method \xe2\x80\xa6DjFunction with signature <code>renounceRole(bytes32,address)</code> and \xe2\x80\xa600000000AlMap of running replica tasksClRequest a proposal from the all other nodes.  Will block \xe2\x80\xa6ChTypes for the request/response implementations. This \xe2\x80\xa6ClThis crate contains a general request-response protocol. \xe2\x80\xa6BmContext stored for nodes to be restarted withCcContainer type for the return parameters of the \xe2\x80\xa600000000AeRuns the orchestratorA`Saved VID sharesCgCommitments to the table column for Schnorr public keys0ClSend the event to the event stream that we are proposing \xe2\x80\xa6DdFunction with signature <code>setHotShotUp()</code> and selector \xe2\x80\xa600000000CeUpdate a hotshot config to have a view-based upgrade.ChDetermines whether the given hotshot event should be \xe2\x80\xa6CkReturns the commitment of the stake table for the given \xe2\x80\xa6AgHash of the stake tableCmSaved epoch information. This must be sorted ascending by \xe2\x80\xa60CiSpawns an event loop handling HotShot events from the \xe2\x80\xa6Cbthe validator\xe2\x80\x99s key pairs for state verificationBgstatic (round robin) committee electionCjThe timestamp at which voting for the upgrade proposal \xe2\x80\xa60CjUnix time in seconds at which we stop voting on an upgradeCfUnix time in seconds at which we stop voting on an \xe2\x80\xa60CgThe view at which voting for the upgrade proposal stops0BaView to stop voting on an upgradeCnView to stop voting on an upgrade. To prevent voting on an \xe2\x80\xa60ClStore an object and notify anyone waiting on this object \xe2\x80\xa6CmStore the DRB result for the next epoch if we received it \xe2\x80\xa6A`Add a drb resultAiAdd an epoch block headerBfSubscribe to a stream of Block HeadersAjSubscribe to a given topicDjUpdate the pending stake table with <code>num_reg</code> number of new \xe2\x80\xa60CgTake the kill switch to allow killing the receiver taskAlTarget data retention periodCnTarget retention period. Data older than this is pruned to \xe2\x80\xa6CiNumber of views to try to retain in consensus storage \xe2\x80\xa6BfThe address of the timelock controllerBgTimestamp when this header was created.BbGet the timestamp in milliseconds.CkTracks the latest temporary index we have generated for \xe2\x80\xa6EdCreate <code>VidDisperse</code> out of an iterator to <code>VidDisperseShare</code>sCalist of addresses to connect to at initialization00000E`Tries to convert <code>self</code> into <code>NonEmptyIterator</code>. Calls \xe2\x80\xa6CaSerialize the private key into TaggedBase64 blob.Adsize of transactionsBeThe size of each transaction in bytes11AkFunction with signature \xe2\x80\xa6000Cg[Non-blocking] instantly returns a copy of the last \xe2\x80\xa6ChTries to get the most recent decided leaf, returning \xe2\x80\xa6CmUndecided leaves that were seen, but not yet decided on.  \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa60000DfCreates a new call builder for the [<code>updateCommission</code>] \xe2\x80\xa6ChUse saved proposals to update undecided leaves and stateDfCreates a new call builder for the [<code>upgradeToAndCall</code>] \xe2\x80\xa600000000000000ChThe information about which version we are upgrading to.EhDeserialize <code>bytes</code> in little-endian form into a <code>$T</code>, padding \xe2\x80\xa6CdThe L1 head block number in the proposal must be \xe2\x80\xa6CbEnsure that L1 Head on proposal is not decreasing.Bgconfig that contains the signature keys88888CbVerify the state signature for legacy light clientBgVerify the light client state signatureDfVerify the light client state signature The input <code>msg</code> \xe2\x80\xa60CnCall this method if you think catchup is in progress for a \xe2\x80\xa6ClWait for our view of the latest L1 block number to catch \xe2\x80\xa6BeWire witness polynomials commitments.00CdADVZ share and associated metadata for a single nodeDgSNAFU context selector for the <code>Error::Availability</code> variantDdCustom error with signature <code>BlsKeyAlreadyUsed()</code> and \xe2\x80\xa60000AfBootstrap has finishedCnCommitment that builders use to sign block options. A thin \xe2\x80\xa6CkThe type of the keys builder would use to sign its messagesChClientThreadState represents the state of all of the \xe2\x80\xa6AhEvent with signature \xe2\x80\xa600AoDefault log level for the crateClThe runtime bytecode of the contract, as deployed on the \xe2\x80\xa6000000000000000000000000000000000000000000000000CnA Data Availability Certificate (DAC) has been received by \xe2\x80\xa6ChDA Proposal Message to be put on the da proposal channelDdCustom error with signature <code>DailyLimitTooHigh()</code> and \xe2\x80\xa60DhEvent with signature <code>DailyLimitUpdated(uint256,uint256)</code> \xe2\x80\xa60AmSet of predeployed contracts.dTODOEfAn <code>EventHandlerState</code> that doubles the <code>QuorumVoteSend</code> and \xe2\x80\xa6DdCustom error with signature <code>ERC1967NonPayable()</code> and \xe2\x80\xa60000000000000000000000000000000000AjWrapped num of connectionsDeFunction with signature <code>EXECUTOR_ROLE()</code> and selector \xe2\x80\xa6000BbA <code>EdOnBN254</code> instance.00B`What to re-export, what to hide?CiThe next leader has collected enough votes to form an \xe2\x80\xa6CeEvolve reward merkle tree state for invariant testingCjA validator formed both a current epoch eQC and a next \xe2\x80\xa6AmThe block header apply failedAhFailed to serialize dataAcFailed to serialize010CmContainer for all the <code>FeeContract</code> custom errors.0CfContainer for all the <code>FeeContract</code> events.0ClStorage for the APIs provided in this crate, backed by a \xe2\x80\xa6CjA collection of parameters with a statically known length.0BbRequest the set of connected peersCnHistogramSnapshot is a message that is sent in response to \xe2\x80\xa6BnHolds configuration for a <code>HotShot</code>CoContainer for all the <code>IRewardClaim</code> function calls.DeA filler that sets the <code>from</code> field on transactions to \xe2\x80\xa6CjA type alias for the list of tasks that are validating \xe2\x80\xa6DdCustom error with signature <code>InvalidCommission()</code> and \xe2\x80\xa60000DdCustom error with signature <code>InvalidSchnorrSig()</code> and \xe2\x80\xa600CmContainer for all the <code>LightClient</code> custom errors.0B`What to re-export, what to hide?CfContainer for all the <code>LightClient</code> events.0C`Generated by the following Solidity interface\xe2\x80\xa602002CmA minimal data source for the status API provided in this \xe2\x80\xa60Baa network config stored in a fileBidescribe the configuration of the network0AdA handle containing:0BkGet ark_poly::Radix2EvaluationDomain::new()DjSNAFU context selector for the <code>MetricsError::NoSuchMetric</code> \xe2\x80\xa6BlClap arguments for node signature operationsBhOnly used for serialization to Solidity.AnHolds Stake table and da stakeDdCustom error with signature <code>NothingToWithdraw()</code> and \xe2\x80\xa60000CmContainer for all the <code>OpsTimelock</code> custom errors.0CfContainer for all the <code>OpsTimelock</code> events.0AmThe state of the orchestratorCcContainer type for the return parameters of the \xe2\x80\xa60000DeFunction with signature <code>PROPOSER_ROLE()</code> and selector \xe2\x80\xa6000ChA Prometheus-based implementation of a Metrics registry.BmA peer node needs a proposal from the leader.BnA replica has responded with a valid proposal.CoType alias for a <code>QuorumCertificate</code>, which is a \xe2\x80\xa60BfFailed to read NetworkConfig from fileAoRegister to become a validator.CmContainer for all the <code>RewardClaim</code> custom errors.0CfContainer for all the <code>RewardClaim</code> events.0BbMessages for sequencing consensus.Cdenum desecribing whether a node should hit view syncAbShutdown bootstrapCjA certificate which can be created by aggregating many \xe2\x80\xa6BjTracks the stake table info for each epochCoContainer for all the <code>StakeTableV2</code> function calls.00CfConfiguration/Parameters used for hotshot state proverCdThe type replica uses to sign the light client stateCjLight client state signature key with minimal requirementsClContains a transaction to be submitted TODO rethink this \xe2\x80\xa6CiInstance-level state implementation for testing purposes.CmTransactionDetail is a struct that represents the details \xe2\x80\xa60CeEnum to hold the different sources of the transactionBmEnum to keep track on status of a transactionBbtypes in src/legacy/Transcript.solCdGet jf_plonk::Transcript::get_and_append_challenge()CnTrait for handling messages for a node with a twin copy of \xe2\x80\xa6BmConstants used to construct upgrade proposalsDdCustom error with signature <code>UnsupportedDegree()</code> and \xe2\x80\xa600000DdCustom error with signature <code>ValidatorInactive()</code> and \xe2\x80\xa60000CmA wrapper for vote data that carries a view number and an \xe2\x80\xa6C`A summary of a VID payload without all the data.0CcVID share and associated metadata for a single nodeAlVID share data is validated.B`<code>ViewSync</code> Task errorAiMain view sync task stateBbAlias for a map of Vote CollectorsDaCreates a new event filter for the <code>Withdrawal</code> event.0DdCustom error with signature <code>ZeroPauserAddress()</code> and \xe2\x80\xa60CcContainer type for the return parameters of the \xe2\x80\xa60000CkReturn the packed encoding of this value, delegating to the00000000000000000000000000000000000000000000111Ciadds tasks for sending/receiving messages to/from the \xe2\x80\xa6BjAdd byzantine network tasks with the traitCeAdd a task which responds to requests on the network.C`The optional advertise address to use for Libp2p0CgThe block height for which aggregate statistics are \xe2\x80\xa6BhFrontier of <code>BlockMerkleTree</code>0DhLimits on block size. See <code>BlockSizeLimits</code> documentation \xe2\x80\xa6BfHow many blocks to generate per secondCkBroadcast a message to members of the particular topic. \xe2\x80\xa6CaBroadcast a message to all members of the quorum.Cbbroadcast message to some subset of nodes blockingBeAccount (etheruem address) of builderAagenerate channelsBjGenerate network channel for restart nodesCeThe minimum delay between loading chunks in a stream.CeGet all members of the committee for the current viewCmGet all participants in the committee for a specific view \xe2\x80\xa60AeThe consensus metrics00CcPruning parameters for ephemeral consensus storage.ChCreate a new FileSystemDataSource using a persistent \xe2\x80\xa60CmCreate a new FileSystemStorage using a persistent storage \xe2\x80\xa6C`The transport currently being used by the client0AlThe size of the da committeeDeFunction with signature <code>dailyLimitWei()</code> and selector \xe2\x80\xa60ClHandles calling add_epoch_root and sync_l1 on Membership \xe2\x80\xa6BnPath to a directory containing decided leaves.CcContainer type for the return parameters of the \xe2\x80\xa60000CmConsume in the constructed Merkle tree and the raw shares \xe2\x80\xa6BhElapse a view with a new finalized block00AeThe epoch start blockAaEpoch start blockAfThe epoch start block.BbTarget block for the epoch upgrade222CkEpoch start block, should be initialized from the sequencerB`Espresso query service provider.0CdIndex of a funded account derived from eth-mnemonic.0CjThe record expiration time in seconds since the Unix epochD`Returns the threshold for a specific <code>Membership</code> \xe2\x80\xa60CcA helper method to the <code>catchup</code> method.Cnwhether we are using a fixed stake table, disabling public \xe2\x80\xa6BmFormed light client state update certificates0fSafetyDmGet a <code>Vec&lt;FeeInfo&gt;</code> from <code>Vec&lt;BuilderFee&gt;</code>CdBuild a payload and associated metadata with the \xe2\x80\xa60DnCreate a vector of <code>VidDisperseShare</code> from <code>VidDisperse</code>0DeFunction with signature <code>getFirstEpoch()</code> and selector \xe2\x80\xa600CcContainer type for the return parameters of the \xe2\x80\xa6000DgCreates a new call builder for the [<code>getOperationState</code>] \xe2\x80\xa60CiCalled once when the Dependency completes handles the \xe2\x80\xa6AcHandle a vote eventCkTake one vote and accumulate it. Returns the certs once \xe2\x80\xa6AkFunction with signature \xe2\x80\xa6000AoOld txs to be garbage collectedBmInsert a state certificate for a given epoch.77777777777777DkFunction with signature <code>isGtEpochRoot(uint64)</code> and selector \xe2\x80\xa600000000000008888Cnhelper function to decide if the contract at given address \xe2\x80\xa6BoCheck if the given address is a proxy contract.CnCheck that the given ViewChangeEvidence is relevant to the \xe2\x80\xa6CkCheck that the given ViewChangeEvidence2 is relevant to \xe2\x80\xa6nPrivate helperClLast decided leaf that can be used as the anchor leaf to \xe2\x80\xa6BmNumber of timestamp for the last decided timeAjGet the last decided view.Bglast view had a successful decide eventAoThe number of last decided viewBkLatest view number that has been voted for.0BdTime to live for Libp2p fanout peers0BgThe minimum number of peers in the meshCmMinimum number of peers in the Libp2p mesh network before \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa6000000B`What to re-export, what to hide?DdLoad stake tables for storage for latest <code>n</code> known epochsAnLoad the view to restart from.CmThe number of missing VID entries encountered in the last \xe2\x80\xa6AoMark a dependency as completed.CmThe maximum number of permits that can be held across all \xe2\x80\xa600AoThe maximum gossip message size000CfThe minimum number of mesh peers that must be outbound000AmMinimum data retention periodCkMinimum retention period. Data is retained for at least \xe2\x80\xa6CiMinimum number of views to try to retain in consensus \xe2\x80\xa6DgThe number of missing VID entries encountered <em>cumulatively</em> \xe2\x80\xa6DgCreates a new call builder for the [<code>newFinalizedState</code>] \xe2\x80\xa600DfCreates a new <code>Arc&lt;SystemContext&gt;</code> with the given \xe2\x80\xa6Betimeout before starting the next viewCcreturn the timeout for a view for <code>self</code>Ccreturn the timeout for a view of the underlying \xe2\x80\xa6CdBase duration for next-view timeout, in milliseconds003BdBase duration for next-view timeout.DgCreates a new call builder for the [<code>onERC1155Received</code>] \xe2\x80\xa60BnThe map of currently active, outgoing requestsChA copy of the map of currently active, outgoing requestsBcCommitment to this leaf\xe2\x80\x99s parent.00DdThe hash of the parent <code>Leaf</code> So we can ask if it extends0AcPlonkVerifierV2.solAcPlonkVerifierV3.solCdpost endpoint for manually starting the orchestratorAjManually start the networkAjPrivate state signing key.DkReturn whether <code>QuorumProposal2</code> is the correct message type \xe2\x80\xa6DeFunction with signature <code>proxiableUUID()</code> and selector \xe2\x80\xa600000000000000000000000000000000B`Disk space threshold (in bytes).CjThreshold for pruning, specified in bytes. If the disk \xe2\x80\xa6CeDo nothing here, as we don\xe2\x80\x99t need to look up nodes.Agqueues lookup of a nodeAjcreate a random commitmentDfReconstructs the <code>ValidatedState</code> from a specific block \xe2\x80\xa6DgCreates a new call builder for the [<code>registerValidator</code>] \xe2\x80\xa60DgCreates a new call builder for the [<code>renounceOwnership</code>] \xe2\x80\xa6000000000000000CcContainer type for the return parameters of the \xe2\x80\xa60CfThe delay a leader inserts before starting pre-commit.BjProcess request events or loop until a \xe2\x80\xa6CnSpawn the network response task to handle incoming request \xe2\x80\xa6Ahsafety task requirementsDgValidate that the <code>NodeMap</code> only has a single leaf per view.AkFunction with signature \xe2\x80\xa6000666BbSchnorr signature over the address0CnURL of hotshot events API running on Espresso Sequencer DA \xe2\x80\xa6888DgCreates a new call builder for the [<code>setBlocksPerEpoch</code>] \xe2\x80\xa60DcFunction with signature <code>setDailyLimit(uint256)</code> and \xe2\x80\xa60DgCreates a new call builder for the [<code>setFinalizedState</code>] \xe2\x80\xa600Dc<code>should_return_err</code> is a testing utility to validate \xe2\x80\xa6BnSpawns task for looking up nodes pre-emptivelyChSpawn a short-lived background task attached to this \xe2\x80\xa60ClSplit off the peer ID from a multiaddress, returning the \xe2\x80\xa6AkCommitment for stake amount00Ckget the stake table entry from the public key and stake \xe2\x80\xa6Bmverify Stake Holder in the application layer.1BjProxy\xe2\x80\x99s to <code>Membership.stake</code>0DaGet  <code>StakeTableEntry</code> from Membership implementation.AoStake table info for each epochCkUse an already-deployed StakeTable.sol proxy instead of \xe2\x80\xa6CjThe timestamp at which voting for the upgrade proposal \xe2\x80\xa60CkUnix time in seconds at which we start voting on an upgrade00ChThe view at which voting for the upgrade proposal starts0BbView to start voting on an upgrade00BnThe private key to sign the light client stateBdSignature key for light client state00Cbthe validator\xe2\x80\x99s key pairs for state verificationC`Get a reference to the light client signing key.AfThe state signing key.BdThe Schnorr private key for signing.CiDeserialize a type from either a string or integer in \xe2\x80\xa6BfSubscribe to a stream of Block HeadersBhThe list of topics we\xe2\x80\x99re subscribed toD`Returns the threshold for a specific <code>Membership</code> \xe2\x80\xa60DgCreates a new call builder for the [<code>supportsInterface</code>] \xe2\x80\xa6000CcContainer type for the return parameters of the \xe2\x80\xa6000CaGet an inclusion proof for the given transaction.0DgCreates a new call builder for the [<code>transferOwnership</code>] \xe2\x80\xa6000000000000000Cfattempt to advance epoch, should be invoked at the \xe2\x80\xa60DkFunction with signature <code>undelegations(address,address)</code> and \xe2\x80\xa600004444CaUpdate aggregate statistics based on a new block.CgUpdate the light client state update certificate in \xe2\x80\xa6CmUpdate the light client state update certificate if given \xe2\x80\xa6BfAdd a new entry to the vid_shares map.CiReturns the threshold required to upgrade the network \xe2\x80\xa60CnFor a NodeMapSanitized, we validate that each leaf extends \xe2\x80\xa6CnVerify the DRB result from the proposal for the next epoch \xe2\x80\xa6ClVerify that the BLS and Schnorr signatures are valid for \xe2\x80\xa6Bltimeout before starting next view sync roundBeTimeout duration for view sync roundsAlTimeout for view sync roundsAaview sync timeoutBdDuration of view sync round timeoutsBdDuration for view sync round timeout5BkTable for the in-progress dependency tasks.0CcReturn the next HighQc we get from the event streamCjConnect to the given state relay server to send signed \xe2\x80\xa6DeCustom error with signature <code>BN254ScalarInvZero()</code> and \xe2\x80\xa600000EhAn <code>EventTransformerState</code> that multiplies <code>QuorumProposalSend</code>\xe2\x80\xa6CkRepresents errors that can occur while interacting with \xe2\x80\xa6CcMetadata describing builder behaviour during a testDfFunction with signature <code>CANCELLER_ROLE()</code> and selector \xe2\x80\xa6000BfClaim withdrawal after validator exit.CnStake table holding all staking information (DA and non-DA \xe2\x80\xa60BbTask state for the Consensus task.DhCreates a new call builder for the [<code>DEFAULT_ADMIN_ROLE</code>] \xe2\x80\xa6000CmMessages related to the sequencing consensus protocol for \xe2\x80\xa6DeCustom error with signature <code>DailyLimitExceeded()</code> and \xe2\x80\xa600DeCustom error with signature <code>DeprecatedFunction()</code> and \xe2\x80\xa600DgA <code>PersistentStorage</code> that persists the DHT to a file on \xe2\x80\xa6DgA <code>TwinsHandlerState</code> that forwards each message to both \xe2\x80\xa6CnContainer for all the <code>ERC1967Proxy</code> custom errors.0CgContainer for all the <code>ERC1967Proxy</code> events.0DhCustom error with signature <code>ERC20InvalidSender(address)</code> \xe2\x80\xa6000C`Default channel size for consensus event sharingBcA <code>EspTokenV2</code> instance.0C`Get ark_poly::Radix2EvaluationDomain::elements()CjAn interface for querying Data and Statistics from the \xe2\x80\xa60ClExplorerHistograms provides a series of data points that \xe2\x80\xa60ClTrack (with exponential backoff) sending of some sort of \xe2\x80\xa6CbFailed to recursively create path to NetworkConfigBcThe most basic kind of data source.CnData that can be deserialized from a subslice of namespace \xe2\x80\xa6CePublic input to the light client state prover service0CmPublic input to the light client state prover service The \xe2\x80\xa6BhThe global permit limit has been reachedDk<code>HandleDaEventError</code> represents the internal class of errors \xe2\x80\xa6Dj<code>HandleReceivedTxns</code> is a struct that is used to handle the \xe2\x80\xa6CjA bundle of views that we have most recently performed \xe2\x80\xa6Bninitializer struct for creating starting blockAmDRB result for epoch 1 and 2.CnContainer for all the <code>IRewardClaim</code> custom errors.CgContainer for all the <code>IRewardClaim</code> events.CkThe system context that we\xe2\x80\x99re passing directly to the \xe2\x80\xa6DbCreates a new event filter for the <code>Initialized</code> event.000000000000000AcInsufficient sharesAkThe block header is invalidDeCustom error with signature <code>InvalidUserAddress()</code> and \xe2\x80\xa60CmLatestNodeIdentity is a message that is meant to show the \xe2\x80\xa6AgLibp2p-specific metrics0BjThe underlying state of the libp2p networkD`Container for all the <code>LightClientV2</code> function calls.00D`Container for all the <code>LightClientV3</code> function calls.00Cnthe maximum number of nodes to query in the DHT at any one \xe2\x80\xa6CmMAX_VOTERS_HISTORY represents the last N records that are \xe2\x80\xa6ChInternal state for a <code>MemoryNetwork</code> instanceBdarguments to run multiple validatorsAma network configuration errorC`interface describing how reliable the network is00ClThe next leader has collected enough votes from the next \xe2\x80\xa6BcNode implementation aggregate trait00CmRepresents either keys for signing or a pre-prepared node \xe2\x80\xa6CkDefines a threshold which is f + 1 (i.e at least one of \xe2\x80\xa6BoHolds the client connection to the orchestratorC`Generated by the following Solidity interface\xe2\x80\xa6B`What to re-export, what to hide?ClFor the <code>SendPayloadCommitmentAndMetadata</code> event.BiThe per-key permit limit has been reachedD`Container for all the <code>PlonkVerifier</code> function calls.0CkProposal dependency types. These types represent events \xe2\x80\xa6D`Type alias for a <code>QuorumCertificate2</code>, which is a \xe2\x80\xa6CkTrait wrapping a config for quorum filters. This allows \xe2\x80\xa6CiA quorum proposal has been received from the network; \xe2\x80\xa6CiSend a quorum proposal to the network; emitted by the \xe2\x80\xa6CfThe default network data request delay in millisecondsDhA <code>TwinsHandlerState</code> that randomly forwards a message to \xe2\x80\xa6CbA replica task was canceled by a timeout interrupt000Bjgenerators for resources used by each nodeDbCreates a new event filter for the <code>RoleGranted</code> event.000DbCreates a new event filter for the <code>RoleRevoked</code> event.000CgA struct containing information about a finished round.CdContains information about what the state of the \xe2\x80\xa6CfA serializable version of a Libp2p <code>Record</code>AnVariable for stake table entry00BcA <code>StakeTable</code> instance.000ClStakeTableSnapshot is a message that is sent in response \xe2\x80\xa6CeErrors encountered when processing stake table eventsB`What to re-export, what to hide?CnContainer for all the <code>StakeTableV2</code> custom errors.00CgContainer for all the <code>StakeTableV2</code> events.00CdAn RPC client with multiple remote (HTTP) providers.0CjA synchronous network. Packets may be delayed, but are \xe2\x80\xa6CdValidated state implementation for testing purposes.CeModule containing a contract\xe2\x80\x99s types and functions.0CgType alias for a Timeout certificate over a view numberDhThe concrete <code>TransactionManager</code> implementation for this \xe2\x80\xa6ClTransactionSummary is a struct that represents a summary \xe2\x80\xa60Ajbuild the transaction taskDbCreates a new event filter for the <code>Undelegated</code> event.0AcUninitialized field00000D`Type alias for a <code>UpgradeCertificate</code>, which is a \xe2\x80\xa6DeCustom error with signature <code>ValidatorNotExited()</code> and \xe2\x80\xa60000CnValidatorSnapshot is a message that is sent in response to \xe2\x80\xa6DkA glorified <code>bool</code> that leverages compile lints to encourage \xe2\x80\xa6CmHelper type to encapsulate the various ways that proposal \xe2\x80\xa6AlData used for a Commit vote.BdMessage with a view sync commit voteB`View Sync Commit Vote type aliasChWhether we are still accepting new keys for registrationBgTotal stakes associated with the signer00CeThe minimum delay between active fetches in a stream.BeAdd a direct request for a given peer0CmAdd a task which updates our queue length metric at a set \xe2\x80\xa6CeAggregate all inputs used for signature over fee dataChIf true we won\xe2\x80\x99t fail the test if extra events come inCdValidatedState::Delta for the anchor leaf, optional.BfTime taken by the storage to append DACgDelay config if any to add delays to asynchronous callsBbAdd specified delay to async callsBgThe average latency of the transactions0CkGet a block from builder. Queries the sufficiently fast \xe2\x80\xa6BkBreak a block range into fixed-size chunks.DfFunction with signature <code>blocksPerEpoch()</code> and selector \xe2\x80\xa60000000000000CgCommit over fee_amount, payload_commitment and metadataCgGenerate commitment that builders use to sign block \xe2\x80\xa6BhFast commitment for builder verificationAjGet the builder commitment2AbBuilder CommitmentCcContainer type for the return parameters of the \xe2\x80\xa600DhCreates a new call builder for the [<code>claimValidatorExit</code>] \xe2\x80\xa60DdFunction with signature <code>claimedRewards(address)</code> and \xe2\x80\xa600DhCreates a new call builder for the [<code>commissionTracking</code>] \xe2\x80\xa6Cjconverting a keccak256-based structured commitment (32 \xe2\x80\xa6BoCompute the DRB result for the leader rotation.BiSet the maximum lifetime of a connection.BnThe maximum lifetime of a database connection.Bhregistry for controlling consensus tasks0AoCreates and signs a simple voteDhCreates a new call builder for the [<code>currentBlockNumber</code>] \xe2\x80\xa600000000::::::::::::::CiTime between view change and DA certificate received (ms)Chtime to wait until we request data associated with a \xe2\x80\xa600ChTime to wait until we request data associated with a \xe2\x80\xa61CkThe migrations required to build the default schema for \xe2\x80\xa6CkDefault setting with 20 nodes and 8 views of successful \xe2\x80\xa6BhOption to deploy StakeTable V1 and proxyCgThe primary logic for deploying and initializing an \xe2\x80\xa6AjRun without an aggregator.CgThe discovery client endpoint (including scheme) to \xe2\x80\xa600CiReturn the number of bytes that can be encoded into a \xe2\x80\xa6CiThis function just returns the stored block reward in \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa6000C`Exit escrow period for the stake table contract.ClUse an already-deployed FeeContract.sol proxy instead of \xe2\x80\xa6CeFetch the chain config, retrying on transient errors.CmGet the latest LightClientState and signature bundle from \xe2\x80\xa60BfFill this leaf with the block payload.00BnMap of finalize vote accumulates for the relayDfFunction with signature <code>finalizedState()</code> and selector \xe2\x80\xa60000000000000000000CkFixed block reward (used only in V3). starting from V4, \xe2\x80\xa60BeFind accounts that are not in memory.DnCreate a vector of <code>VidDisperseShare</code> from <code>VidDisperse</code>CkDeserialize <code>Self</code> from namespace payload bytes.CiThe function signature for the target contract of the \xe2\x80\xa6AlGenerate key pairs from seedCjGenerate the stake table CDF, as well as a hash of the \xe2\x80\xa6>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>BoGet a counter family in this sub-group by name.CaGet a record from the kademlia DHT with a timeoutDj<code>get_search_results</code> is a method that retrieves the results \xe2\x80\xa600Chget endpoint for the next available temporary node indexAiAdd a delay from settingsBgHandle a <code>ViewChange</code> event.Bghandle view change decide legacy or notDhCreates a new call builder for the [<code>hashOperationBatch</code>] \xe2\x80\xa60AfThe heartbeat interval000CnThe consensus layer for hotshot. This currently implements \xe2\x80\xa6AjTimeout for HTTP requests.CnEmbed migrations from the given directory into the current \xe2\x80\xa600CcContainer type for the return parameters of the \xe2\x80\xa60000000000000000000000000AcInitializes loggingDhCreates a new call builder for the [<code>initializedAtBlock</code>] \xe2\x80\xa60AlInsert a fee deposit receiptDhCreates a new call builder for the [<code>isOperationPending</code>] \xe2\x80\xa60ClCheck if the contract is a legacy contract. Returns true \xe2\x80\xa6CiRevert back to the first provider this duration after \xe2\x80\xa60CjThe view we last performed an action in.  An action is \xe2\x80\xa6CmMinimum number of Libp2p peers to emit gossip to during a \xe2\x80\xa60BgThe maximum number of peers in the meshCmMaximum number of peers in the Libp2p mesh network before \xe2\x80\xa6ClUse an already-deployed LightClient.sol proxy instead of \xe2\x80\xa6AnReturns the light client state00BgLight client state for epoch transition0AfThe light client state0CgCreates a set of indices into the stake_table which \xe2\x80\xa6DbModifies the config used when generating nodes with <code>f</code>ClThe maximum number of consecutive blocking polls to make \xe2\x80\xa6CjMaximum number of IHAVE messages to accept from a peer \xe2\x80\xa6000CmThe function to estimate the transaction size It takes in \xe2\x80\xa6CjNext epoch highest QC that was seen. This is needed to \xe2\x80\xa6CkNext epoch highest qc seen in the test for restarting nodesAkGet the next epoch high QC.AnThe high QC for the next epochCbThe number of nodes that have posted their resultsAnNumber of views that timed outCfPerform an async operation on all local providers, \xe2\x80\xa6AmThe admin of the ops timelockAmThe delay of the ops timelockAnVID commitment to the payload.CiA commitment to the block payload contained in this leaf.AkGet the payload commitment.Ckreturn the underlying block payload commitment if it existsBjPayload commitment to the available block.BfReturn the internal payload commitmentBjReturn the internal payload VID commitment55ClVidCommitment calculated based on the number of nodes in \xe2\x80\xa6AhBlock payload commitment10DhCreates a new call builder for the [<code>permissionedProver</code>] \xe2\x80\xa600000000AfThe persistent storageAoGenerate plots of replica statsBoSends the benchmark metrics to the orchestratorCdInsert a record into the kademlia DHT with a timeoutCfMinimum collective weights required to recover the \xe2\x80\xa600000Cnregister a node on the fixed stake table, which was loaded \xe2\x80\xa6Abreliability_configC`config to introduce unreliability to the networkCcContainer type for the return parameters of the \xe2\x80\xa600000000BiReplication factor for entries in the DHT00BfGet the replication factor for queriesAbreplication factor222ClThe batch size for outgoing requests. This is the number \xe2\x80\xa6ClUse an already-deployed RewardClaim.sol proxy instead of \xe2\x80\xa6CmConstruct a tide disco app that mocks the builder API 0.1 \xe2\x80\xa6AiRun prover in daemon mode00AdSafeExitTimelock.solBnRecord the height of the latest pruned header.Cla helper function to send messages through both networks \xe2\x80\xa6BjSign the serialized version of the request;;;;;;;;;Cesignificant_digits represents the total number of \xe2\x80\xa6CmImplementations of the simple certificate type.  Used for \xe2\x80\xa6ClSpawn a network node task task and return the handle and \xe2\x80\xa60DaSpawn all tasks that operate on <code>SystemContextHandle</code>.DcSubmits a transaction to the backing <code>SystemContext</code> \xe2\x80\xa6Bbmake a lower and snake case stringChTransaction Cache to ignore previously seen transactionsCcContainer type for the return parameters of the \xe2\x80\xa6000CkCommon logic for any Ownable contract to transfer ownershipChFetch the given list of accounts without retrying on \xe2\x80\xa6Djconverting a <code>U256</code> value into a keccak256-based structured \xe2\x80\xa6Anunrelabile networking metadataAnUnsubscribe from a given topicAgUpdate the locked view.C`Option to use timelock as the owner of the proxyCjChecks that the signature of the quorum proposal is valid.0CkValidate timestamp is not decreasing relative to parent \xe2\x80\xa6DdFunction with signature <code>validatorExits(address)</code> and \xe2\x80\xa60000CiCalculate the version applied in a view, based on the \xe2\x80\xa6CdTime between view change and VID share received (ms)BhCommitment for current fixed stake tableCgTime after which WebSockets connection failures are \xe2\x80\xa6CiThe weight of \xe2\x80\x9copen stream\xe2\x80\x9d actions in the random \xe2\x80\xa6CiThe weight of \xe2\x80\x9cpoll stream\xe2\x80\x9d actions in the random \xe2\x80\xa6CcThe weight of query range actions in the random \xe2\x80\xa6BhAdd a sub-provider which fetches leaves.CjSet the maximum time to retry failed operations before \xe2\x80\xa6ChThe old VidCommonQueryData, associated with ADVZ VID \xe2\x80\xa60BiAuto-generated discriminant enum variantsClAn asynchronous network. Packets may be dropped entirely \xe2\x80\xa6BlPersistent storage for a HotShot blockchain.CgBlockDetailResponse is a struct that represents the \xe2\x80\xa6CkBoxFutureConnection is a simple short-hand type alias for aBjThe type builder uses to sign its messagesCeBuilder Signature Key trait with minimal requirementsDcCreates a new event filter for the <code>CallExecuted</code> event.0B`Failed to receive over a channel00DfCustom error with signature <code>CommissionUnchanged()</code> and \xe2\x80\xa600ClA DA proposal has been validated; handled by the DA task \xe2\x80\xa6BfBuilder for <code>DeployerArgs</code>.AgDeregister a validator.CgThe version at which to use the upgraded DRB difficultyDiCustom error with signature <code>ERC20InvalidSpender(address)</code> \xe2\x80\xa6000CcContainer type for the return parameters of the \xe2\x80\xa6000CnEpoch has already started on block {0}, please upgrade the \xe2\x80\xa6BgMessage with an epoch root quorum vote.DeSNAFU context selector for the <code>Error::EventAvailable</code> \xe2\x80\xa6CkExplorerTransaction is a trait that allows the Explorer \xe2\x80\xa60AjFailed to deserialize dataAeFailed to deserialize010BdA <code>FeeContract</code> instance.0DeSNAFU context selector for the <code>Error::FetchStateCert</code> \xe2\x80\xa6CkTypes which can be deserialized from either integers or \xe2\x80\xa60CmGetBlockDetailError represents an error that has occurred \xe2\x80\xa60BeRequest the number of connected peersCjError representing fail cases for retrieving the stake \xe2\x80\xa6DaContainer for all the <code>IPlonkVerifier</code> function calls.DiCustom error with signature <code>InsufficientBalance(uint256)</code> \xe2\x80\xa60000DfCustom error with signature <code>InvalidRewardAmount()</code> and \xe2\x80\xa600C`Newtype wrapper for a large payload range proof.C`Generated by the following Solidity interface\xe2\x80\xa6BdA <code>LightClient</code> instance.000000B`What to re-export, what to hide?11111111CeConcreate type for light client state message to sign1AkLight client state Variable0CoContainer for all the <code>LightClientV2</code> custom errors.00ChContainer for all the <code>LightClientV2</code> events.00CoContainer for all the <code>LightClientV3</code> custom errors.00ChContainer for all the <code>LightClientV3</code> events.00AiMaximum size of a messageCmThe highest protocol version supported by this version of \xe2\x80\xa6DeSNAFU context selector for the <code>Error::MerklizedState</code> \xe2\x80\xa6BkAn error occurred while receiving a message00B`the source of the network configDiA map from node ids to <code>NodeMapSanitized</code>s; the latter has \xe2\x80\xa6Aninternal network node receiver0ClLong running task which will request information after a \xe2\x80\xa6BoA collection of tasks which can handle shutdownDkSNAFU context selector for the <code>MetricsError::NoSuchSubgroup</code>\xe2\x80\xa6BfSource for pre-prepared NodeSignaturesChSpecifies a subslice of namespace payload bytes to read.BdA <code>OpsTimelock</code> instance.0AnOrchestrator Version as a typeBjA type alias for the outgoing requests mapDiCustom error with signature <code>OwnableInvalidOwner(address)</code> \xe2\x80\xa60000000000000000000000000000000000CcContainer type for the return parameters of the \xe2\x80\xa6000BlThis struct holds a payload and its metadataCoContainer for all the <code>PlonkVerifier</code> custom errors.0DfCustom error with signature <code>PowPrecompileFailed()</code> and \xe2\x80\xa60000000000DfCustom error with signature <code>PrematureWithdrawal()</code> and \xe2\x80\xa60000BkTrait for abstracting private signature keyChThis struct defines the public Hotshot configuration \xe2\x80\xa6ClPublicHotShotConfig is a minimal configuration structure \xe2\x80\xa6CgPublicNetworkConfig is a struct that represents the \xe2\x80\xa6BbCentralized server specific errorsBcThe state for the quorum vote task.CkOptions controlling how the random builder generates blocksClA mock implementation of the builder data source. Builds \xe2\x80\xa6Dc<code>ReceivedTransaction</code> represents receipt information \xe2\x80\xa6BdA <code>RewardClaim</code> instance.0Cjsubmit transactions in a round robin style using every \xe2\x80\xa6CdA data source with sequencer-specific functionality.BjSerialization formats supported by the CLIC`Newtype wrapper for a small payload range proof.DbType representing stake table entries in a <code>StakeTable</code>BiError type for state certificate fetchingoStorage metricsDdEvent streaming handle for a <code>SystemContext</code> instance \xe2\x80\xa60CcResponse to a <code>/:resource/window</code> query.0DaType alias for a <code>TimeoutCertificate2</code>, which is a \xe2\x80\xa6BjGet jf_plonk::Transcript::append_message()CgByte range for entries from a tx table for use in a \xe2\x80\xa60CmThis allows the use-case of a user sending a message that \xe2\x80\xa6CnThis is the special case where the request received by the \xe2\x80\xa6CdUpdate a validators Espresso consensus signing keys.AmData used for a Upgrade vote.CcUpgrade proposal has been received from the networkBmUpgrade proposal has been sent to the networkClIncorrect encoding proof for AvidM (only supported after \xe2\x80\xa60CnType to hold cloned validated state and provide validation \xe2\x80\xa6AhEvent with signature \xe2\x80\xa60000CkThe proof system and the statement which is proved will \xe2\x80\xa60CbA data source with an atomic transaction-based \xe2\x80\xa60CmHelper type to encapsulate the various ways that proposal \xe2\x80\xa6BeMessage with a view sync certificate.AlData used for a Commit vote.BdMessage with a view sync commit voteBbView Sync Commit Vote 2 type aliasDiA wrapped <code>SignatureKey</code>. We need to implement the Push CDN\xe2\x80\xa600DfCustom error with signature <code>WrongStakeTableUsed()</code> and \xe2\x80\xa60000000000000000000DcAdds consensus-related tasks to a <code>SystemContextHandle</code>.BcAdd a direct response for a channelBiTime taken by the storage to append a VIDCiSends and awaits receipts on all funding and approval \xe2\x80\xa6A`create signatureDgcreate the <code>SystemContextHandle</code> from a node id, with no \xe2\x80\xa6Bdlocally spawned builder CommitementsCjByzantine definitions and implementations of different \xe2\x80\xa6CjThe address for the Push CDN\xe2\x80\x99s \xe2\x80\x9cmarshal\xe2\x80\x9d, A.K.A. \xe2\x80\xa60CnThe address of the Push CDN\xe2\x80\x99s \xe2\x80\x9cmarshal\xe2\x80\x9d, A.K.A. load \xe2\x80\xa6DeFunction with signature <code>claimWithdrawal(address)</code> and \xe2\x80\xa60000CcContainer type for the return parameters of the \xe2\x80\xa60AmOption to deploy ops timelockBoDeploy and initialize the Ops Timelock contractDiCreates a new call builder for the [<code>deregisterValidator</code>] \xe2\x80\xa60CdCalculate/derive the response for a specific requestDgFunction with signature <code>epochStartBlock()</code> and selector \xe2\x80\xa60000000000000Ahexponential backoff typeCjgenerates the genesis public key. Meant to be dummy/filler0777Di<code>get_block_summaries</code> is a method that retrieves a list of \xe2\x80\xa600DaAsynchronously retrieves a <code>NetworkConfig</code> from an \xe2\x80\xa6CgGet a namespace proof for the given block, if possible.CkReturn a signature of a light client state at given height.BmGossip a message to peers without serializingDd<code>handle_quorum_event</code> is a utility function that will \xe2\x80\xa6mHandle eventsBoevent handler for events emitted from the swarm????DhConstruct a SQL <code>WHERE</code> clause which filters for a header \xe2\x80\xa6ClHolds the configuration file specification for a HotShot \xe2\x80\xa6DmReturn the <code>known_nodes_with_stake</code> as a <code>HSStakeTable</code>DhHelper macro for trivial implementation of the <code>HasEpoch</code> \xe2\x80\xa6CgImplement <code>to_fixed_bytes</code> for wrapped typesCjStake entries indexed by public key, for efficient lookup.CcContainer type for the return parameters of the \xe2\x80\xa60000000000000DeFunction with signature <code>isOperationDone(bytes32)</code> and \xe2\x80\xa6000CmReturns true if the block is part of the epoch transition \xe2\x80\xa6ChReturns true if a given leaf is for the epoch transitionCkReturn true if the given block number is the final full \xe2\x80\xa6CfTime to wait for a message requested through IWANT \xe2\x80\xa6000AgThe Kademlia record TTL0AmRequest rate when polling L1.00CiAmount of time to wait after receiving a 429 response \xe2\x80\xa60CjGet VID commitment for the last successful view before \xe2\x80\xa6CgThe block height of the latest available LCV1 state \xe2\x80\xa6CgThe block height of the latest available LCV2 state \xe2\x80\xa6CgThe block height of the latest available LCV3 state \xe2\x80\xa6BaThe address to bind to for Libp2pDbThe address to bind to for Libp2p (in <code>host:port</code> form)Abthe last aggregateBjThe maximum number of permits for each key00BnRecord <code>HotShotAction</code> if availableChAn optional network config file to save to/load from \xe2\x80\xa60DiCreates a new call builder for the [<code>newFinalizedState_0</code>] \xe2\x80\xa600000DiCreates a new call builder for the [<code>newFinalizedState_1</code>] \xe2\x80\xa600000DiCreates a new call builder for the [<code>newFinalizedState_2</code>] \xe2\x80\xa600BaComposite trait for node behavior0BnCommittee used when we\xe2\x80\x99re in pre-epoch state0BgThe number of currently connected peers0AmThe number of failed messages000CgPerform an async operation on all remote providers, \xe2\x80\xa6BbAccess to the output event stream.ChThe sender and receiver, to allow the application to \xe2\x80\xa60AlOutput events to application0000000Cctask that\xe2\x80\x99s consuming events and asserting safetyCnIf the light client contract is being deployed and this is \xe2\x80\xa6Beprint out the routing table to stderrCkPrint out the routing table used by kademlia NOTE: only \xe2\x80\xa6AdPrivate staking key.Ajprocessing the DA proposalCi[process_leaf_stream] allows for the consumption of a \xe2\x80\xa6CfThe polynomial commitment for the wire permutation \xe2\x80\xa600CcContainer type for the return parameters of the \xe2\x80\xa600000000000000000000000000000000CiRead the following info from the LightClient contract \xe2\x80\xa600DiCreates a new call builder for the [<code>registerValidatorV2</code>] \xe2\x80\xa6Bjpost endpoint for each node\xe2\x80\x99s public keyAjThe state relay server urlAggenerator for resourcesCkReturns the block number of the epoch root in the given \xe2\x80\xa66666BfSend a message to a specific recipientAfEmit an external event88DiCreates a new call builder for the [<code>setHotShotDownSince</code>] \xe2\x80\xa600AkFunction with signature \xe2\x80\xa600000000CjThe signed state digest used for LCV3 WARN: this field \xe2\x80\xa6CnCreates a network message and spawns a task that transmits \xe2\x80\xa6Acspinning propertiesBfDeployed stake table contract address.AcStake table tracker00Citimestamp after which the node stops proposing an upgrade0CjUnix time in seconds at which we stop proposing an upgradeCfUnix time in seconds at which we stop proposing an \xe2\x80\xa60Cdview after which the node stops proposing an upgrade0BaView to stop proposing an upgradeCnView to stop proposing an upgrade. To prevent proposing an \xe2\x80\xa60ClHelper function to create a callback to add a drb result \xe2\x80\xa6CkCallback function to store a drb result in storage when \xe2\x80\xa6CgUtility program to submit random transactions to an \xe2\x80\xa6CjGet the transaction with a given hash, if it is in the \xe2\x80\xa60BeBUILDER TRANSACTIONS CHANNEL CAPACITYCcContainer type for the return parameters of the \xe2\x80\xa60000DiCreates a new call builder for the [<code>updateConsensusKeys</code>] \xe2\x80\xa60DkEnsures that the given <code>BuildBlockInfo</code>\xe2\x80\x99d id is within the \xe2\x80\xa6BhUpdate the saved leaves with a new leaf.CjUpdates the shared consensus state with the new voting \xe2\x80\xa6CdThe QC linking this leaf to its parent in the chain.CkHelper function to get the proposal\xe2\x80\x99s upgrade_certificate11CfPossible upgrade certificate, which the leader may \xe2\x80\xa600ClOptional upgrade certificate, if one was attached to the \xe2\x80\xa60CeValidate that proposal block size does not exceed \xe2\x80\xa6CaValidate and preprocess a sequence of migrations.CmValidates a state certificate by verifying signatures and \xe2\x80\xa6B`Store events from previous viewsAlGet the validated state map.CiThe validated states that are currently loaded in memory.CmWaits for the configured timeout for nodes to send HighQc \xe2\x80\xa6CjThe weight of \xe2\x80\x9cclose stream\xe2\x80\x9d actions in the random \xe2\x80\xa6CjThe weight of \xe2\x80\x9cquery window\xe2\x80\x9d actions in the random \xe2\x80\xa6BhAdd a sub-provider which fetches blocks.CdA provider which can be used as a fetcher by the \xe2\x80\xa6Dj<code>AvailableBlocksError</code> is an error enum that represents the \xe2\x80\xa6DgCustom error with signature <code>BN254ScalarMulFailed()</code> and \xe2\x80\xa600000Bjtimeout for fetching bundles from buildersBlControls how backtraces are logged on panic.ChBlockSummaryResponse is a struct that represents the \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa6000DdCreates a new event filter for the <code>CallScheduled</code> event.0CbThe number of connected peers has possibly changedAhEvent with signature \xe2\x80\xa60000BgBuilder for <code>CrossTestData</code>.Aibroadcast to DA committeeCcInternal error when generating the SNARK proof: {0}CmA trait that we use to save and load the DHT to a file on \xe2\x80\xa6BeA <code>ERC1967Proxy</code> instance.0DjCustom error with signature <code>ERC20InvalidApprover(address)</code> \xe2\x80\xa6000DjCustom error with signature <code>ERC20InvalidReceiver(address)</code> \xe2\x80\xa6000BgMessage with an epoch root quorum vote.ChExport validator node signatures for address validation.ChWrapper to add extensibility to an existing data source.0AjThe external event handlerCmA data source for the APIs provided in this crate, backed \xe2\x80\xa6DgCustom error with signature <code>FunctionDoesNotExist()</code> and \xe2\x80\xa60ClHandleConnectedError represents the scope of errors that \xe2\x80\xa6AnMarker that the task completedBeA <code>IRewardClaim</code> instance.DbContainer for all the <code>LightClientMock</code> function calls.00CaType alias for consensus state wrapped in a lock.B`Never go lower than 10 kilobytes0Ckinternal representation of the network events only used \xe2\x80\xa6ChTask state for the Network Request Task. The task is \xe2\x80\xa6ClData used for a yes vote. Used to distinguish votes sent \xe2\x80\xa6CmQuorum vote Alias. This type is useful to distinguish the \xe2\x80\xa6CnNodeIdentitySnapshot is a message that is sent in response \xe2\x80\xa6BoOrchestrator Version as a type-binding instanceBoThe inner implementation of an outgoing requestopossible errorsDkEvent with signature <code>OwnershipTransferred(address,address)</code> \xe2\x80\xa60000000000000000000000000000000000CjA catchup implementation that parallelizes requests to \xe2\x80\xa6DbContainer for all the <code>PlonkVerifierV2</code> function calls.0DbContainer for all the <code>PlonkVerifierV3</code> function calls.0ClData availability provider backed by another instance of \xe2\x80\xa60BcThe randomized stake table electionCjThe inner implementation for the request-response protocolCkA type alias for the function that returns the above futureCgA proof of the balance of an account in the fee ledger.0ChSearchResultResponse is a struct that represents the \xe2\x80\xa6ClIterator which returns odd/even values for a given COUNT \xe2\x80\xa6BeA <code>StakeTableV2</code> instance.00DbA wrapper around <code>LightClientStateUpdateCertificateV1</code>.0DbA wrapper around <code>LightClientStateUpdateCertificateV2</code>.0A`Signature schemeCnThis enum is not used in code but functions as an index of \xe2\x80\xa60AnError type for TestDataBuilderBbTracks state of a Transaction taskClThe system context that we\xe2\x80\x99re passing to the node when \xe2\x80\xa6DdCreates a new event filter for the <code>ValidatorExit</code> event.0AnData used for a Finalize vote.BfMessage with a view sync finalize voteBbView Sync Finalize Vote type aliasB`Handler for the vote dependency.Baadd a specific node with a configCeAuthenticate a BLS signature over an Ethereum addressCcContainer type for the return parameters of the \xe2\x80\xa60000000000000000CkThe potentially externally completed dependency. If the \xe2\x80\xa6CiHelper function to do the actual code gen allow panic \xe2\x80\xa6CgBroadcast a message to all members of the DA committee.Ccbroadcast a message only to a DA committee blockingCeGet all members of the committee for the current viewCmGet all participants in the committee for a specific view \xe2\x80\xa60Adda proposal receiverDcReturns the DA threshold for a specific <code>Membership</code> \xe2\x80\xa60CkAscends the leaf chain by traversing through the parent \xe2\x80\xa6CkThe most recent upgrade certificate from one of the leaves.EaConvert a <code>cbor4ii::serde::DecodeError</code> into an <code>io::Error</code>DbDecrement <code>Self::max_block_size</code> by current value * \xe2\x80\xa60BhDefault builder URL, used as placeholderAkHandler for direct messages0CeThe time period that messages are stored in the cache000CeElapse a view without a new finalized block (e.g. \xe2\x80\xa600CgEncode a function call with the given signature and \xe2\x80\xa6EaConvert a <code>cbor4ii::serde::EncodeError</code> into an <code>io::Error</code>C`Encoded transactions in the block to be applied.0BcThe combined transactions as bytes.DjCreates a new call builder for the [<code>epochFromBlockNumber</code>] \xe2\x80\xa600000DhFunction with signature <code>exitEscrowPeriod()</code> and selector \xe2\x80\xa60000BmRoot Commitment of <code>FeeMerkleTree</code>CcContainer type for the return parameters of the \xe2\x80\xa60000000000000000000CnGet the first leaf which is available in the database with \xe2\x80\xa6CfInstantiate an <code>NsTable</code> from a byte slice.BoConstructs a leaf from a given quorum proposal.00DjCreates a new call builder for the [<code>getHotShotCommitment</code>] \xe2\x80\xa600000000DjCreates a new call builder for the [<code>getStateHistoryCount</code>] \xe2\x80\xa600000000CiQuery the builders for available blocks. Queries only \xe2\x80\xa6ChGet the balance for a given account at a given block \xe2\x80\xa6Dj<code>get_explorer_summary</code> is a method that retrieves a summary \xe2\x80\xa600CaGet a histogram family in this sub-group by name.CeUtility function that will take the given list of \xe2\x80\xa6CmOrchestrator for manipulating nodes and recording results \xe2\x80\xa6DaSNARK-assisted <code>HotShot</code> light client state update \xe2\x80\xa6ChTimeout for issuing a warning due to slow HTTP requests.CjThe timeout for incoming requests. Do not respond to a \xe2\x80\xa6CdInitialize the modules for interacting with HotShot.BaThe initial supply of the tokens.CaConvert to a standard library error trait object.DfFunction with signature <code>isOperationReady(bytes32)</code> and \xe2\x80\xa6000CeMaximum number of L1 blocks to keep in cache at once.0BnLatest view number that has been proposed for.ClLatest view number that has been proposed for (proxy for \xe2\x80\xa61Cmleaf_stream_base_url is the base URL for the availability \xe2\x80\xa6ClIf enabled newly created messages will always be sent to \xe2\x80\xa60ChHow many Libp2p peers we will emit gossip to at each \xe2\x80\xa60BeAddress of LightClient proxy contractBkAddress of LightClient contract on layer 1.CkReturns both genesis light client state and stake table \xe2\x80\xa6B`What to re-export, what to hide?0BfLoad the latest known consensus state.CnThe number of missing blocks encountered in the last major \xe2\x80\xa6C`Whether the orchestrator can be started manuallyDhFunction with signature <code>maxDepositAmount()</code> and selector \xe2\x80\xa60CdSee <code>BuilderConfig::max_api_waiting_time</code>CnMaximum time allotted for the builder to respond to an API \xe2\x80\xa6CmThe maximum number of messages we will process in a given \xe2\x80\xa6000CnGet a Membership for a given Epoch, which is guaranteed to \xe2\x80\xa6DhFunction with signature <code>minDepositAmount()</code> and selector \xe2\x80\xa60DeThe number of missing blocks encountered <em>cumulatively</em> in \xe2\x80\xa6BdTotal number of nodes in the networkBkTotal number of staked nodes in the networkBcrequired number of successful viewsClHow many timeouts we\xe2\x80\x99ve seen in a row; is reset upon a \xe2\x80\xa6AkFunction with signature \xe2\x80\xa6000CmA helper function to compute the quorum threshold given a \xe2\x80\xa6C`Map of pre-commit vote accumulates for the relayBhHow many times primary failed to deliver0Akprocessing the decide eventBjPossible timeout or view sync certificate.DhThe user-facing endpoint in <code>IP:port</code> form to bind to for \xe2\x80\xa6BkTask for handling QuorumProposalRecv eventsBgleader completely randomized every viewCiStake tables randomized with the DRB, used (only) for \xe2\x80\xa6ClA helper function to read a length-prefixed value from a \xe2\x80\xa6EdLike <code>Self::read_ns_id</code> except <code>index</code> is not checked. Use \xe2\x80\xa6CmRequest something from the protocol indefinitely until we \xe2\x80\xa6BaThe maximum request size in bytes000AmMaximum request size in bytesCmValidate that each node has only produced one unique leaf \xe2\x80\xa6BlSerialization for the QC assembled signatureAoSets a sender to bootstrap taskCasign the message with the builder\xe2\x80\x99s private keyCmSpawn a task which will fire a request to get a proposal, \xe2\x80\xa6CaHelper function to convert the arguments to a \xe2\x80\xa6BkStake table capacity for the prover circuitBlStake table capacity for the prover circuit.BiStake table capacity for light client use0000AkCapacity of the stake table33Cg<code>StakeTable </code>(proxy) contract address on L1.0Cmthe earliest unix timestamp in which the node can propose \xe2\x80\xa60CkUnix time in seconds at which we start proposing an upgrade00Cjthe earliest view in which the node can propose an upgrade0BbView to start proposing an upgrade00CkMaximum time to wait for new heads before considering a \xe2\x80\xa60CnWhether we should check if we are the leader when handling \xe2\x80\xa600000000CiFetch the state certificate for a given epoch without \xe2\x80\xa6CmThe amount of time a builder can wait before incrementing \xe2\x80\xa6CkChannel capacity for incoming transactions for a single \xe2\x80\xa6ClTake the block payload from the leaf and return it if it \xe2\x80\xa600DeFunction with signature <code>updateCommission(uint16)</code> and \xe2\x80\xa600AoUpdate the highest block numberCfUpdate an index mapping hashes of objects to their \xe2\x80\xa6AkThe duration of update leafAiUpdate the last proposal.AiUpdate the transition QC.DhFunction with signature <code>upgradeToAndCall(address,bytes)</code> \xe2\x80\xa600000000000000000000000000000000AnOption to upgrade esp token v2BnUpgrade the esp token proxy to use EspTokenV2.CjValidate builder accounts by verifying signatures. All \xe2\x80\xa6CnValidate basic numerical soundness and builder accounts by \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa60000CnVerify that the next epoch QC is present and consistent if \xe2\x80\xa6CjOption to verify node js files access to upgrade stake \xe2\x80\xa6CiVerify the node js files are present and can be executed.CePossible timeout or view sync certificate. If the \xe2\x80\xa60BkHelper function to get the proposal\xe2\x80\x99s \xe2\x80\xa6111Adview sync check taskCbgather information from the parent chain of leavesCkClones the provider and returns a new instance with the \xe2\x80\xa6000000000000000000000000000000000000000000000000000000000000000ChA proof of incorrect encoding. When the disperser is \xe2\x80\xa6Bbconfiguration for combined networkCmAlias for the block payload commitment and the associated \xe2\x80\xa6DjContains several <code>ConsensusMetrics</code> that we\xe2\x80\x99re interested \xe2\x80\xa6BoA collection of tasks which can handle shutdownCjCurrencyMismatchError is an error that occurs when two \xe2\x80\xa60BeNumber of block per epoch for testing0CmTrait for intercepting and modifying messages between the \xe2\x80\xa6CjDetermine the read state based on the queried block range.DgSNAFU context selector for the <code>Error::FetchTransaction</code> \xe2\x80\xa6CfGetSearchResultsError represents an error that has \xe2\x80\xa60DgSNAFU context selector for the <code>InconsistentLeafError</code> errorAoCustom error with signature \xe2\x80\xa60000CnInternalClientMessage represents the message requests that \xe2\x80\xa6DhCustom error with signature <code>InvalidInitialization()</code> and \xe2\x80\xa60000000000000000000000000000000000CnLight client V1 signature key functions. The replicas only \xe2\x80\xa6CnLight client V2 signature key functions. The replicas sign \xe2\x80\xa6CnLight client V3 signature key functions. The replicas sign \xe2\x80\xa6ChThe <code>tide</code> module name for the legacy builderC`Generated by the following Solidity interface\xe2\x80\xa60DaContainer for all the <code>LightClientMock</code> custom errors.00CjContainer for all the <code>LightClientMock</code> events.00BfA <code>LightClientV2</code> instance.00BfA <code>LightClientV3</code> instance.00CjThe maximum size of an authentication message. This is \xe2\x80\xa6DkTrait used by <code>Memberships</code> implementations to interact with \xe2\x80\xa6ChThis trait defines methods that a data source should \xe2\x80\xa6DeCreates a new event filter for the <code>MinDelayChange</code> event.0Ahnetwork event task stateBfA <code>PlonkVerifier</code> instance.0DaContainer for all the <code>PlonkVerifierV2</code> custom errors.0DaContainer for all the <code>PlonkVerifierV3</code> custom errors.0DhCustom error with signature <code>ProverNotPermissioned()</code> and \xe2\x80\xa60000000000000000000CdThis struct defines the public Hotshot validator \xe2\x80\xa6DcLegacy version of <code>QuorumProposal2</code> corresponding to \xe2\x80\xa6ClQuorum proposal message to be put on the quorum proposal \xe2\x80\xa6BkWrapper around a proposal to append a blockClThis constant governs duration of sleep in various retry \xe2\x80\xa6BmConfiguration for Libp2p\xe2\x80\x99s request-response000CiThe underlying configuration for the request-response \xe2\x80\xa6DeCreates a new event filter for the <code>RewardsClaimed</code> event.0DcContainer for all the <code>SafeExitTimelock</code> function calls.0DhCustom error with signature <code>SchnorrKeyAlreadyUsed()</code> and \xe2\x80\xa600B`The status of a single transportCkState that checks the light client state update and the \xe2\x80\xa6BfData structure for timelock operationsAlTypes of timelock operationsCmTransactionIdentifier is an enum that represents multiple \xe2\x80\xa60BlGet jf_plonk::Transcript::append_challenge()BmGet jf_plonk::Transcript::append_commitment()AhEvent with signature \xe2\x80\xa600AnData used for a Finalize vote.BfMessage with a view sync finalize voteBdView Sync Finalize Vote 2 type aliasB`Data used for a Pre Commit vote.BhMessage with a view sync pre-commit voteBdView Sync Pre Commit Vote type aliasCfAdd custom migrations to a default migration sequence.B`any additional test tasks to runCjAppend decided leaves to persistent storage and emit a \xe2\x80\xa6Dbsimilar to <code>build_provider()</code> but using a random walletCcContainer type for the return parameters of the \xe2\x80\xa60000CnThe consensus signing key. Used to sign a message to prove \xe2\x80\xa6B`The BLS private key for signing.CeWrites the offsets used for the quorum filter and \xe2\x80\xa6C`Derive a Libp2p keypair from a given private key0C`Derive a Libp2p Peer ID from a given private key055555555555555CdExternal event stream for communication with the \xe2\x80\xa6CmSender to send external events this task generates to the \xe2\x80\xa6CkGarbage collect tasks for epochs older than the highest \xe2\x80\xa6DgFunction with signature <code>getOperationState(bytes32)</code> and \xe2\x80\xa6000BhRequests a builder URL from orchestratorCkget_default_node_type returns the current public facing \xe2\x80\xa6CmGet the VID share from consensus storage, or calculate it \xe2\x80\xa6CdGet the state of the requested <code>account</code>.AnGet the Number of TransactionsCkControls how many times we will allow a peer to request \xe2\x80\xa6000CiThe HotShot Query Service is a minimal, generic query \xe2\x80\xa6Claccess to the internal event stream, in case we need to, \xe2\x80\xa600CiSender to send internal events this task generates to \xe2\x80\xa6CjUse this storage as a state catchup backend, if supported.CcContainer type for the return parameters of the \xe2\x80\xa6000AhHelper function for test00BmThe number of past heartbeats to gossip aboutCcNumber of past heartbeats to gossip about on Libp2pCfThe number of past heartbeats to remember the full \xe2\x80\xa6D`Number of heartbeats to keep in the Libp2p <code>memcache</code>BeLoad the proposals saved by consensusCjCreates a set of indices into the da_stake_table which \xe2\x80\xa6Chpassword to have the orchestrator start the network, \xe2\x80\xa600AjPort to run the server on.DkCreates a new call builder for the [<code>maxCommissionIncrease</code>] \xe2\x80\xa6CmThe maximum (global) number of incoming requests that can \xe2\x80\xa6CiThe endpoint to bind to for externalizing metrics (in \xe2\x80\xa60AkFunction with signature \xe2\x80\xa600000ChThe QC linking this leaf to its parent in the chain, \xe2\x80\xa6BkHelper function to get the proposal\xe2\x80\x99s \xe2\x80\xa61Clcertificate that the proposal is chaining from formed by \xe2\x80\xa600CkThe last block for which the old version will be in effect.4444BlThe main loop for sending outbound messages.CgGets the parent leaf and state from the parent of a \xe2\x80\xa6Amthe previous state commitmentCmLast n seen messages from the primary network (to prevent \xe2\x80\xa6DjThe broker-facing endpoint in <code>IP:port</code> form to bind to for \xe2\x80\xa6CdTable for the in-progress proposal dependency tasks.0CkRandomized committees, filled when we receive the DrbResult0CmA helper function to read a length-delimited message from \xe2\x80\xa6<<<<<DiFunction with signature <code>renounceOwnership()</code> and selector \xe2\x80\xa60000000000000000000000000000000000BbThe maximum response size in bytes000AnMaximum response size in bytesCmMessage other participants with a serialized message from \xe2\x80\xa6DfFunction with signature <code>setBlocksPerEpoch(uint64)</code> and \xe2\x80\xa600000AkFunction with signature \xe2\x80\xa600000000DkCreates a new call builder for the [<code>setPermissionedProver</code>] \xe2\x80\xa600000000CcContainer type for the return parameters of the \xe2\x80\xa600000000Cg(Aggregated) proof of evaluation at challenge point \xe2\x80\xa600BfSplit quotient polynomial commitments.00CnGet a Membership for a given Epoch, which is guaranteed to \xe2\x80\xa6DfFunction with signature <code>supportsInterface(bytes4)</code> and \xe2\x80\xa600000000CiConvert query data to reward claim input for contract \xe2\x80\xa6Cmwhether or not to check that we have threshold amounts of \xe2\x80\xa6DgFunction with signature <code>transferOwnership(address)</code> and \xe2\x80\xa60000000000000000000000000000000000Cktwo static (round robin) committees for even and odd epochsEdReturn the largest <code>$T</code> value that can fit into <code>byte_len</code> \xe2\x80\xa6DkCreates a new call builder for the [<code>updateConsensusKeysV2</code>] \xe2\x80\xa6DkCreates a new call builder for the [<code>updateEpochStartBlock</code>] \xe2\x80\xa600000BdAdd a new entry to the da_certs map.CiUpdate the saved payloads with a new encoded transaction.CnValidate that the proposal\xe2\x80\x99s block height is one greater \xe2\x80\xa6DeThe <code>ChainConfig</code> of proposal must be equal to the one \xe2\x80\xa6DgValidates proposals <code>ChainConfig</code> against expectation by \xe2\x80\xa6DcThe proposal Header::l1_finalized must be <code>Some</code> and \xe2\x80\xa6Ciboxed closure used to validate the resulting transactionsChfunction used to validate the number of transactions \xe2\x80\xa6Chsend messages with vid shares to its recipients blockingBjThe time it took to calculate the disperseClThis implements commit for all the types which contain a \xe2\x80\xa6DkCreates a new call builder for the [<code>votingStakeTableState</code>] \xe2\x80\xa600000CkWait for a signal from the orchestrator before starting \xe2\x80\xa6CfAn orchestrator to wait for before starting consensus.CmSet the number of items to process at a time when loading \xe2\x80\xa6ClSet the multiplier for exponential backoff when retrying \xe2\x80\xa6CkA helper function to write a length-prefixed value to a \xe2\x80\xa6CnThe timeout for the authentication handshake. This is used \xe2\x80\xa6ClAvailabilityConnection is a simple short-hand type alias \xe2\x80\xa6BoAn interface for querying a HotShot blockchain.0DiCustom error with signature <code>BN254PairingProdFailed()</code> and \xe2\x80\xa60000000000BdPossible builder validation failures0AhEvent with signature \xe2\x80\xa600EfA thin wrapper around <code>RwLockReadGuard</code> for <code>Consensus</code> that \xe2\x80\xa6DjFunction with signature <code>DEFAULT_ADMIN_ROLE()</code> and selector \xe2\x80\xa600000000AcA DAC is validated.ClImplements a byzantine behaviour which aims at splitting \xe2\x80\xa6ClNumber of connections to a single peer before logging an \xe2\x80\xa6ChBroadcast a quorum vote to form an eQC; emitted by a \xe2\x80\xa6AaStake table stateCgGetBlockSummariesError represents an error that has \xe2\x80\xa60Dh<code>HandleQuorumEventError</code> represents the internal class of \xe2\x80\xa6CjType alias that connects to providers with recommended \xe2\x80\xa6BaDRB seed input for epoch 1 and 2.BgA <code>IPlonkVerifier</code> instance.00000000000000000DiCustom error with signature <code>InvalidMaxStateHistory()</code> and \xe2\x80\xa60000000000000000000ChLeader is in a Prepare phase and is waiting for a HighQcCnLeafAndBlockPairStream is a trait that represents a stream \xe2\x80\xa6DdContainer for all the <code>LightClientV2Mock</code> function calls.00DdContainer for all the <code>LightClientV3Mock</code> function calls.00DiCustom error with signature <code>MissingEpochRootUpdate()</code> and \xe2\x80\xa60000000000000CiHelper which allows producing random numbers within a \xe2\x80\xa6BoReturn type for <code>NsTable::validate</code>.0B`A signed request for a proposal.DbContainer for all the <code>SafeExitTimelock</code> custom errors.0CkContainer for all the <code>SafeExitTimelock</code> events.0BjTracks the stake table info for each epochCjDefault values for the upgrade constants to be used in \xe2\x80\xa6DnBracketed types, e.g. [A, B, <code>C&lt;D&gt;</code>] These types can have \xe2\x80\xa6BkThe target total stake to scale to for VID.DiCustom error with signature <code>ValidatorAlreadyExited()</code> and \xe2\x80\xa60000CmA helper struct to hold the disperse data and the time it \xe2\x80\xa6DkReceive a <code>ViewSyncCommitVote</code> from the network; received by \xe2\x80\xa6DiSend a <code>ViewSyncCommitVote</code> from the network; emitted by a \xe2\x80\xa6B`Data used for a Pre Commit vote.BoAlias for View Sync Pre Commit vote accumulatorBhMessage with a view sync pre-commit voteBfView Sync Pre Commit Vote 2 type aliasDiCustom error with signature <code>ZeroLightClientAddress()</code> and \xe2\x80\xa60DiCustom error with signature <code>ZeroRewardClaimAddress()</code> and \xe2\x80\xa60CkA handle to the receiving task. This will automatically \xe2\x80\xa6ChAdd the network task to handle events and send messages.DkAdds a <code>NetworkEventTaskState</code> task. Can be reimplemented to \xe2\x80\xa6CnAdvances to the next view by skipping the current view and \xe2\x80\xa6CjGet inclusive start and end bounds for a range to pull \xe2\x80\xa6CcTime taken by the storage to append Quorum ProposalCm[block_height_for_entry] returns the block height for the \xe2\x80\xa6BdRoot Commitment of Block Merkle TreeDjConvert range bounds to a SQL <code>WHERE</code> clause constraining a \xe2\x80\xa6CkCalculate the vid disperse information from the payload \xe2\x80\xa600DhFunction with signature <code>claimValidatorExit(address)</code> and \xe2\x80\xa60000DhFunction with signature <code>commissionTracking(address)</code> and \xe2\x80\xa600CnCreate an sign an authentication message to be sent to the \xe2\x80\xa6DjFunction with signature <code>currentBlockNumber()</code> and selector \xe2\x80\xa60000000000000000000Cncalculate the new decided leaf chain based on the rules of \xe2\x80\xa6CdDefault DRB difficulty, set to 0 (intended to be \xe2\x80\xa60AmChannels to the delayed tasks0BiOption to deploy LightClient V1 and proxyBknumber of iterations in the DRB calculationC`Number of iterations for the DRB calculation \xe2\x80\xa6Bhnumber of iterations for DRB calculationBbBUILDER HS EVENTS CHANNEL CAPACITYCcContainer type for the return parameters of the \xe2\x80\xa60000Bipass in the views that we expect to fail.CjShould probably rename this to \xe2\x80\x9cexternal\xe2\x80\x9d or somethingDiConstruct a <code>MessageKind</code> from <code>SequencingMessage</code>.DjNeed a sync version of <code>BlockPayload::from_transactions</code> in \xe2\x80\xa6CbGenerate events based on persisted decided leaves.CkComputes replica stats it generates the time difference \xe2\x80\xa6DkCreates a new call builder for the [<code>genesisStakeTableState</code>]\xe2\x80\xa600000000EfGet fee info for each <code>Deposit</code> occurring between <code>prev</code> and \xe2\x80\xa6AjGet the light client stateDf<code>get_transaction_detail</code> is a method that retrieves the \xe2\x80\xa600Cgevent handler for client events currently supported \xe2\x80\xa6CmA helper function that handles quorum vote collection for \xe2\x80\xa6Cmtask to propagate messages to handlers terminates on shut \xe2\x80\xa6Cghandle_received_voters is a function that processes \xe2\x80\xa6AkFunction with signature \xe2\x80\xa6000BdExpiring txs to be garbage collectedDjFunction with signature <code>initializedAtBlock()</code> and selector \xe2\x80\xa60000DhFunction with signature <code>isOperationPending(bytes32)</code> and \xe2\x80\xa6000CcContainer type for the return parameters of the \xe2\x80\xa6000CjList of known node\xe2\x80\x99s public keys and stake value for \xe2\x80\xa6BmThe known nodes\xe2\x80\x99 public key and stake valueCjThe (optional) bootstrap node addresses for Libp2p. If \xe2\x80\xa6CmA comma-separated list of Libp2p multiaddresses to use as \xe2\x80\xa6CnLoad the highest view saved with <code>save_voted_view</code>.55CnThe maximum (global) number of incoming responses that can \xe2\x80\xa6BgThe maximum latency of the transactions0AmMemberships used by consensus00BaMembership for Quorum Certs/votesBbMembership for Quorum certs/votes.ClMembership for the DA committee and quorum committee. We \xe2\x80\xa6AiMembership for the quorumAcnetwork memberships1114BbMembership (Used here only for DA)556DeUpdate a <code>NetworkConfig</code> that may have originally been \xe2\x80\xa6??BgThe minimum latency of the transactions0CmThe new locked view obtained from a 2 chain starting from \xe2\x80\xa6ChThe first block for which the new version will be in \xe2\x80\xa6BcGet a membership for the next epochCmReturns epoch-aware stake table state for the next block. \xe2\x80\xa60AlNext epoch stake table state0AjThe next stake table state0DkCreates a new call builder for the [<code>onERC1155BatchReceived</code>]\xe2\x80\xa60CcContainer type for the return parameters of the \xe2\x80\xa6000BcThe executor(s) of the ops timelockBcThe proposer(s) of the ops timelockCnReturn a slice reference to the payload commitment. Should \xe2\x80\xa6CiReturn a reference to the internal payload VID commitmentDjFunction with signature <code>permissionedProver()</code> and selector \xe2\x80\xa60000000000000000000Bkpass in the views that may or may not fail.BmRegisters a builder URL with the orchestratorCkprocess_client_message is a function that processes the \xe2\x80\xa6BjRead leader stats from CSV into a BTreeMapDcAssociates the given <code>BuilderStateId</code> with the given \xe2\x80\xa6Dfrepublication interval in DHT, must be much less than <code>ttl</code>00000CnThe time to wait (per request) between sending out batches \xe2\x80\xa6BjThe function used to validate the responseCjConstruct a tide disco app that mocks the builder API 0.1.ChRun an instance of the HotShot Query service with no \xe2\x80\xa6AjRun the service by itself.B`Send a message to all recipientsChWhether we have already sent a view change event for \xe2\x80\xa6DkCreates a new call builder for the [<code>stateHistoryFirstIndex</code>]\xe2\x80\xa600000000BjURL of the Light Client State Relay ServerBoaccumulator for light client state update votesCksubmit the latest finalized state along with a proof to \xe2\x80\xa600CjThe timestamp of when the request was sent (in seconds \xe2\x80\xa6CgSplit a VID share proposal into a proposal for each \xe2\x80\xa600CiThe total number of permits that are currently being held0ClGet the total number of permits that are currently being \xe2\x80\xa61Aonumber of transactions per viewBjNumber of transactions submitted per round11ChFetch the chain config without retrying on transient \xe2\x80\xa6E`Tries to convert <code>self</code> into <code>NonEmptyIterator</code>. Calls \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa600DkCreates a new call builder for the [<code>updateExitEscrowPeriod</code>]\xe2\x80\xa6111111111111111111111111111111111BbOption to upgrade to StakeTable V2ChUpgrade the stake table proxy from V1 to V2, or patch V2Ckvalidate signature over sequencing fee information with \xe2\x80\xa6CeVerify a namespace proof against a namespaced VID \xe2\x80\xa60CmThe weight of \xe2\x80\x9cquery fee state\xe2\x80\x9d actions in the random \xe2\x80\xa6CmThe weight of \xe2\x80\x9cquery namespace\xe2\x80\x9d actions in the random \xe2\x80\xa6CjAdds a delay between chunk fetches during proactive scans.CjSet the offset (denominated in minor scans) before the \xe2\x80\xa6CnA helper function to write a length-delimited message to a \xe2\x80\xa6DjCustom error with signature <code>CommissionUpdateTooSoon()</code> and \xe2\x80\xa600CcPruning parameters for ephemeral consensus storage.EgA thin wrapper around <code>RwLockWriteGuard</code> for <code>Consensus</code> that \xe2\x80\xa6BfInterval at which to store the resultsClThread-safe ref counted lock to a map of channels to the \xe2\x80\xa6CkA quorum vote for the epoch root has been received from \xe2\x80\xa6CmSend a epoch root quorum vote to the next leader; emitted \xe2\x80\xa6DjCustom error with signature <code>ExitEscrowPeriodInvalid()</code> and \xe2\x80\xa60000DiEvent with signature <code>ExitEscrowPeriodUpdated(uint64)</code> and \xe2\x80\xa600CkExplorerSummaryResponse is a struct that represents the \xe2\x80\xa6CfA message destined for external listeners was received000CfMessages related to both validating and sequencing \xe2\x80\xa6AdA light client stateChGetExplorerSummaryError represents an error that has \xe2\x80\xa60BhA <code>LightClientMock</code> instance.00DcContainer for all the <code>LightClientV2Mock</code> custom errors.00ClContainer for all the <code>LightClientV2Mock</code> events.00DcContainer for all the <code>LightClientV3Mock</code> custom errors.00ClContainer for all the <code>LightClientV3Mock</code> events.00Anthe network message task stateCnA proof of incorrect encoding for a namespace. It consists \xe2\x80\xa6DeContainer for all the <code>OwnableUpgradeable</code> function calls.0BaMetrics for the persistence layerBhA <code>PlonkVerifierV2</code> instance.0BhA <code>PlonkVerifierV3</code> instance.0BnA replica has responded with a valid proposal.BePossible proposal validation failures0CmTrait for validating a QC built from different signatures \xe2\x80\xa6BgThe state for the quorum proposal task.CnA quorum proposal with the given parent leaf is validated. \xe2\x80\xa6BgReplica is waiting for a commit messageBgReplica is waiting for a decide messageDhA concrete type wrapper around <code>RequestResponse</code>. We need \xe2\x80\xa6DgCreates a new event filter for the <code>RoleAdminChanged</code> event.000Cndescription of the spinning task (used to build a spinning \xe2\x80\xa6Chfiller struct to implement node type and allow us to \xe2\x80\xa6CcGet jf_plonk::Transcript::append_vk_and_pub_input()BkAlias for View Sync Commit vote accumulatorBaDescription for a view sync task.CnTask state for collecting votes of one type and emitting a \xe2\x80\xa6CbAdds the <code>NetworkEventTaskState</code> tasks.DhAdds the <code>NetworkEventTaskState</code> tasks possibly modifying \xe2\x80\xa6Dh<code>allow_empty_block_until</code> is a variable that dictates the \xe2\x80\xa6BcAdd a proposal we sent to the storeBjInternal function to build a dummy circuit00CiReturns true if we got the data we wanted, a shutdown \xe2\x80\xa6Agcombined network config00AkCreate an event dependency.AjCreate an event dependencyCjCreates a task that will request a VID share from a DA \xe2\x80\xa6CkGeneric function for spawning a vote task.  Returns the \xe2\x80\xa6Bhthe default metadata for multiple roundsDkFunction with signature <code>deregisterValidator()</code> and selector \xe2\x80\xa60000ClParse a Libp2p Multiaddr from a string. The input string \xe2\x80\xa60CeDistributes the block reward for a given block heightCmCallback function to select a DRB difficulty based on the \xe2\x80\xa6CmReturns an epoch number given a block number and an epoch \xe2\x80\xa6CmHACK so we can know the types when running tests\xe2\x80\xa6 there \xe2\x80\xa6ChGet the sender side of the external event stream for \xe2\x80\xa6CmGet the dependencies needed to apply the STF to the given \xe2\x80\xa6ClThe number of fixed_leader_for_gpuvid when we enable the \xe2\x80\xa6ClNumber of fixed leaders for GPU VID, normally it will be \xe2\x80\xa6BcNumber of fixed leaders for GPU VIDDkturn a description of a test (e.g. a <code>TestDescription</code>) into \xe2\x80\xa6CcContainer type for the return parameters of the \xe2\x80\xa6000ClGet the config from the orchestrator. If the identity is \xe2\x80\xa6CkGet all the recipients that the specific request should \xe2\x80\xa6CkGet the stake table for the current epoch and return it \xe2\x80\xa6CiGet the stake table for the current epoch if not providedBeGet a state certificate for an epoch.ClGet the stored VID common metadata for a given block, if \xe2\x80\xa60CkThe size of the global memory pool. This is the maximum \xe2\x80\xa60BkHandle a <code>QuorumVoteRecv</code> event.AoInitial delay in each heartbeat000BjSet the maximum idle time of a connection.BoThe maximum idle time of a database connection.CfCount of messages that are in-flight (send but not \xe2\x80\xa6BeGet the number of messages in-flight.CeThe PushCDN does not support in-flight message counts1DjApproximate an <code>Instant</code> to the number of seconds since the \xe2\x80\xa6ChGet the sender side of the internal event stream for \xe2\x80\xa6ChThe latest state signatures bundle for LCV1 light clientChThe latest state signatures bundle for LCV2 light clientChThe latest state signatures bundle for LCV3 light clientCjThe path from previous versions where there was only a \xe2\x80\xa6CiThe maximum number of IHAVE messages to accept from a \xe2\x80\xa6CiThe maximum number of messages to include in a Libp2p \xe2\x80\xa6CfLoads reward accounts for new reward merkle tree (V4).CgAddress for the multisig wallet that will be the pauserCcContainer type for the return parameters of the \xe2\x80\xa600000AkFunction with signature \xe2\x80\xa60000000000000000000000000000000000CnThe new decided view obtained from a 3 chain starting from \xe2\x80\xa6CjMoves the generator to the next view by referencing an \xe2\x80\xa63333BlSpawned-from references to the parent block.Anprocessing the quorum proposalCcTime between view change and proposal received (ms)BjTime from proposal creation to decide timeClMaximum block size as defined by protocol. We\xe2\x80\x99ll never \xe2\x80\xa6BkRead replica stats from CSV into a BTreeMap9999988899999999999999999999999999999999999BnConfiguration for <code>RequestResponse</code>00000BkThe sender to the request-response protocolBnRequire certain namespaces to be authenticatedCm[resolve_path_for_height] resolves the path for the given \xe2\x80\xa6CgLast n seen messages from the secondary network (to \xe2\x80\xa6CiDelay before sending through the secondary network in \xe2\x80\xa6???????????????DiFunction with signature <code>setHotShotDownSince(uint256)</code> and \xe2\x80\xa6")