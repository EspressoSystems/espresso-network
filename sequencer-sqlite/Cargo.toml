# As a workaround for feature unification by cargo this separate crate that is
# not part of the workspace that allows us to compile a sequencer binary without
# the embedded-db feature turned on.
[package]
name = "sequencer-sqlite"
version = "0.1.0"
edition = "2021"

[features]
fee = ["sequencer/fee"]
pos = ["sequencer/pos"]
default = ["embedded-db", "fee", "pos"]
sqlite-unbundled = ["sequencer/sqlite-unbundled"]
embedded-db = ["sequencer/embedded-db"]

[dependencies]
sequencer = { path = "../sequencer" }
tokio = { version = "1", default-features = false, features = [
    "rt-multi-thread",
    "macros",
    "parking_lot",
    "sync",
] }
anyhow = "^1.0"

[profile.dev]
# Probably the least demanding setting in terms of compilation time and memory
# that still provide tracebacks with line numbers.
strip = "none"
debug = "line-tables-only"

[profile.dev-debug]
# This profile should allow connecting debuggers. Compiles more slowly and
# requires significantly more memory to compile.
inherits = "dev"
strip = "none"
debug = "full"

# Don't optimize the binaries in the workspace. Compilation of dependencies can be cached
# effectively on the CI because they rarely change, whereas the workspace code usually changes and
# workspace compilation artifacts are therefore not cached. However, require opt-level=1 to pass.
[profile.test]
opt-level = 1

[profile.test.package.sequencer]
opt-level = 0
[profile.test.package.hotshot-testing]
opt-level = 0
[profile.test.package.hotshot-state-prover]
opt-level = 3
[profile.test.package.sequencer-sqlite]
opt-level = 0

# Geared towards building our docker images for local development
# - Compile quickly
# - Optimized enough to run demo
# - Avoids huge binaries
[profile.test-docker]
inherits = "test"
strip = true
debug = "none"
