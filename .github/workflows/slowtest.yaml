name: Slow Test

on:
  push:
    branches:
      - main
      - release-*
    tags:
      # YYYYMMDD
      - "20[0-9][0-9][0-1][0-9][0-3][0-9]*"
  schedule:
    - cron: "0 0 * * 1"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'main')}}

# Build test binary with `testing` feature, which requires `hotshot_example` config
env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info,libp2p=off,node=error
  NEXTEST_PROFILE: slow

jobs:
  slow-tests-sqlite:
    runs-on: ubuntu-latest
    steps:
      # These tests need the `anvil` binary provided by foundry
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - uses: taiki-e/install-action@nextest
      - uses: rui314/setup-mold@v1

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Enable Rust Caching
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: v1-rust

      - name: Build slow test
        run: cargo nextest run --locked --workspace --features embedded-db --no-run
        timeout-minutes: 40

      - name: Run slow test
        run: cargo nextest run --locked --workspace --features embedded-db --verbose --no-fail-fast --nocapture
        timeout-minutes: 40

  slow-tests-postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - uses: taiki-e/install-action@nextest
      - uses: rui314/setup-mold@v1

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Enable Rust Caching
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: v1-rust

      - name: Build slow test
        run: cargo nextest run --locked --release --workspace --no-run
        timeout-minutes: 40

      - name: Run slow test
        run: cargo nextest run --locked --release --workspace --verbose --no-fail-fast --nocapture
        timeout-minutes: 40
