name: Build

on:
  push:
    branches:
      - main
      - release-*
      - ma/ci-testing-ubuntu-latest
    tags:
      # YYYYMMDD
      - "20[0-9][0-9][0-1][0-9][0-3][0-9]*"
  pull_request:
    branches:
  workflow_dispatch:

env:
  RUST_LOG: info,libp2p=off

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Check /proc/cpuinfo
        run: cat /proc/cpuinfo

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: styfle/cancel-workflow-action@0.11.0
        name: Cancel Outdated Builds
        with:
          all_but_latest: true
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        name: Checkout Repository
        with:
          submodules: true
          token: ${{ secrets.ORG_GITHUB_PAT }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Configure Git
        run: |
          git config --global url."https://ancient123:${{ secrets.ORG_GITHUB_PAT }}@github.com".insteadOf git://github.com
          git config --global url."https://ancient123:${{ secrets.ORG_GITHUB_PAT }}@github.com".insteadOf ssh://git@github.com


      - name: Login to Github Container Repo
        uses: docker/login-action@v2
        # if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull all docker compose images
        run: docker-compose -f docker-compose.yaml -f docker-compose-anvil.yaml -f permissionless-docker-compose.yaml pull

      - uses: Swatinem/rust-cache@v2
        name: Enable Rust Caching

      - name: Format Check
        run: cargo fmt -- --check

      - uses: actions-rs/clippy-check@v1
        name: Clippy
        with:
          token: ${{ github.token }}
          args: --workspace --all-features --all-targets -- -D warnings

      - name: Audit
        run: cargo audit --ignore RUSTSEC-2020-0159 --ignore RUSTSEC-2020-0071 --ignore RUSTSEC-2022-0006 --ignore RUSTSEC-2022-0040

      - name: Build
        run: |
          cargo build --release --workspace

      - name: Test
        run: |
          cargo test --release --workspace --all-features --no-run
          cargo test --release --workspace --all-features --verbose -- -Zunstable-options --report-time --test-threads 1 --nocapture
        timeout-minutes: 30
