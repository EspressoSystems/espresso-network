name: Build

on:
  push:
    branches:
      - main
      - release-*
    tags:
      # YYYYMMDD
      - "20[0-9][0-9][0-1][0-9][0-3][0-9]*"
  schedule:
    - cron: "0 0 * * 1"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RUSTFLAGS: '--cfg async_executor_impl="async-std" --cfg async_channel_impl="async-std"'
  RUST_LOG: info,libp2p=off,node=error

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fix submodule permissions check
        run: |
          git config --global --add safe.directory '*'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install just command runner
        run: |
          sudo snap install --edge --classic just
          just --version

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Enable Rust Caching
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: v1-rust

      - name: Build
        # Build in release without `testing` feature, this should work without `hotshot_example` config.
        run: |
          cargo build --release --workspace

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu-services
          path: |
            target/release/orchestrator
            target/release/web-server
            target/release/state-relay-server
            target/release/state-prover
            target/release/gen-demo-contract
            target/release/sequencer
            target/release/cli
            target/release/commitment-task
            target/release/submit-transactions
            target/release/reset-storage

  build-arm:
    runs-on: [self-hosted, ARM64]
    container:
      image: ghcr.io/espressosystems/devops-rust:stable
    steps:
      - name: Fix submodule permissions check
        run: |
          git config --global --add safe.directory '*'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Enable Rust Caching
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build --release --workspace

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-unknown-linux-gnu-services
          path: |
            target/release/orchestrator
            target/release/web-server
            target/release/state-relay-server
            target/release/state-prover
            target/release/gen-demo-contract
            target/release/sequencer
            target/release/cli
            target/release/commitment-task
            target/release/submit-transactions
            target/release/reset-storage

  build-dockers:
    runs-on: ubuntu-latest
    needs: [build, build-arm]
    outputs:
      sequencer-tag: ${{ steps.sequencer.outputs.tags }}
      web-server-tag: ${{ steps.web-server.outputs.tags }}
      state-relay-server-tag: ${{ steps.state-relay-server.outputs.tags }}
      prover-service-tag: ${{ steps.prover-service.outputs.tags }}
      orchestrator-tag: ${{ steps.orchestrator.outputs.tags }}
      commitment-task-tag: ${{ steps.commitment-task.outputs.tags }}
      submit-transactions-tag: ${{ steps.submit-transactions.outputs.tags }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download executables AMD
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu-services
          path: target/amd64/release

      - name: Download executables ARM
        uses: actions/download-artifact@v3
        with:
          name: aarch64-unknown-linux-gnu-services
          path: target/arm64/release

      - name: Setup Docker BuildKit (buildx)
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Repo
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate sequencer docker metadata
        uses: docker/metadata-action@v5
        id: sequencer
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/sequencer

      - name: Generate web-server docker metadata
        uses: docker/metadata-action@v5
        id: web-server
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/web-server

      - name: Generate state-relay-server docker metadata
        uses: docker/metadata-action@v5
        id: state-relay-server
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/state-relay-server

      - name: Generate prover-service docker metadata
        uses: docker/metadata-action@v5
        id: prover-service
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/prover-service

      - name: Generate orchestrator docker metadata
        uses: docker/metadata-action@v5
        id: orchestrator
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/orchestrator

      - name: Generate commitment task docker metadata
        uses: docker/metadata-action@v5
        id: commitment-task
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/commitment-task

      - name: Generate submit-transactions docker metadata
        uses: docker/metadata-action@v5
        id: submit-transactions
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/submit-transactions

      - name: Generate example rollup metadata
        uses: docker/metadata-action@v5
        id: example-rollup
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/example-rollup

      - name: Build and push sequencer docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./docker/sequencer.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.sequencer.outputs.tags }}
          labels: ${{ steps.sequencer.outputs.labels }}

      - name: Build and push web-server docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./docker/web-server.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.web-server.outputs.tags }}
          labels: ${{ steps.web-server.outputs.labels }}

      - name: Build and push state-relay-server docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./docker/state-relay-server.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.state-relay-server.outputs.tags }}
          labels: ${{ steps.state-relay-server.outputs.labels }}

      - name: Build and push prover-service docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./docker/prover-service.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prover-service.outputs.tags }}
          labels: ${{ steps.prover-service.outputs.labels }}

      - name: Build and push orchestrator docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./docker/orchestrator.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.orchestrator.outputs.tags }}
          labels: ${{ steps.orchestrator.outputs.labels }}

      - name: Build and push commitment-task docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./docker/commitment-task.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.commitment-task.outputs.tags }}
          labels: ${{ steps.commitment-task.outputs.labels }}

      - name: Build and push submit-transactions docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./docker/submit-transactions.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.submit-transactions.outputs.tags }}
          labels: ${{ steps.submit-transactions.outputs.labels }}

  test-demo:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [build-dockers]
    steps:
      - name: Install just command runner
        run: |
          sudo snap install --edge --classic just
          just --version

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Pull docker images
        run: |
          docker pull ${{ needs.build-dockers.outputs.sequencer-tag }}
          docker pull ${{ needs.build-dockers.outputs.web-server-tag }}
          docker pull ${{ needs.build-dockers.outputs.state-relay-server-tag }}
          docker pull ${{ needs.build-dockers.outputs.prover-service-tag }}
          docker pull ${{ needs.build-dockers.outputs.orchestrator-tag }}
          docker pull ${{ needs.build-dockers.outputs.commitment-task-tag }}
          docker pull ${{ needs.build-dockers.outputs.submit-transactions-tag }}
      - name: Tag new docker images
        run: |
          docker tag ${{ needs.build-dockers.outputs.sequencer-tag }} ghcr.io/espressosystems/espresso-sequencer/sequencer:main
          docker tag ${{ needs.build-dockers.outputs.web-server-tag }} ghcr.io/espressosystems/espresso-sequencer/web-server:main
          docker tag ${{ needs.build-dockers.outputs.state-relay-server-tag }} ghcr.io/espressosystems/espresso-sequencer/state-relay-server:main
          docker tag ${{ needs.build-dockers.outputs.prover-service-tag }} ghcr.io/espressosystems/espresso-sequencer/prover-service:main
          docker tag ${{ needs.build-dockers.outputs.orchestrator-tag }} ghcr.io/espressosystems/espresso-sequencer/orchestrator:main
          docker tag ${{ needs.build-dockers.outputs.commitment-task-tag }} ghcr.io/espressosystems/espresso-sequencer/commitment-task:main
          docker tag ${{ needs.build-dockers.outputs.submit-transactions-tag }} ghcr.io/espressosystems/espresso-sequencer/submit-transactions:main

      - name: Start Demo
        run: just demo --wait
      - name: Test Demo
        run: scripts/smoke-test-demo
      - name: Stop Demo
        run: just down -v
