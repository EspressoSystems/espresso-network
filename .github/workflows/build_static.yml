name: Static Build

on:
  push:
    branches:
      - main
      - release-*
    tags:
      # YYYYMMDD
      - "20[0-9][0-9][0-1][0-9][0-3][0-9]*"
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  static-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v20
        with:
          name: espresso-systems-private
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Cache cargo
        uses: actions/cache@v3.3.1
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target
          key: espresso-sequencer-static-v3-${{ hashFiles('Cargo.lock') }}

      - name: Fix Git Security Issue
        run: git config --global --add safe.directory "$PWD"

      - name: Configure Git
        run: |
          git config --global url."https://ancient123:${{ secrets.ORG_GITHUB_PAT }}@github.com".insteadOf git://github.com
          git config --global url."https://ancient123:${{ secrets.ORG_GITHUB_PAT }}@github.com".insteadOf ssh://git@github.com

      - name: Compile all executables
        timeout-minutes: 60
        run: |
          nix develop .#staticShell --option sandbox relaxed -c cargo build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-musl-services
          path: |
            target/x86_64-unknown-linux-musl/release/cdn-server
            target/x86_64-unknown-linux-musl/release/sequencer
            target/x86_64-unknown-linux-musl/release/hermez-adaptor

  static-dockers:
    runs-on: ubuntu-latest
    needs: static-build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download executables
        uses: actions/download-artifact@v3
        with:
          name: x86_64-unknown-linux-musl-services
          path: target/x86_64-unknown-linux-musl/release

      - name: Setup Docker BuildKit (buildx)
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Repo
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate sequencer docker metadata
        uses: docker/metadata-action@v4
        id: sequencer
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/sequencer

      - name: Generate cdn-server docker metadata
        uses: docker/metadata-action@v4
        id: cdn-server
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/cdn-server

      - name: Generate hermez-adaptor docker metadata
        uses: docker/metadata-action@v4
        id: hermez-adaptor
        with:
          images: ghcr.io/espressosystems/espresso-sequencer/hermez-adaptor

      - name: Build and push sequencer docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/sequencer.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.sequencer.outputs.tags }}
          labels: ${{ steps.sequencer.outputs.labels }}

      - name: Build and push cdn-server docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/cdn-server.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.cdn-server.outputs.tags }}
          labels: ${{ steps.cdn-server.outputs.labels }}

      - name: Build and push hermez-adaptor docker
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./docker/hermez-adaptor.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.hermez-adaptor.outputs.tags }}
          labels: ${{ steps.hermez-adaptor.outputs.labels }}
