searchState.loadedDescShard("permissioned_builder", 0, "Port to run the builder server on.\nThe number of views to buffer before a builder garbage …\nThe socket address of the HotShot CDN’s main entry point …\nIndex of a funded account derived from eth-mnemonic.\nMnemonic phrase for builder account.\nBUILDER HS EVENTS CHANNEL CAPACITY\nReturns the argument unchanged.\nPath to TOML file containing genesis state.\nUrl a sequencer can use to stream hotshot events\nCalls <code>U::from(self)</code>.\nWhether or not we are a DA node.\nPath to file containing private keys.\nUrl we will use for RPC communication with L1.\nThe address we advertise to other nodes as being a Libp2p …\nThe address to bind to for Libp2p (in <code>host:port</code> form)\nA comma-separated list of Libp2p multiaddresses to use as …\nThe time period that Libp2p message hashes are stored in …\nTime to live for Libp2p fanout peers\nIf enabled newly created messages will always be sent to …\nHow many Libp2p peers we will emit gossip to at each …\nMinimum number of Libp2p peers to emit gossip to during a …\nHow many times we will allow a Libp2p peer to request the …\nInitial delay in each Libp2p heartbeat\nTime between each Libp2p heartbeat\nNumber of past heartbeats to gossip about on Libp2p\nNumber of heartbeats to keep in the Libp2p <code>memcache</code>\nTime to wait for a Libp2p message requested through IWANT …\nThe maximum number of messages to include in a Libp2p …\nThe maximum number of IHAVE messages to accept from a …\nThe maximum number of Libp2p messages we will process in a …\nThe maximum number of bytes we will send in a single …\nTarget number of peers for the Libp2p mesh network\nMaximum number of peers in the Libp2p mesh network before …\nMinimum number of peers in the Libp2p mesh network before …\nMinimum number of outbound Libp2p peers in the mesh …\nLibp2p published message ids time cache duration\nThe amount of time a builder can wait before timing out a …\nURL of the HotShot orchestrator.\nPort to run the builder server on.\nPrivate staking key.\nPrivate state signing key.\nPeer nodes use to fetch missing state\nURL of the Light Client State Relay Server\nBUILDER TRANSACTIONS CHANNEL CAPACITY\nBootstrapping View number\nThe amount of time to wait between each request to the …")