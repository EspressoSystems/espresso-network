#!/usr/bin/env bash
set -euxo pipefail

export ESPRESSO_SEQUENCER_POSTGRES_HOST=${ESPRESSO_SEQUENCER_POSTGRES_HOST:-localhost}
export ESPRESSO_SEQUENCER_POSTGRES_PORT=${ESPRESSO_SEQUENCER_POSTGRES_PORT:-5432}
export ESPRESSO_SEQUENCER_POSTGRES_USER=${ESPRESSO_SEQUENCER_POSTGRES_USER:-root}
export ESPRESSO_SEQUENCER_POSTGRES_PASSWORD=${ESPRESSO_SEQUENCER_POSTGRES_PASSWORD:-password}

export POSTGRES_USER=$ESPRESSO_SEQUENCER_POSTGRES_USER
export POSTGRES_PASSWORD=$ESPRESSO_SEQUENCER_POSTGRES_PASSWORD

export RUST_LOG=${RUST_LOG:-info}

# Trap SIGTERM and SIGINT signals and send them to the process group
trap "trap - SIGTERM && kill -- -$$" SIGINT SIGTERM EXIT

# Start postgres in the background
docker-entrypoint.sh postgres &

# Wait (twice) for postgres to be ready
# Postgres can be falsely "ready" once before running init scripts.
until pg_isready && sleep 1 && pg_isready; do
  echo "Waiting for postgres..."
  sleep 1
done

# Start the dev node
espresso-dev-node &
wait
