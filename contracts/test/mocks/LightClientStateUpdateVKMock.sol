// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../../src/interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVKMock {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 65536)
            // num of public inputs
            mstore(add(vk, 0x20), 7)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                20097059574661637961898421615397970677080600719585148631612262326641485909996
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                17428952973016684199041498369701658834858463188559538950183863023533523128416
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                9531873204166991159972821636771742762584884940194691444714652202912078710933
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                15745574112949696881716014011864530796470114431882946532053397185950353807535
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                5735939552060531100354525378365595685042337132111474851120090315781213124044
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                3861698408430319910146302681640001219814009255633439424830778522482352381196
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                11782378560759617673864377336490975880848723394899969178686950476423492011682
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                5781277081783822835980063812289943121348560089149871159627492446054585490296
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                11559350936407725096849932079109305652372129650206521027237324702003390132314
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                2467937279634788566345977838921883854586040847497865061781174184481291327256
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                6252248093534554617596755089032083807811246413300589137450835124553533925059
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                16858875916567906259018673245621701126111321557187207221882374870323344913490
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                19811773151783276358517016566019750900659286503812652243731269871754271723966
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                10301312218809309058435713675393034733299465371887986657146802456058002731626
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                9654159281657564552876530561690632545882502490915377762167891400310246306593
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                8859503393351359456129079613854237773848596582817474287536555600386137149114
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                5832238752753204304336055700476225440102431409334482512006153255521760095714
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                682312390256362949541690517013712784633936776672540974981012959783342995826
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                20051382770960186123197590461026574125537907724455135364318208524556577748620
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                11877787089593132537112029204041880368936905663446247825095016967834872721387
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                9451431985778984484306839268328800514004729545011048481163245308305934387404
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                4185128741038658636239756783416558622873370627207831093984986775370717970663
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                21495972126028122368284211150580393390800311857536004479383434222192140806437
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                19974529151787263740645123048261094072602537368173021303734465119409210035562
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                9262777451272544837184842204408789015359501122799744094161558440086342044903
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                15170349226976980328782413119163642028417716226135305526591052914989676981672
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                15263197636148753744639989420548135161350640743770182264232390507861855193351
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                11539504362963302071641523989274970626674373633220679520217920708116159486409
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                11267036805675616616056362302297923413070517668900414970831413321570405257538
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                16721698148168307700513802972565539637981299618239069800977132635487936796216
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                15075955266029904684463986130702536692482384784613910949180746608837748414119
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                9494287967577224042046559987900642101560871135302993582982074224249412907939
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                3912126240716317034467680989973429878298919311375662563287280713421055981147
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                11565991786657098247092444242755201085956217239153417463095978972146422173212
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                2873697514161590725171882335508189877262357274195874893652688257078646308754
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                20084289371411344955713896623639727238976805718239046390588254320640709239726
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
