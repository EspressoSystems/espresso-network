// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../../src/interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVKMock {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 65536)
            // num of public inputs
            mstore(add(vk, 0x20), 7)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                8780639620157991547891148805919878543964392540464064685187426147622550545653
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                20329703559355367581046659947888846422105739175065087594596260710114283196743
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                3907156025477632431542339436132810635869646020372000361558947676433399300657
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                15166891789069460999276105114477792814715896454647328408547057284442121910762
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                16117338641398770111163510775377619339331602936228198086195746724908247912987
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                16740309672564743380534217813520152592316530015569211886810037896829102066193
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                12538505105272464906507307944934155800358883434325050138580706870389223251955
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                17087689768744441683235009923517716656172653026276602270807480035069491545755
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                8454021317091853741146103272343912504762747954666706409528335183296787067868
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                11016751689921538830297286304051364340305496719162309364532472841887958117447
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                15359607559713515060277507574080941419834828987039079827302572287698309504008
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                15591847269596226482414296106962647755691103548771963256694477068178857435064
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                3827124881709489188270137163975264995006696000603327038290589744450697834719
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                4318865171469939783910279249735693836790096703031897567022798858747771698987
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                9913200330357548509998155437749548539621758310017341493550757808590136100654
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                6814632498217774714123393660227395994377471940775558778851220352696329643472
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                3883191076505672454480590601847891400492344398783540423987354164376670931632
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                20839825466680406969762141617626050744698350991971572530895764099779245352021
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                21406269564986737709993597423928286134977055796815775729833412276225603000600
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                12772252332970283309865491720722288577802768585231460494194809914065609893146
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                8748719790723850706708743284282732016988453984542999687132033580365028484176
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                17544334478919255774333811720072760425376034355353547228796576661540616867477
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                5779426557055774294678280308002088559229695119399763216284786861647635461700
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                7548438953482540110543430573498065044386548194974128437338762456047175631187
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                11552344496521430760886457728705966546513418701688663336162205885875626038275
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                16226018892294013424782485757258297775919919344548162680620984645491361418522
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                15429474373549821133939594736546140618918804365845388482696898746435810291934
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                15886779329816613995086957445881288473375121142391270808048598119106627277422
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                20182835776034348669368110619035658941195975223063135746846432037544892224044
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                15361728677111385770832136356063861049884090898287914753487082190229852997688
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                14511917864647423306209946980814936857561106729956548326825273767665603910950
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                14658715671477677285308444061546079655758155254745238831866071967401023436805
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                14937219945828094206790376190430054771766629914027056408189669916922811947303
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                15151784422100780280828965688541219091568989137314100641534271437316997647143
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                12945427393138592243089853673971037111092830343359970781209689043897181434196
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                17314669060147862110721119367910762821785110567097188274415984256244098310506
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
