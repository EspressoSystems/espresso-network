// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVKV2 {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 1048576)
            // num of public inputs
            mstore(add(vk, 0x20), 11)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                3776219586658453642431861519594070215137711225167202484216539193856418826827
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                1787075874573797605742831564736732729437413228132882315233686591801830468413
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                11871536471009997137305941244276359554773320348412899912436818743986339143727
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                13307243132954817720215331069223082774031737581972764204745805522579864201754
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                5458235819716416168178717103850485688161814698284298401260072129929073606687
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                21215417556629538009886676512469336350268049131044303528470396805947861410754
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                12285688554767352576287678947816650024812283776449655058935739766851617534691
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                4690047442473186776690888462927859408827029360469062199315589963600095209616
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                20939838605424384445403262403612091586352897829242957039049278755816218577520
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                1259881789182377736525079762175743585175032289861456578577203487484628553963
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                4188074533295108615589972128088889630169148221306216609589161251596531084581
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                5206853014246327435826242167254241915667619473796032643015298575239629926799
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                6457911399805974880441723931538569007486148438731943598630528075612126437117
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                9128141663492677952681511512399661054219359435662611392318677615010898858203
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                8478967297271279408815787852084898352302686304520507249202993647158385341553
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                3350955667652722686470969672919483813479546245996355613842724773701342595319
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                12761861157345651760090257462816375387684587507900433770529160860326754422781
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                14627253893220963538173154868937561226347936630174404700836319753549557776592
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                15954979198798532173116554654317607659974933276384939140758455094473955108730
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                10696480428666869418422195037228241657835006307404453874355655606175236308421
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                6269204680496950235283652558010910927340433649025465509379244957085170831621
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                15947113159434587703715810777123999482561031989142195437109190281993923609816
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                6207076788758423238872234742473855512683959231419323411789197229304912708133
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                14981418632439277164848021500063754196707110917103846683778206264275877724454
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                7420095002824941066596750996200981167086500626373783617899214172062282331605
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                8448463260435093408903085752562123749251742984843036170718496734088004556467
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                19515612601410499737210558529448073503529177118296159266451344114666485500705
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                18279017591157368417903819985474550089842551170877064397491747798616978643607
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                61387286927496778689098419724186617613193355761392656787385016343316067553
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                11432247311461755540891043660469233113791301909229954845926028228759783908768
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                17149342765487917346143870993510630205841985386897858081503433461390130397610
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                13431707872948069176233033885356074369344418433718860748236529496902759669819
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                11302527893694438215396017396864761544233048888400735740412226895227909275663
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                13264089077426019837996110486224868904741787137864883338818260041651085737642
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                165865200433919930700760505105704541636094858382851265409009696089530731484
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                12543655519336243280638394506128005810568593846535321405194725591785022030553
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
