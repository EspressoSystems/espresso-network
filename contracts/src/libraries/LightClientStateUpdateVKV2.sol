// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVKV2 {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 1048576)
            // num of public inputs
            mstore(add(vk, 0x20), 11)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                11774584934277273560357310405401570616478989510520667565721927306917379064194
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                13420291450090878414704611206178642129380505190924577013356850217828446191685
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                10826635660272552284446168132651096794586297209684067790443503185284526313402
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                3922429630195149590896156593951185111644900809001246529940211451856017418727
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                10038929106026986927566121377717986224026814950721276588604392417859852782373
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                12227559910767376991051663710521265110630614076126923796594412101271798435106
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                11431032598739971839643365431788205715535435075220937906692290195327484007787
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                21135064588952187822912672376559591756174566780750068575313242085120345221461
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                6824839886864101487095674554405070978633484489425689687053493209039081861311
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                4776665246286450454825294422791872310804555686509221759454245508804915372329
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                18599059052825744064055731302987348433024604650691837126578072752530327229354
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                751134245627200132383352513036349507337477316527759657972955158160987341515
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                12912473415946881202621506854576871707269076749814785312155287442283090239181
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                9619631582280871310429117577372875554613932612681659304965502892008829352695
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                2868756962277400571977944712101168698176317073628443058905626911003222360927
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                21198492314330565580500503073573845898166952499659308908758330409049631649387
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                13633675181219244448811511929032855815348984727943502023051880156039258535213
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                8695841886291933074356546959576143850154665799702812678709300349387993834983
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                6808592832801282871660805340964784504632692785159837624400728731071926509594
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                8942006680828349488721527701353550195340188385018045420691621221867940343233
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                8798518898197906220927326323843146951186277911015952779518018925236199391571
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                21641036663931074676757822223169098930873923646748512499643795686968997166124
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                9222399775222217988561260590647078378191884123312201270225706850627359615132
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                5392228800801203450910647903437579173141622487975016357604554092651059748347
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                18241293083039287815775188480258618263461854837196450739284226850722420027054
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                19325673422053339318896533115278255001823611735471212201812979893230836978103
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                7873203130928905317105330962702222780539995877409028316349482743895961236285
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                19440664729813822534370484039856816067177325712436102210815804020448422791547
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                5154099388731468963862551067524667272179673672373640380706608343050199109630
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                17037960348291128457225897998971737951954303379105319902287717991273936049541
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                13629661856486108325046122438677853273736648672056371616696811430442428298027
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                15546391264159559720181446217602193062280725148081945799417677663762730491354
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                12631702576196605443276095475570439383042608017435043815485684779116541441340
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                8359375064915330842042511096636185906335706593321895869011237847988142482462
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                21235432152253924466845375318899054650263445760042027481602194305564492529393
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                21210922240740017967633732435111666621198877827117341045545907735202611236682
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
