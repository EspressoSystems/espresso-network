// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVK {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 1048576)
            // num of public inputs
            mstore(add(vk, 0x20), 7)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                14186923266748609747334395758451428501770254657877198100364326746443821949107
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                18415875782082493432769258949912372080094522463333781213671209286990547198651
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                19801194444031079406713537787034499712461605647794280697404116954729731947402
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                1836365708656486817079802404255258863669220551926480858434175472723366201498
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                11368309529319976734287510366838807918819730154591166612399400059053232575853
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                17920841312521734390620433951301184009402820802347778229132224808649304044833
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                19130909521396014682111836341558239992348093864388856608911963733121454944754
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                17962141873525451697717300802109533331608534065047461365848530459957646515113
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                8242716979045156272100970333721180985564102718768439845335999331381145866326
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                7245045927704649578715798118038781115500679999010540890410735494051734980635
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                6338271461009366981778224300384335351681054615917371916427664221952500849462
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                8005062316208202050923322434417816961521552555684173267969285194774602678929
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                16964332047172865624631610440983756932020411677024925818388027617218624339710
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                5468422531633960724392755084572777466521051405891422380072381600851476866170
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                16588911880791385725553505214331096409855613160787370343811468714931450904645
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                16784477760527843020436088198253441078947814009954160969505604976201017721665
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                13574736944185297183109801911422425394962408173429288295281448856274008743427
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                19510779622816325900103063942934407151673284220268095466129238498593564476614
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                5893988582503479149427951982081985210785773518760218817413130499892825740625
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                18180244430247586546512998378243041934532282939555789739745004419337066232638
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                6649397694196511533697972939372011819000443481929677684039046388672731191049
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                5059555832114097892003289719825510702401220492725809496875061427560666039993
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                10051003995850865005460008201273373703341039827977705328206840118592822455010
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                6737388378297660651838872570265508530633862151436164036043652905179335451060
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                15696090650909698522495556133593824623710232492363667454371148145494840265369
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                16662162287666561166223161392413695027941405053292277011699187424550763994898
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                18137433085034087473951817889222043040252743871123275353609641641794166266573
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                1621025537639844623243254662365095490695985123643965719013213206036101252263
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                5406260452885109063007148783680471169683974767829356475054603931841296810938
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                19473991958028884306785680725513151536194903819599512004645722997559366434647
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                3523502559212633456234728023314246812647266758307699171642715647710714512641
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                20023004331910229973931789573019917847658328199238602986852102201015574227513
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                12136412865002198438737398177040610570276264767448371917198549391164058957220
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                9517183422622949985866985810927234437512328672292307382190961735265699177491
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                10373224653762240837047842229331076770877661073945578110812225191719011603660
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                2118074009709424993322490030447282435834112212836950874880506402957261392352
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
