// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVK {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 1048576)
            // num of public inputs
            mstore(add(vk, 0x20), 7)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                1516200189509522185035081265237622810943500219185400907833155910411333059111
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                8698236449595287965367852177982891165973391131591496311427073829703383059218
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                19943931546405409621785647902789472338217950829178977935266294544429745428500
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                124616782910530575959675592313025959316705839946713244125247002289276644922
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                6469333035855126205709676593626555077404165468776626947561780618280793040119
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                16548770352377289349217903993132452582662602070081662316883422950174659403066
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                16466073891960764838630176133726257264987191705683690526094887258643196452953
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                16522245573402468300067536308662549785846985419486418202939403876692012297998
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                19142080331624812479893994377987596992434783652307106181705511526755453194492
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                19453932419320790979580079931078461668788789827955545046035849058631967858588
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                8647153467678805172938624899864510337509160961961374908364740184170842311009
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                11042281517765531189018203201753834370083525962182498130507122210310917030345
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                2370726940567884578133756561299666541664142200777612456463384529415487686707
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                15485044840626199317935685779457355363842455353773991186971182182681317603615
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                13134030888667075268308136193155354920470164195515062920745482409993494188852
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                13418733509120183051633305107116451390226936443244953818168856885525209867004
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                15843444023874243111769853450747595302303847880457032865489166163967092904920
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                21773855757462080397514864495240031948476760748930744708820467457082777825666
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                20399281031180407798366695719732538052896409401421849511098608747095311366759
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                1432645918833218835650027886836281553668868895597406740962589208592402053973
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                514721161966843886637546160737213764348758318100914859398807224913178279488
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                4342948747375026992687981033072587392556704629957655963389849975919836362215
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                8220813767228030241938676715633430294846162864035335663522997517365738317882
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                8766813302264707799579597649241453665044176976795210940640201757714924038318
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                17580020746823708640190671852539801245539471237524845388271225603139744415549
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                14605271334156064054331068089899864371199076419794629221342837054022822839644
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                14153336053593640935913937884631926085094299239844103037346718782010470961354
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                16236358924829936473750236747432795445700715963610235782257627022227549003122
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                14963227986738213311895314533479710333287954476776279495470158089809039367132
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                15347635473726734810473534953309736107330771255813499278315045708171394958324
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                13806243359283189621651959178571461846212227050006755787761275046097381973343
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                7814712102762293820592979889191958650337669930160492003680050769005463322252
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                12718334792953939248406661229198857552580248657383712677991664266340141513082
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                2123717415854991499184869164297727748793635995278235300432168878013414817448
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                9329815239249350564054796279918684492998181495857087961986831685658312230857
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                868847963421259838537119942449957132779261053468164730458437825239705325946
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
