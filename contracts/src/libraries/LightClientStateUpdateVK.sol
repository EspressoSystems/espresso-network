// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVK {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 1048576)
            // num of public inputs
            mstore(add(vk, 0x20), 8)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                14829590452951582429597937921803746951066352088554415416011470961765685672755
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                1640805128987262135097000798716519252415689101125171714241944191382225430588
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                18274068123557654431658802492586722727412966290987193881329212617379409092827
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                15262267645961173197854134224641529185383299058832029120242801083020131756400
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                3546893388503598029379371535595161595693832489221556391602992086886519831449
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                5372901058006419475432857030090030698039020632248561039251432764657711254637
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                8928358756130581276782896781228211285855331943263768176288185111880065377829
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                11296094221230007321906902566798665556326310712938157478561243271436961185939
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                4270203435103829510210885065469080215759206247600073141969144340825736456361
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                18435513468464898350668089458023802596061834199836906544891249686171357011496
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                1353825928133056546105071835787168542506364373349693671191581615121126233747
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                14552181871867089243248249259028502752341497337283269364895091407532060232707
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                16134962525970404894447932095148604805089607916596239986859009518831961541095
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                12912418721630015879588720063744969517312801940994098982636356180615148009133
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                10367884953135327072589416694300506531675903043698271118039737017003907416548
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                18645767054976951986441477674607729822362900191642269701059692086595011309617
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                20290438753634591112566805159744566085943118086910415955566637541975611306568
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                3616081350190366687413620745033189240584091802830669829058164649134460203062
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                1392866654032974419818610994350340752885270300830841653620814131913125942809
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                7926323714312408409342288501031785033608020789818750772083444352168852620309
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                3791333556380290364066652753532128031853997955294626527563616698625259260872
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                3628907676439037794810640678014156959914018154448361319066535585239352845219
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                7288452744039439153187019986732880627393606422995836790888938928792979430332
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                3898946817206780988021496513282121271248375416352393169747615149428446748796
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                20482389538634884293964815753989066984137903177461009416710382582511144614720
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                11258994014172499578597433237341729986035258019178718124058091521884134834133
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                6452329770023103857611525837563150030587644522618711966359232731854161969093
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                6635683706001669495270751033107447145849321869191941901164391368358042033363
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                18852624756618899688471924454580455174040214747122588704978836212290318639012
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                19668150013698798224912707568562000682376208453509380984273539880691910555900
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                2897648376529441855171451962918729606513806930163982507283513591881780437542
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                18058066682160117591143604241687402897699656641104339334068174388078565105166
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                8311780877242981974134745557347343806199562160806780762496164569715285508665
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                9739465744057100599476346315622632649775803938784339749244299845794851098068
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                16504816536031923515595107276719833176967746018194462214393291822653673414274
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                20309550876545766116130682111350015544103338784776768395329281357767924326613
            )
        }
    }
}
