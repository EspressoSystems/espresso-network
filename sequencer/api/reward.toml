[route.get_latest_reward_balance]
PATH = ["reward-balance/latest/:address"]
":address" = "Literal"
DOC = "Get current balance in reward state. Expected parameter is an Ethereum address in hex format."

[route.get_reward_balance]
PATH = ["reward-balance/:height/:address"]
":address" = "Literal"
":height" = "Integer"
DOC = "Get balance in reward state at a specific height. Expected parameters are height which is an integer and an Ethereum address in hex format"

[route.get_reward_account_proof]
PATH = ["proof/:height/:address"]
":address" = "Literal"
":height" = "Integer"
DOC = """The endpoint returns the Merkle proof for a reward account at a given block height, 
where :address is the account address and :height is the block height. For protocol versions 
up to and including V3, the response is a `RewardAccountQueryDataV1` type, which contains 
the account balance and a `RewardAccountProofV1`. This proof is derived from 
`RewardMerkleTreeV1`, which uses the SHA3 hashing algorithm. Starting from protocol version V4 
and above, the endpoint returns a `RewardAccountQueryDataV2` type, containing the balance 
and a `RewardAccountProofV2`. This proof is based on `RewardMerkleTreeV2`, which uses the 
Keccak256 hashing algorithm."""


[route.get_reward_account_proof_sol]
PATH = ["proof/solidity/:height/:address"]
":address" = "Literal"
":height" = "Integer"
DOC = """The endpoint returns the Merkle proof for a reward account in a Solidity-compatible 
format, where :address is the account address and :height is the block height. The response 
is an `AccruedRewardsProof` type, which contains the proof as a list of 32-byte hash siblings."""